                                          Type:  %08lx-%04hx-%04hx-%02hx%02hx-%02hx%02hx%02hx%02hx%02hx%02hx
                                      Checksum:  0x%08lx
 (open failed)
 A^_^
 A^A\_
 A^A]_
 A_A^_
 A_A^A\
 A_A^A\_^
 A_A^A]A\_
 A_A^A]A\_^]
 H3E H3E
 m_osdi.m_osdspd = { Ver.Size=%d.%d, IncursSeekPenalty=%d };
 MBCS
 Microsoft Corporation. All rights reserved.
 Operating System
 RETAIL
 Windows
!@8-x
!A !A$
!l$8A
!This program cannot be run in DOS mode.
#BadFileName#
$FlushFS
%-*.*s
%*.*s <%-*.*s>:  
%*.*s <0x%0*I64x,%3i>:  
%.*s%s
%0*I64X
%0.3f
%08lx-%04hx-%04hx-%02hx%02hx-%02hx%02hx%02hx%02hx%02hx%02hx
%hs%hs
%hs() failed with hr=%#x
%hs() FindFirstFile say that '%s' is %Id bytes.
%hs(): Not an auto-recovery snapshot. Doing nothing.
%hs(): The input database name was not set!
%hs: Failed allocating EseShadowInformation.
%hs: No writer found.
%i (0x%08x)
%I64d
%I64i (0x%016I64x)
%I64u
%I64u (0x%0*I64x)
%I64u.%03I64u
%ls\%lstmp.%ls
%S (0x%08x:0x%016I64x)
%s ctor
%s dtor
%s ErrFlushFileBuffers
%s ErrIOIssue iom=%u
%s ErrIORead ib=%llu cb=%u fZeroed=%s fCachedFileHeader=%s iom=%d
%s ErrIOTrim ib=%llu cb=%llu
%s ErrIOWrite ib=%llu cb=%u fZeroed=%s fCachedFileHeader=%s iom=%d
%s ErrRename %S fOverwriteExisting=%s
%s ErrSetSize %llu -> %llu
%s loaded.
%s unloaded
%s:  pinst %s failed to do operation (ioctl=%d) with error %s (0x%x).
%s:  pinst %s failed to query the allocated region from %#I64x with error %s (0x%x).
%s:  pinst %s failed to set file size with error %s (0x%x) at offset %I64d.
%s\%s*.%s
%u (0x%08x)
%ws version %d.%02d.%04d.%04d (%ws)
%ws%ws
%ws[%I32u.%I32u.%I32u.%I32u]
( CioreqIOHeap() + 1 ) <= m_cioreqMax
( State().m_cw & 0x00007fff ) != 0x00007fff
( State().m_cw & 0xffff0000 ) != 0xffff0000
(|$ H
(A^_^[
(D9=_
(t$pL
)D$ A
)L$0H
.00cfg
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.data
.data$brc
.edata
.gehcont
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$brc
.rdata$T$brc
.rdata$voltmd
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.tls$
.tls$ZZZ
.xdata
::$ATTRIBUTE_LIST
?L!uwA
@.data
@.reloc
@.rsrc
@8-0~
@8H9E
@A^_^
@A^A\_
@A_A^_
@A_A^_^]
@A_A^A\
@A_A^A\_]
@A_A^A]A\_^]
@A1G`A
@SUVWATAUAVAWH
@SUVWATAVAWH
@SUVWAVH
@SUVWH
@SVWH
@UATAUAVAWH
@UAUAWH
@UAVAWH
@USVWATAUAVAWH
@USVWATAVAWH
@USVWAVAWH
@USVWAVH
@USWAVAWH
[%ws %03x.%03x %04d/%02d/%02d-%02d:%02d:%02d.%d]  
[%ws %03x.%03x %04d/%02d/%02d-%02d:%02d:%02d]  
[%ws %03x.%03x %I64d]  
\$ E3
\$ UH
\$ UVWATAUAVAWH
\$ UVWAVAWH
\$ UVWH
\$ VWAVH
\$(E3
\$(H;
\$@E3
\$@I9
\$0E3
\$8E3
\$HE3
\$Pt"D
\\.\PhysicalDrive%u
\Debug\ESE.TXT
\vI69
__C_specific_handler
__dllonexit
__super::Initialize( EseRecoveryWriterId, EseRecoveryWriterName, VSS_UT_USERDATA, VSS_ST_OTHER )
_amsg_exit
_initterm
_lock
_onexit
_purecall
_unlock
_vsnprintf
_vsnwprintf
_wcsicmp
_wcsnicmp
_wfullpath
_wmakepath_s
_wsplitpath_s
_wtol
_XcptFilter
`.rdata
`A^_^
`A^_^][
`A_A^_^]
`A_A^A]A\_^]
{ ATAVAWH
{ AVH
|$ AVH
|$ E3
|$ UAVAWH
|$(E3
|$@Xw
|$0E3
|$8H!\$0H
|$XE3
|$xE3
+G Hc
<not used>
<null>
0 == cbData % OSMemoryPageCommitGranularity()
0123456789
0123456789abcdef
040904B0
0A^_^
0A_A^_
0A_A^_^]
0A_A^A\
0A_A^A\_^
0A_A^A\_^][
0A_A^A]_^
0A_A^A]A\_
0A_A^A]A\_^]
0x%0*I64X bytes @ 0x%0*I64X
0x%016I64x
0x%08x
0x%08x-0x%016I64x-0x%08x
10.0.22621.1
10.0.22621.1 (WinBuild.160101.0800)
3H9Q(v%3
5Rich
8/u"H
8_^][
9\$0u
9{$u/3
9}XtmA
92t$I
9B4ueI9@ t_I
9i@|S
9t$@t8E
A)H!A(
A^_^[]
A^_^][
A^A]_
A^A]A\_]
A_A^]
A_A^_
A_A^_[]
A_A^_^[]
A_A^_^]
A_A^A\
A_A^A\_^
A_A^A\_^[]
A_A^A\_^][
A_A^A]_]
A_A^A]_^
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^][
A`!Ah!Al
A0HcH
A1F`M
AcquireSRWLockExclusive
Add Ref Disk p=%p, PathId=%ws, Cref=%d
Add Ref Volume p=%p, Path=%ws, CanonicalPath=%ws, Cref=%d
Add[Fast] Ref Disk p=%p, PathId=%ws, Cref=%d
Adding '%s' to the file group
Adding directory '%s' (file=*) to the file group
AdjustTokenPrivileges
advapi32.dll
AllocationlessInsertShouldSucceed
AllocationlessInsertShouldSucceedPossDupEntry
api-ms-win-appmodel-runtime-l1-1-0.dll
api-ms-win-appmodel-state-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-localization-l1-1-0.dll
api-ms-win-core-localregistry-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-psapi-l1-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-threadpool-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-lsalookup-l2-1-0.dll
AssertFail: %ws, %hs
AssertTrackTag%s%s
ATAVAWH
ATD9-Dt
b9=*g
BE@I+
BE8I+
Beta Feature %d staging value %d (usbsmCurrent = %d).
Bit-Field
cbRunT < ulMax
CloseHandle
CloseState
CloseThreadpoolTimer
CoInitializeEx
CombinedIoRunShouldMatchInsertTargetFileId
CombinedIoRunShouldMatchInsertTargetOffset
CompanyName
CopyFileExW
COSDisk::Flush[%8x] Res: %d Delta: +%8.3f +(%8.3f op) - %I64d - %ws
COSFile::ErrIOGetAllocatedRange
COSFile::ErrIOSetFileSize
COSFile::ErrRename() %ws --> %ws
COSFile::Flush Failed[%8x] err %d (error %d) - %ws
Could not allocate a Kernel Semaphore
CoUninitialize
Created Disk p=%p, PathId=%ws
Created Volume p=%p, Path=%ws, CanonicalPath=%ws
CreateDirectoryW
CreateEventW
CreateFileMappingW
CreateFileW
CreateIoCompletionPort
CreateMutexW
CreateSemaphoreExW
CreateSemaphoreW
CreateThread
CreateThreadpoolTimer
CreateVssBackupComponents( &pvbc )
CreateVssBackupComponentsInternal
CreateWriter
D$ E3
D$ H!>L
D$ H9
D$ H9D$(A
D$ I;
D$ I9
d$ L!t$@L
D$(E3
d$(E3
D$(E3
D$(H9B
D$(I;
D$(I9@
D$(I9B
D$@!|$ H
D$@E3
D$@H;
D$`E3
D$0!t$(H!t$ H
D$0E3
D$8E3
D$8H!\$0H
D$HE3
D$PE3
D$pE3
D$PL;
D$rfA;
D$xf;
D$XH9|$PH
D$zf+
D$zfA;
D;d$H
D+s H
D>HH9C8s
D>HL;
D9%!q
D9%4(
D9=7a
D9=94
D9=Xa
D9A t
D9-D_
D9J8}]
D9l$8tP
D9-o_
D9p@|
D9-Z_
DD$PH
DebugBreak
Del Ref Disk p=%p, PathId=%ws, Cref=%d
Del Ref Volume p=%p, Path=%ws, CanonicalPath=%ws, Cref=%d
DeleteCriticalSection
Deleted Disk p=%p, PathId=%ws
Deleted Volume p=%p, Path=%ws, CanonicalPath=%ws
DeleteFileW
Device name is %s.
DeviceIoControl
DisableThreadLibraryCalls
DllMain
ds\esent\src\noncore\eseshadow\eseshadow.cxx
ds\esent\src\noncore\eseshadow\esewriter.cxx
DuplicateHandle
e A_A]]
e A_A^]
e A_A^A]A\]
E(=csm
e0A_A^A]A\]
E1H!]
E8=csm
EH=csm
Eh=csm
EnforceFail: %ws, %ws, %hs
EnterCriticalSection
Entering %hs (and returning true).
Entering %hs( %s ).
Entering %hs.
ePA_A^A]A\]
err != errDiskTilt
ErrFileCreate( %ws, 0x%x ) -> 0x%p{0x%p} )
ErrFileOpen( %ws, 0x%x ) -> 0x%p{0x%p} )
Error: Could not fetch the requested object.
ErrOSFileIIoControlReadOnly
ErrOSFSCreate( &pfsapi )
EseNoLo
EseNoLo-S%d-E%d
ESENT
ESENT.dll
EseRecoveryWriter
EseRecoveryWriter::CreateWriter
EseRecoveryWriter::DestroyWriter
EseRecoveryWriter::GetSingleton()->Initialize()
EseRecoveryWriter::Initialize
EseRecoveryWriter::OnAbort
EseRecoveryWriter::OnBackupComplete
EseRecoveryWriter::OnBackupShutdown
EseRecoveryWriter::OnFreeze
EseRecoveryWriter::OnIdentify
EseRecoveryWriter::OnPostRestore
EseRecoveryWriter::OnPostSnapshot
EseRecoveryWriter::OnPrepareBackup
EseRecoveryWriter::OnPrepareSnapshot
EseRecoveryWriter::OnPreRestore
EseRecoveryWriter::OnThaw
EseRecoveryWriter::RecoverEseDatabase
EseRecoveryWriter::Uninitialize
eseshadow.dll
EseShadowCreateShadow
EseShadowCreateShadow ran out of memory!
EseShadowCreateSimpleShadow
EseShadowCreateSimpleShadow ran out of memory!
EseShadowICreateShadow
EseShadowICreateShadow was successful!
EseShadowICreateShadow( pvbc, szArbitraryFile, NULL, NULL, &pesi->m_vssIdSnapshotSet, &pesi->m_vssIdDbSnapshot, &pesi->m_vssIdLogSnapshot, &pesi->m_vssIdSystemSnapshot )
EseShadowICreateShadow( pvbc, szDatabaseFile, szLogDirectory, szSystemDirectory, &pesi->m_vssIdSnapshotSet, &pesi->m_vssIdDbSnapshot, &pesi->m_vssIdLogSnapshot, &pesi->m_vssIdSystemSnapshot )
EseShadowIMountShadow
EseShadowIMountShadow( pvbc, pesi->m_vssIdDbSnapshot, pesi->m_databaseFile, szOutDatabasePath, cchOutDatabasePath )
EseShadowIMountShadow( pvbc, pesi->m_vssIdLogSnapshot, pesi->m_logFilePath, szOutLogPath, cchOutLogPath )
EseShadowIMountShadow( pvbc, pesi->m_vssIdSystemSnapshot, pesi->m_systemFilePath, szOutSystemPath, cchOutSystemPath)
EseShadowInit
EseShadowMountShadow
EseShadowMountSimpleShadow
EseShadowPurgeShadow
EseShadowPurgeShadow() called with a NULL context!
EseShadowTerm
esevss
esevss.pdb
EventRegister
EventUnregister
EventWrite
EventWriteTransfer
EX=csm
Ex=csm
ExclusiveIoAcquireTooLong
EXH!}
F`@u+H
F`3A`%
F`A3G`%
F9t$@t
fA9<Hu
fA98t*H
fAdded
Failed GetFinalPathNameByHandleW( %s ): returned %d.
Failed GetVolumePathNameW( %s ): returned %d.
Failed S.M.A.R.T. load: %hs 
Failed to create temporary log file %s: Error %d.
Failed to open %s: Error %d.
Failed! %hs returned err = %#x, [%hs %hs:%d]
Failed! %hs returned hr = %#x, [%hs %hs:%d]
FAILED: DevIoCtrl( query prop \ %hs ) -> %d / %d / %d in %I64u us 
False
fD98t
FFbError:%I32u
FfbFailedWithSuccess
Fields:
FILE_FLAG_NO_BUFFERING
FILE_FLAG_RANDOM_ACCESS
FILE_FLAG_WRITE_THROUGH
FileDescription
FilesComponent
FileVersion
FindClose
FindFirstFileW
FindFirstVolumeW
FindNextFileW
FindNextVolumeW
FindVolumeClose
FirewallTag%s%s
FlushFileBuffers
FORMAT STRING FAIL
FormatMessageW
Found a suitable writer to invoke: %s
FoundIoKeyAndObjectMismatchFileId
FoundIoKeyAndObjectMismatchOffset
FoundIoKeyShouldNotBeMaxNotFound
FreeLibrary
G:f;C
G`A3F`
GD$pI;
GetCompressedFileSizeW
GetCurrentPackageFullName
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetDiskFreeSpaceExW
GetDriveTypeW
GetExitCodeThread
GetFileAttributesExW
GetFileAttributesW
GetFileInformationByHandle
GetFileInformationByHandleEx
GetFileSizeEx
GetFinalPathNameByHandleW
GetFullPathNameW
GetLastError
GetLocalTime
GetLogFileSizeAndExtensionFromDirectoryAndBaseName
GetLogicalProcessorInformationEx
GetModuleFileNameW
GetModuleHandleW
GetNativeSystemInfo
GetNLSVersionEx
GetOverlappedResult
GetProcAddress
GetProcessHeap
GetProcessMemoryInfo
GetQueuedCompletionStatus
GetSnapshotDeviceName( szVolume, &szDeviceName )
GetStateFolder
GetSystemInfo
GetSystemTime
GetSystemTimeAsFileTime
GetSystemWindowsDirectoryW
GetTempFileNameW
GetTempPath2W
GetTempPathW
GetThreadIdealProcessorEx
GetTickCount
GetVersionExW
GetVolumeInformationW
GetVolumeNameForVolumeMountPointW
GetVolumePathNameW
GetWindowsDirectoryW
Global\{5E5C36C0-5E7C-471f-84D7-110FDC1AFD0D}
GlobalMemoryStatusEx
GPH9APL
GPT:%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X
H UWAVH
H!]7H!]
H!|$`I
H!|$pH
H!D$ L
H!G H
H!G(H
H!l$0D
H!L$0I
H!p8E3
H!t$0H
H!xHH
H!xHH!
H;_(r
H;C0s2H
H;l$psFL;t$pvFH
H;Q(r:Hc
H;s(r
H`!V`
H+CPH
H+D$XH
H+EhH
H+yHH
H8H9M
H9.uG
H9_(t
H9_Xt
H9A@t*H
H9A`t
H9Aht
H9AHt*H
H9AHu
H9C`u
H9Cxs
H9D$pH
H9E@H
H9E8H
H9k u
H9K`t
H9Khu
H9L$8s&
H9l$xw
H9s(v
H9w8u+L
H9x0u
H9xHt
H9Y u
H9Y(v)
HASHED LRUK CACHE HEADER:
HcB H
HcC Ic
HcG H
HcG I
HcQ<H
HD9}Ht
Heap A
Heap A&B
Heap B
HeapAlloc
HeapDestroy
HeapFree
HeapSetInformation
hrStatus
I!Q8H
I(LcJ8
I;@Pt
I;Q(r
I\$0H
I+}PH
I0LcJ8
I8L+H8u
Image:              "%ws"
InitializeCriticalSectionAndSpinCount
InternalName
IO, IO-Completion, %I64X, IOR, %s, %d, %s, %d, %s, %d, 0x%x, OP, %s, 0x%016I64X, 0x%08X, Err=%d, Disp=%d, %d, 0x%x, TM, %I64u, %lu, for TID 0x%x, EngineFile=%d:0x%I64x, Fmf=0x%x
IOREQ-Heap-Dequeue, %I64X:%016I64X, for TID 0x%x IOR, %d, %d, %d, 0x%x, from I/O Heap %hs, OP, %s, 0x%08X, 0x%I64x, %I64u, EngineFile=%d:0x%I64x, ql=%d
IOREQ-Heap-Enqueue %I64X:%016I64X for TID 0x%x into I/O %hs (%s at %016I64X for %08X bytes), EngineFile=%d:0x%I64x ql=%d
isprint
IsProcessorFeaturePresent
iswalpha
J(A)A
JBCAUX
JetGetDatabaseFileInfoW
JetGetDatabaseFileInfoW( szNewDbName, &cbPage, sizeof( cbPage ), JET_DbInfoPageSize )
JetInit3W
JetInit3W( &instance, &rstInfo, grbit )
JetSetSystemParameterW
JetTerm2
JustFoundIoCouldntDelete
JustFoundIoMismatchFileId
JustFoundIoMismatchOffset
K SVWH
K UWATAUAVH
kernel32.dll
KERNEL32.dll
kernel32.dll
kernelbase.dll
L!\$`
L!c0H
L!d$xI
L!l$ H
L$ H;
L$ L#
L$ SVWAVH
L$ UH
L$ USVWAVAWH
L$ UVWATAUAVAWH
l$ VWATAVAWH
l$ VWAUAVAWH
l$ VWAVH
l$(E3
L$@E3
L$@H!>L
L$@H3
L$@L#
L$`H3
L$`L;
L$0H+
L$0H3
L$8E3
L$8fE
l$8H!t$0H
L$8H3
L$HH3
L$hH3
L$HH3
L$hH3
l$hL;
L$PD+
L$pD9N
L$PE3
L$pH+
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PI9~8u0L
L$TE3
L$XH3
L;`8u
L;p8t9
L9%7(
L9[`tf
L9>t9
L9c0u
L9Hpu
L9K u
LcA<E3
LcC I
LCMapStringEx
LD$`Lc
LeaveCriticalSection
Leaving %hs (returning %#x).
Leaving %hs (returning %d).
Leaving %hs (returning hr=%#x).
Leaving %hs.
LegalCopyright
LoadLibraryExW
LocalAlloc
LocalFree
Long IO, %I64u msec, fReport = %d
Looking at writer GUID %s.
LookupPrivilegeValueW
m_cAvail
m_cCurrent
m_cEntry
m_cOAOWW
m_cOAWX
m_cOOW1
m_cOOW2
m_cOOWR
m_cOOWS
m_cOwner
m_cQS
m_cQuiesced
m_cWait
m_cWaitNeg
m_dwPartitionCompleteKey
m_fQ1
m_fQ2
m_fQR
m_fQS
m_fQW
m_fSet
m_groupCurrent
m_groupQuiesced
m_handle
m_irksem
m_pclsOwner
m_pfnPartitionComplete
m_sem
m_sem1
m_sem2
m_semReader
m_semS
m_semW
m_semWriter
m_semX
M9Hpu
malloc
MapViewOfFileEx
MBR:%08X
memcpy
memmove_s
memset
Meted Queue
MH!uw
Microsoft
Microsoft Corporation
Microsoft(R) ESENT shadow utilities
MoveFileExW
msvcrt.dll
MultiIorp
MultiIors
MultiIoru
Need to provide a database name!
ntdll.dll
NtQueryInformationProcess
NtQuerySystemInformation
NtQueryVolumeInformationFile
O8L9o(u!H
onecore\ds\esent\published\inc\sync.hxx
onecore\ds\esent\src\os\blockcache\_cachebase.hxx
onecore\ds\esent\src\os\blockcache\_cachedfileheader.hxx
onecore\ds\esent\src\os\blockcache\_cachefactory.hxx
onecore\ds\esent\src\os\blockcache\_cacheheader.hxx
onecore\ds\esent\src\os\blockcache\_cacherepository.hxx
onecore\ds\esent\src\os\blockcache\_cachethreadlocalstorage.hxx
onecore\ds\esent\src\os\blockcache\_filefilter.hxx
onecore\ds\esent\src\os\blockcache\_fileidentification.hxx
onecore\ds\esent\src\os\blockcache\_filewrapper.hxx
onecore\ds\esent\src\os\blockcache\_fsfilter.hxx
onecore\ds\esent\src\os\blockcache\_fswrapper.hxx
onecore\ds\esent\src\os\blockcache\_hashedlrukcache.hxx
onecore\ds\esent\src\os\blockcache\_hashedlrukcacheheader.hxx
onecore\ds\esent\src\os\blockcache\_headerhelpers.hxx
onecore\ds\esent\src\os\blockcache\_passthroughcache.hxx
onecore\ds\esent\src\os\blockcache\_passthroughcachedfiletableentry.hxx
onecore\ds\esent\src\os\error.cxx
onecore\ds\esent\src\os\library.cxx
onecore\ds\esent\src\os\osblockcache.cxx
onecore\ds\esent\src\os\osdisk.cxx
onecore\ds\esent\src\os\osfile.cxx
onecore\ds\esent\src\os\osfs.cxx
onecore\ds\esent\src\os\reftrace.cxx
onecore\ds\esent\src\os\string.cxx
onecore\ds\esent\src\os\sysinfo.cxx
onecore\ds\esent\src\os\task.cxx
onecore\ds\esent\src\os\thread.cxx
onecore\ds\esent\src\os\trace.cxx
onecore\ds\esent\src\sync\sync.cxx
OnPostSnapshot() begin.
OpenFileById
OpenProcessToken
OpenState
OpenThread
OriginalFilename
OS CreateFileW( path, %#x, %#x, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL | FILE_FLAG_OVERLAPPED | %hs | %hs, NULL )
OutOfReservedIoreqs
OutputDebugStringA
p AWH
p WATAUAVAWH
p#ZVg
p_osf == piorun->P_OSF()
p`Vvr
p+VxK
p0R^G'
PA^_^
pA_A^_^]
pA_A^A]A\_^]
pAsync->Wait()
pComponent->GetComponentInfo( &pInfo )
pfnIOComplete || !pioreq
pfsapi->ErrGetTempFileName( wszTempPath, L"ewe", wszDefaultTempDB )
pfsapi->ErrGetTempFolder( wszTempPath, _countof( wszTempPath ) )
pioreqBaseMid->ibOffset != pioreqToAddMid->ibOffset
pMetadata->AddComponent( VSS_CT_FILEGROUP, NULL, szComponent, L"recovered_database", NULL, 0, false, true, true, true, VSS_CF_BACKUP_RECOVERY | VSS_CF_APP_ROLLBACK_RECOVERY )
pMetadata->AddFilesToFileGroup( NULL, szComponent, g_eseRecoveryWriterConfig.m_szDatabasePath, L"*", false, NULL )
pMetadata->AddFilesToFileGroup( NULL, szComponent, g_eseRecoveryWriterConfig.m_szLogDirectory, L"*", false, NULL )
pMetadata->AddFilesToFileGroup( NULL, szComponent, g_eseRecoveryWriterConfig.m_szSystemDirectory, L"*", false, NULL )
pMetadata->GetComponent( iComponent, &pComponent )
pMetadata->GetFileCounts( &cIncludeFiles, &cExcludeFiles, &cComponents )
pMetadata->GetIdentity( &idInstanceT, &idWriter, &bstrWriterName, &vssUsageType, &vssSourceType )
pMetadata->SetBackupSchema( dwBackupSchema )
pMetadata->SetRestoreMethod( VSS_RME_RESTORE_IF_CAN_REPLACE, NULL, NULL, VSS_WRE_ALWAYS, false )
PostQueuedCompletionStatus
pQ[X[
pQR<*
Process:            "%ws"
ProductName
ProductVersion
pRRx3
psapi.dll
PUTIL_THREAD_PROC( TMDispatch )
PV: %u.%u.%u.%u SV: %u.%u.%u.%u GLE: %u ERR: %d(%hs%hs:%u): %hs%hs(%u)
pvbc->AddComponent( idInstance, idWriter, pInfo->type, pInfo->bstrLogicalPath, pInfo->bstrComponentName )
pvbc->AddToSnapshotSet( szLogDrive, GUID_NULL, pvssIdLogSnapshot )
pvbc->AddToSnapshotSet( szSystemDrive, GUID_NULL, pvssIdSystemSnapshot )
pvbc->AddToSnapshotSet(szDbDrive, GUID_NULL, pvssIdDbSnapshot )
pvbc->BackupComplete( &pAsync )
pvbc->DisableWriterClasses( &guidSystemWriter, 1 )
pvbc->DoSnapshotSet( &pAsync )
pvbc->GatherWriterMetadata( &pAsync )
pvbc->GatherWriterStatus( &pAsync )
pvbc->GetSnapshotProperties( vssIdVolume, &prop )
pvbc->GetWriterMetadata(iWriter, &idInstance, &pMetadata )
pvbc->GetWriterMetadataCount(&cWriters)
pvbc->GetWriterStatus( iWriter, &idInstance, &idWriter, &bstrWriterName, &vssWriterState, &hrStatus )
pvbc->GetWriterStatusCount(&cWriters)
pvbc->InitializeForBackup()
pvbc->PrepareForBackup( &pAsync )
pvbc->SetBackupState( true, false, VSS_BT_FULL, true )
pvbc->SetContext( VSS_CTX_BACKUP | VSS_VOLSNAP_ATTR_ROLLBACK_RECOVERY )
pvbc->StartSnapshotSet( pvssIdSnapshotSet )
q!ZX!
q#ZVg
q)Vv?
q:_0#
q`Vvr
q+VxK
q0R^G'
q1Q8"&
qBUp^
qH]:S
qkPv'
qKSxt?
qQR<*
QueryPerformanceCounter
QueryPerformanceFrequency
QueryWorkingSetEx
QueueUserWorkItem
RaiseFailFastException
rand_s
ReadFile
ReadFileScatter
recovered_database
RecoverJetDB successfully replayed the logs.
RegCloseKey
RegCreateKeyExW
RegDeleteValueW
RegOpenKeyExW
RegQueryValueExW
RegSetValueExW
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
RemoveDirectoryW
ResumeThread
RPCRT4.dll
RpcStringFreeW
RtlCaptureContext
RtlCaptureStackBackTrace
RtlCompressBuffer
RtlDecompressBuffer
RtlGetCompressionWorkSpaceSize
RtlLookupFunctionEntry
RtlVirtualUnwind
ryH;Mhu(I
s WAVAWH
Searched00AndNotEmptyRbt
SeBackupPrivilege
SectorSizeTooBig
SeManageVolumePrivilege
SetConsoleCtrlHandler
SetEndOfFile
SetEvent
SetFileInformationByHandle
SetFilePointerEx
SetFileValidData
SetHandleInformation
SetLastError
SetThreadErrorMode
SetThreadpoolTimer
SetThreadPriority
SetThreadPriorityBoost
SetUnhandledExceptionFilter
SingleIorp
SingleIors
SingleIoru
Sleep
SleepConditionVariableSRW
SleepEx
SmallDurationLargerThan35MinTruncation
SmallDurationNotSoSmallTruncation
SmartData
Snapshot database file: %s
Snapshot log directory: %s
Snapshot system directory: %s
StorageDeviceSeekPenaltyProperty
strcspn
StringCchCatW( szOutPath, cchOutPath, fullPath )
StringCchCopyW( szOutPath, cchOutPath, pProp->m_pwszSnapshotDeviceObject )
StringCchPrintfW( szOutPaths[ i ], _countof( szOutPaths[ i ]), L"%s%s", szDeviceName, szRelativePathFromRoot )
StringCchPrintfW( szStr, cch, L"{%s}", strGuid )
StringFileInfo
strrchr
strstr
strtoul
Subscribe()
SUVWATAUAVAWH
SUVWATAVAWH
swprintf_s
System\Setup
SystemSetupInProgress
t @85
t$ UWAUAVAWH
t$ WATAUAVAWH
t$ WAVAWH
t$ WH
t$(E3
t$(H!\$ H
t$@E3
T$@E3
t$@H;
t$@Ic
t$0fD
T$0fD
T$0H+
t$895|k
T$8fA;
t$8Hc
t$D9H
T$HE3
T$PA;
T$PE3
t$XH!t$PL
t.D9A
t?D9B
t\D8=
t]95< 
t{9=7
t}H;kHuoH
t1H;;v,H
taD9%
te95Z
TerminateProcess
tF9= h
tGf9:tB
tHD9=
ThereCanBeOnlyOne
tJ9=~g
tk9=+
TlsAlloc
TlsFree
TlsGetValue
TlsSetValue
tM950 
tOD9%
Too many active threads/workers in this section, must quit to avoid consistency issues!
Too many threads are attached to the Synchronization Library!
Trace File:         "%ws"%s
TrackFileError: %d, %d
TrackFileWriteError: %d, %d, %I64d
TransferShouldLeaveBuildingQEmpty
Translation
tU95N
tV9=,h
tXD9=
tZD9=&a
u%@8-
u%D8-
u&!3L
u&@8-
u&D8-1
u)@8=+|
UATAUAVAWH
UAVAWH
uBH!T$@L
uHD95
uID9=
uiD95
Underflow of a metered section, left a group we didn't enter!!!
uNH9SPvH
UnhandledExceptionFilter
UnhandledProcessIoErr=%d
UNKNOWN.PTH
UnknownQ
UnmapViewOfFile
Unsubscribe()
uQD9=
uR9=Zb
Usage: Dump <Object> <Address> [<Depth>|*]
USVWATAUAVAWH
UuidToStringW
UuidToStringW( &vssId, &strGuid )
UVWATAUAVAWH
UVWAVAWH
UWATAVAWH
UWAUAVAWH
UWAVH
uXD9%
'v%H;
V~6>E
VarFileInfo
VIP List
VirtualAlloc
VirtualFree
VirtualProtect
VirtualQueryEx
Volume=%ws, eosDiskType = %d, fFixed = %d
vprintf
VS_VERSION_INFO
VSS Database dir ID = %s
VSS Log dir ID = %s
VSS Snapshot ID = %s
VSS System dir ID = %s
VSSAPI.DLL
VssFreeSnapshotPropertiesInternal
VssIdToString
VssIdToString( *pvssIdSnapshotSet, szID, ARRAYSIZE(szID ) )
VssIdToString( idWriter, szID, _countof( szID ) )
VssIdToString( pesi->m_vssIdDbSnapshot, szID, _countof( szID ) )
VssIdToString( pesi->m_vssIdLogSnapshot, szID, _countof( szID ) )
VssIdToString( pesi->m_vssIdSnapshotSet, szID, _countof( szID ) )
VssIdToString( pesi->m_vssIdSystemSnapshot, szID, _countof( szID ) )
VssIdToString( vssIdVolume, szID, ARRAYSIZE( szID ) )
VWATAVAWH
VWAUAVAWH
VWAVH
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
WakeAllConditionVariable
Warning: g_eseRecoveryWriterConfig->m_szDatabaseFileFullPath is NULL.
WARNING: Volume=%ws is not detected as fixed, MemoryMapping operations will all be forcibly COW'd
WATAUAVAWH
WATAVH
WAUAVH
WAVAWH
wcscpy_s
wcsncmp
wcspbrk
wcsrchr
wjD9=
wprintf
write
WriteFile
WriteFileGather
x ATAVAWH
x AVH
x UATAUAVAWH
x8H+y@u
XA_A^A]A\_^[]
xA_A^A]A\_^[]
XA_A^A]A\_^][
XlogH
y!@8-
y!@8-0
y!@8-T
y!D8%
y!D8%?
y!D8%_
y!D8%A
y!D8%b
y!D8%K
y(D8=
y*D8%
y+D8%
yAD8%
yF@8-
yFD8=
yFD8=X
yG@8-
yJ@8=
yJD8-
