 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 A_A^_
 DirectMapFaultClusterSizeInPages
 http://www.microsoft.com/windows0
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!\$8H
!]#!]3H
!]_0t
!|$8H
!|$HH
!D$\H
!Error
!File
!Flags
!Function
!ioControlCode
!IOCTL
!Line
!ObjectName
!ObjectNameCharCount
!requiredSize
!result
!This program cannot be run in DOS mode.
!TkjE
!totalSize
"Microsoft Window
$Microsoft Ireland Operations Limited1
$Microsoft Ireland Operations Limited1&0$
%Microsoft Windows Production PCA 2011
%Microsoft Windows Production PCA 20110
%s:%s
%s\%s
&S|9a
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverCloneTemplateDestroyDetached) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverCloneTemplateDetach) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverCpuGroupCreate) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverCpuGroupDelete) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverCpuGroupGetProperty) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverCpuGroupSetProperty) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverGetRootReferenceTime) | (0x0 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverMapHvStatsPageGlobal) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverMapHvStatsPageRoot) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverMemPartEnumerate) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverMemReserveAdd) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverMemReserveIoSpaceAdd) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverMemReserveIoSpaceConvert) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverMemReserveIoSpaceRelease) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverMemReserveRelease) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverMemReserveTargetGet) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverMemReserveTargetSet) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverNumaGetProcessorTopology) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverNumaGetTopology) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverPhuFreePersistedData) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverStatisticsMap) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverStatisticsMapMemoryPartition) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverStatisticsMapNuma) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverStatisticsUnMap) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverStatisticsUnMapMemoryPartition) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverStatisticsUnMapNuma) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverStatsGetLogicalProcCount) | (0x0 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverStatsGetLogicalProcRuntime) | (0x0 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverStatsGetVpRuntime) | (0x0 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverUnmapHvStatsPageGlobal) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlDriverUnmapHvStatsPageRoot) | (0x0 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionAdjustNestedTlbSize) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionAssertInterrupt) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionAttach) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionChangeLifeState) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionCheckForIoIntercept) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionClearInterrupt) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionCloneTemplateCreate) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionCloneTemplateDestroy) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionControlGpaAccessTracking) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionCreateDaxFileMemoryBlock) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionCreateMemoryBlock) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionCreateMemoryBlockGpaRange) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionCreateMmioGpaRange) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionCreateSynicPort) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionCreateVaGpaRange) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionCryptEncryptDecryptData) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionCryptGetSecurityCookie) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionCryptGetSession) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionCryptKeysInitialize) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionCryptKeysRelease) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDbgProtectMemoryBlockDisable) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDbgProtectMemoryBlockEnable) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDbgProtectMemoryBlockGetBitmap) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDepositPartitionMemory) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDestroyGpaRange) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDestroyMemoryBlock) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDestroySynicPort) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDetach) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDmBalloon) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDmConsolidationDisable) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDmConsolidationEnable) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDmHotAdd) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDmHotAddUndo) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDmQueryBackingState) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDmSlpDisable) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDmSlpQuery) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDmSlpSetup) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDmSlpWaitForDisable) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDmUnballoon) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionDmWorkingSetModify) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionEpfRestore) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionEpfSave) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionEpfSuspendBegin) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionEpfSuspendEnd) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionExoAccessFault) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionExoBrokerReceive) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionExoControlGpaAccessTracking) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionExoGetVirtualProcessorState) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionExoInstallIntercept) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionExoMapGpaRange) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionExoPinGpaRanges) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionExoRegisterInterceptResult) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionExoSetVirtualProcessorState) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionExoUnmapGpaRange) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionExoUnpinGpaRanges) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionExoVpCreate) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionExoVpDestroy) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionExoVpMap) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionFlushMemoryBlockMapping) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionFlushMemoryBlockPageRange) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionGetHvMemoryBalance) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionGetHvPartitionId) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionGetIsolationLuid) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionGpaAccessTrackingDisable) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionGpaAccessTrackingEnable) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionInjectSyntheticMachineCheckEvent) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionIsolationInsertPages) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionMapHvStatsPageLocal) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionMapHypercallDoorbellPage) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionMapMemoryBlockPageRange) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionMapVpStatePage) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionMarkPagePoisoned) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionMemoryBlockQueryFaultClusterInfo) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionMemoryBlockReadWriteAllocateBuffers) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionMemoryBlockReadWriteDestroyBuffers) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionMemoryXferConnectClose) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionMemoryXferConnectDisable) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionMemoryXferConnectEnable) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionMemoryXferConnectOpen) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionOperationPrepare) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionOperationTeardown) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionPartitionFriendlyNameSet) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionPhuBegin) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionPhuCommit) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionPhuEnd) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionPhuOpenMemoryBlockFile) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionPhuPersistGpaRange) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionPhuPersistMemoryBlock) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionPrefetchDirectMapRanges) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionQueryInformation) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionQueryVaGpaRangeWorkingSetInfo) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionReadWriteMappedMemoryBlockPageRange) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionRegisterCpuidResult) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionRelease) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionReserve) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionReset) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSchedulerAssistRestore) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSchedulerAssistSuspend) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSetMailboxKey) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSetMemoryBlockClientNotifications) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSetMemoryBlockFlushAfterWrite) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSetMemoryBlockNotificationQueue) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSetPartitionFrequencyCap) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSetPartitionProperty) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSetPeerProcess) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSetPropertySynicPort) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSevSnpControlRestore) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSevSnpIssueNestedPspRequests) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSgxResetMemoryBlocks) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionStatisticsMap) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionStatisticsUnMap) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSuspendApply) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSuspendClear) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionTranslateGpa) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionTranslateGva) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionTriggerCreate) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionTriggerDestroy) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionTriggerUpdateParameters) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionUnmapHvStatsPageLocal) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionUnmapMemoryBlockPageRange) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionUnregisterCpuidResult) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionVsmCheckGpaPageVtlAccess) | (0x1 << 10)) << 2) | (3) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionVsmEnableVpVtl) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionVsmGetMemoryBlockProtections) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionVsmGetPartitionConfig) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionVsmPrecommitMgmtVtlPageRange) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionVsmQueryMemoryBlockProtections) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionVsmQueryProtectionsDirty) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionVsmSetMemoryBlockProtections) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionVsmSetPartitionConfig) | (0x1 << 10)) << 2) | (0) )
( ((0x00000022) << 16) | ((0) << 14) | ((VidIoctlDualGetPartitionProperty) << 2) | (3) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionGetVirtualProcessorState) | (0x1 << 10)) << 2) | (3) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionGetVirtualProcessorStatus) | (0x1 << 10)) << 2) | (0) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionMessageSlotMap) | (0x1 << 10)) << 2) | (0) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionRegisterApicEoiHandler) | (0x1 << 10)) << 2) | (0) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionRegisterCpuidHandler) | (0x1 << 10)) << 2) | (0) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionRegisterExceptionHandler) | (0x1 << 10)) << 2) | (0) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionRegisterHypervisorRestartHandler) | (0x1 << 10)) << 2) | (0) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionRegisterIoPortHandler) | (0x1 << 10)) << 2) | (0) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionRegisterMsrHandler) | (0x1 << 10)) << 2) | (0) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionRegisterTripleFaultHandler) | (0x1 << 10)) << 2) | (0) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionResetPoisonedPage) | (0x1 << 10)) << 2) | (0) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSavePartitionState) | (0x1 << 10)) << 2) | (0) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSetupMessageQueue) | (0x1 << 10)) << 2) | (0) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSetupPartition) | (0x1 << 10)) << 2) | (0) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionSetVirtualProcessorState) | (0x1 << 10)) << 2) | (3) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionStartVirtualProcessor) | (0x1 << 10)) << 2) | (0) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionStopVirtualProcessor) | (0x1 << 10)) << 2) | (0) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionTrimPartitionMemory) | (0x1 << 10)) << 2) | (0) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | (((VidIoctlPartitionUnregisterHandler) | (0x1 << 10)) << 2) | (0) )
(DWORD) ( ((0x00000022) << 16) | ((0) << 14) | ((VidIoctlDualRestorePartitionState) << 2) | (0) )
(DWORD) VID_IOCTL_HANDLE_AND_GET_NEXT
(DWORD) VID_IOCTL_MESSAGE_SLOT_HANDLE_AND_GET_NEXT
)Microsoft Root Certificate Authority 20100
,EOUuYsAhhDscRf23aEVrDNP+9Cxt3hY7MYxkKuT9Y7w=0Z
.+D8B1Qy
.00cfg
.bss$dk00
.bss$zz
.data
.data$dk00
.data$dk00$brc
.data$zz
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gfids
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$brc
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zz
.rdata$zz$brc
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.text
.text$lp00vid.dll!40_serveronly
.text$mn
.text$mn$00
.text$zy
.text$zz
.xdata
;B0s$
@.data
@.didat
@.reloc
@A_A^A]A\_^]
@dx'\
@USVWATAUAVAWH
@USVWATAVAWH
@USVWAUAVAWH
@USVWAVAWH
@USVWAVH
@USVWH
\$ E3
\$ UH
\$ UVWAVAWH
\$ UVWH
\$(E3
\$@E3
\$0E3
\$8E3
\$HE3
\\?\VidExo
__chkstk
_vsnwprintf
`.rdata
`0^0\
|$ UATAUAVAWH
|$@E3
|$8E3
|$hD;
|$HE3
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>NGdx
040904B0
0A_A^A]A\_
1(0&0
1,0*0
10.0.22621.1
10.0.22621.1 (WinBuild.160101.0800)
111019184142Z
20220506222639.801Z0
20220507030505Z
20220508030505Z0t0:
210902182341Z
210930182225Z
211028192746Z
220901182341Z0p1
229879+4675800
230126192746Z0
261019185142Z0
2y80T
300930183225Z0|1
3http://www.microsoft.com/pkiops/Docs/Repository.htm0
6\""8
661 H
6http://www.microsoft.com/Windows/Virtualization/Events
8A^_^[
A^_^[]
A_A^_^[]
A_A^_^]
A_A^A\_^[]
A_A^A]_^[]
A_A^A]A\]
A_A^A]A\_^[]
A_A^A]A\_^]
AcquireSRWLockExclusive
AcquireSRWLockShared
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-file-l2-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-io-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-perfcounters-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
as.,k{n?,
BackingPageSizeType
CacheType
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
CloseHandle
ColdDiscardHints
ColdHints
CompanyName
CompareStringW
Consumed
CreateEventW
CreateFileW
CRIM0p
crosoft Time-Stamp PCA 20100
D$ E3
D$(L+
D$@E3
d$@E3
D$@E3
D$`H!|$0E3
D$|fD
D$0E3
d$8E3
D$DDtXH
D$HE3
D$hE3
D$HE3
D$P?2
D$P~3
D$PE3
D$Ps(
D$PX,
D$T)3
D$T.4
D$T`%
D$T>1
D$T0-
D$T0/
D$Tc"
D$Tc4
D$Tg-
D$Tm!
D$Tu)
D$XE3
D$XH!\$0E3
D|$XM
DeferredCommit
DeleteCriticalSection
DeviceIoControl
DEVOBJ.dll
DevObjCreateDeviceInfoList
DevObjDestroyDeviceInfoList
DevObjEnumDeviceInterfaces
DevObjGetClassDevs
DevObjGetDeviceInterfaceDetail
DirectMapFaultClusterSizeInPages
DisableThreadLibraryCalls
DuplicateHandle
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
EnlightenedPageFaults
EnterCriticalSection
en-US
Et,@8
EventData
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
ExceptionInfo
ExceptionSyndrome
ExceptionType
FaultClusterSizeInPages
fD9$Cu
fE9,nu
fg:SM
FileDescription
FileVersion
FirstPage
Flags
FreeLibrary
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetLastError
GetProcAddress
GetProcessHeap
GetSystemInfo
GetSystemTimeAsFileTime
GetTickCount
H!|$@E3
H9L$hs
H9X t
HeapAlloc
HeapFree
HighAddress
HotHints
hresult
HypervisorMetadata
I0G1-0+
InitializeCriticalSection
InitializeSRWLock
InterceptOverrideFlags
InternalName
ioControlCode
J>f;O
KsrBlockId
KsrMemoryRunCount
KsrPersisted
L!t$@H
L$ SVWAVH
l$@E3
L$`E3
L$|E3
L$0H3
L$dE3
L$HE3
L$pfD
L$xE3
LastPage
LeaveCriticalSection
LegalCopyright
LoadLibraryExA
LowAddress
M0K0I
MbpArraySize
MbpCount
MDLNxx
MEBJY[R
memcpy
MemoryPartition
MemoryPartitionIndex
MemoryPartitionName
memset
Microsoft
Microsoft Corporation
Microsoft Corporation1
Microsoft Corporation1&0$
Microsoft Corporation1.0,
Microsoft Corporation1-0+
Microsoft Corporation1200
Microsoft Hyper-V Virtualization Infrastructure Driver Library
Microsoft Time-Stamp PCA 2010
Microsoft Time-Stamp PCA 20100
Microsoft Time-Stamp Service
Microsoft Time-Stamp Service0
Microsoft Windows0
Microsoft-Windows-Hyper-V-VID
Microsoft-Windows-Hyper-V-VID-Admin
Microsoft-Windows-Hyper-V-VID-Analytic
N0L0J
Nhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l
NodeIndex
NtDeviceIoControlFile
ntdll.dll
NtWaitForSingleObject
o\$PH
O0M0K
oD$ f
oL$0f
onecore\vm\vid\dll\src\viddll.c
onecore\vm\vid\dll\src\viddllpartition.c
onecore\vm\vid\dll\src\viddllstats.c
onecore\vm\vid\dll\src\viddriverconnect.c
OPCOT
OriginalFilename
oT$@f
PageCountToBack
Parameter0
Parameter1
Parameter2
Parameter3
Parameter4
Parameter5
Parameter6
Parameter7
Parameter8
PartitionFriendlyName
PartitionGuid
PartitionId
PartitionName
PerfCreateInstance
PerfDeleteInstance
PerfSetCounterRefValue
PerfSetCounterSetInfo
PerfStartProvider
PerfStopProvider
Phttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0
PhysicalAddress
PinBackingPages
PrivateCompressionStore
ProcessId
ProductName
ProductVersion
PRVAP
q"P0p
q:_0#
q;^vE
q\Q17
qh[zh
qKQRU
qKWXc&
qPZ|^7
qSV0n
QueryPerformanceCounter
qyV~j
R!s4Z
RaiseException
RangeCount
RangeList
Redmond1
ReleaseSRWLockExclusive
ReleaseSRWLockShared
ReOpenFile
rimary
RSDS<
RtlCaptureContext
RtlDosPathNameToNtPathName_U
RtlFreeHeap
RtlGUIDFromString
RtlLookupFunctionEntry
RtlNtStatusToDosError
RtlRbInsertNodeEx
RtlRbRemoveNode
RtlVirtualUnwind
SetLastError
SetUnhandledExceptionFilter
SkipBytes
StartGpaPage
StartMbp
Status
StringFileInfo
t$ UWAVH
t$@E3
t$8E3
t$HE3
T$PE3
T$XA;
T$XE3
T$xE3
T$XfD
T^r|B
t+HcC<
TEMP`
TEMP0
TEMP4
TEMPl
TEMPL
TEMPp
TEMPP
TerminateProcess
Thales TSS ESN:D082-4BFD-EEBA1%0#
ThreadId
TlP0X
TotalBytes
TotalPageCount
TotalPages
TotalRemotePageCount
Translation
U0S0Q
UATAUAVAWH
UnhandledExceptionFilter
uOi@Y
UVWATAUAVAWH
UVWAVAWH
UWAVH
UWAWH
VarFileInfo
VID DLL - Error
VID DLL - IOCTL Failed
vid.dll
vid.pdb
VID_IOCTL_GET_SYSTEM_INFORMATION
VID_IOCTL_POPULATE_CPUID_INFORMATION
VID_IOCTL_READ_MEMORY_BLOCK_PAGE_RANGE
VID_IOCTL_SCHEDULER_ASSIST_SAVE
VID_IOCTL_SET_SYSTEM_INFORMATION
VID_IOCTL_SEVSNP_CONTROL_SAVE
VID_IOCTL_WRITE_MEMORY_BLOCK_PAGE_RANGE
VidAdjustNestedTlbSize
VidAllocateMemoryBlockReadWriteBuffers
VidAssertVirtualProcessorInterrupt
VidAttachPartition
VidChangePartitionLifeState
VidCheckForIoIntercept
VidClearVirtualProcessorInterrupt
VidCloneTemplateCreate
VidCloneTemplateDestroy
VidCloneTemplateDestroyDetached
VidCloneTemplateDetach
VidCloseStatisticsHandle
VidControlGpaAccessTracking
VidCreateCpuGroup
VidCreateDaxFileMemoryBlock
VidCreateExoPartition
VidCreateMemoryBlock
VidCreateMemoryBlockGpaRange
VidCreateMmioGpaRange
VidCreatePartition
VidCreateSynicPort
VidCreateVaGpaRange
VidDeleteCpuGroup
VidDeletePartition
VidDepositPartitionMemory
VidDestroyGpaRange
VidDestroyGpaRangeCheckSecure
VidDestroyGpaRangeInternal
VidDestroyMemoryBlock
VidDestroyMemoryBlockReadWriteBuffers
VidDestroySynicPort
VidDetachPartition
VidDllPartitionContextGet
VidDllPartitionTrack
VidDllPartitionUntrack
VidDllStatsGetPartitionCounters
VidDllStatsGetSharedBuffer
VidDllStatsGetVmPerfRootInstance
VidDllStatsPartitionSetup
VidDllStatsPartitionTeardown
VidDllStatsPerfLibInitialize
VidDllStatspMapPartition
VidDllStatspUnMapPartition
VidDmBalloon
VidDmConsolidationDisable
VidDmConsolidationEnable
VidDmHotAdd
VidDmHotAddUndo
VidDmMemoryBlockQueryTopology
VidDmSlpDisable
VidDmSlpQuery
VidDmSlpSetup
VidDmSlpWaitForDisable
VidDmUnBalloon
VidDmWorkingSetModify
VidEncryptDecryptData
VidEpfRestore
VidEpfSave
VidEpfSuspendBegin
VidEpfSuspendEnd
VidExoAccessVaFault
VidExoBrokerReceive
VidExoBrokerSend
VidExoControlGpaAccessTracking
VidExoGetVpState
VidExoInstallIntercept
VidExoMapGpaRange
VidExoPinGpaRanges
VidExoRegisterInterceptResult
VidExoSetVpState
VidExoUnmapGpaRange
VidExoUnpinGpaRanges
VidExoVpCreate
VidExoVpDestroy
VidExoVpMap
VidFlushMemoryBlockMapping
VidFlushMemoryBlockPageRange
VidGetCpuGroupProperty
VidGetExoPartitionProperty
VidGetExoSystemInformation
VidGetExoSystemTopology
VidGetHvLogicalProcessorCount
VidGetHvLogicalProcessorRuntime
VidGetHvMemoryBalance
VidGetHvPartitionId
VidGetHvVpRuntime
VidGetIsolationLuid
VidGetMemoryBlockProtectionBitmap
VidGetPartitionIds
VidGetPartitionProperty
VidGetProcessorTopology
VidGetRootReferenceTime
VidGetRpcSession
VidGetSecurityCookie
VidGetSystemInformation
VidGetSystemTopology
VidGetVirtualProcessorRunningStatus
VidGetVirtualProcessorState
VidGetVirtualProcessorStateEx
VidGpaAccessTrackingDisable
VidGpaAccessTrackingEnable
VidHandleMessageAndGetNextMessage
VidInitEncryptionKeys
VidInjectSyntheticMachineCheckEvent
VidIoControl
VidIsolatedInsertPages
VidMapHvGlobalStatsPage
VidMapHvLocalStatsPage
VidMapHvRootStatsPage
VidMapHypercallDoorbellPage
VidMapMemoryBlockPageRange
VidMapMemoryBlockPageRangeEx
VidMapVpStatePage
VidMarkPagePoisoned
VidMemPartEnumerate
VidMemPartGetIndexFromName
VidMemPartGetNameFromIndex
VidMemReserveGetTarget
VidMemReserveIoSpaceConvert
VidMemReserveIoSpacePagesAdd
VidMemReserveIoSpacePagesRelease
VidMemReservePagesAdd
VidMemReservePagesRelease
VidMemReserveSetTarget
VidMemXferConnectClose
VidMemXferConnectDisable
VidMemXferConnectEnable
VidMemXferConnectOpen
VidMemXferSendAsync
VidMessageSlotHandleAndGetNext
VidMessageSlotMap
VidOpenStatisticsHandle
VidpCreateVidObject
VidPhuBegin
VidPhuCommit
VidPhuEnd
VidPhuFreePersistedData
VidPhuOpenMemoryBlockFile
VidPhuPersistGpaRange
VidPhuPersistMemoryBlock
VidpInitializeSymbolicLink
VidPopulateCpuidInformation
VidPrefetchDirectMapRanges
VidpReopenVidObject
VidPreparePartitionOperation
VidProtectMemoryBlockPages
VidpSetupPartition
VidpUninitializeSymbolicLink
VidQueryMemoryBlockFaultClusterInfo
VidQueryPartitionInformation
VidQueryVaGpaRangeWorkingSetInfo
VidReadMemoryBlockPageRange
VidReadWriteMappedMemoryBlockPageRange
VidReadWriteMemoryBlockPageRange
VidRegisterApicEoiHandler
VidRegisterCpuidHandler
VidRegisterCpuidResult
VidRegisterExceptionHandler
VidRegisterHypervisorRestartHandler
VidRegisterIoPortHandler
VidRegisterMsrAddressHandler
VidRegisterMsrHandler
VidRegisterTripleFaultHandler
VidReleaseEncryptionKeys
VidReleasePages
VidReopenExoPartition
VidReservePages
VidResetPartition
VidResetPoisonedPage
VidRestorePartitionState
VidSavePartitionState
VidSchedulerAssistRestore
VidSchedulerAssistSave
VidSchedulerAssistSuspend
VidSetCpuGroupProperty
VidSetMailboxKey
VidSetMemoryBlockClientNotifications
VidSetMemoryBlockFlushAfterWrite
VidSetMemoryBlockNotificationQueue
VidSetPartitionCpuFrequencyCap
VidSetPartitionFriendlyName
VidSetPartitionProperty
VidSetPeerProcess
VidSetPropertySynicPort
VidSetSystemInformation
VidSetupMessageQueue
VidSetVirtualProcessorState
VidSetVirtualProcessorStateEx
VidSevSnpControlStateRestore
VidSevSnpControlStateSave
VidSevSnpIssueNestedPspRequests
VidSgxResetMemoryBlocks
VidStartVirtualProcessor
VidStatsMap
VidStatsMapMemoryPartition
VidStatsMapNuma
VidStatsUnMap
VidStatsUnMapMemoryPartition
VidStatsUnMapNuma
VidStopVirtualProcessor
VidSuspendApply
VidSuspendClear
VidTeardownPartitionOperation
VidTranslateGpa
VidTranslateGvaToGpa
VidTriggerCreate
VidTriggerDestroy
VidTriggerUpdateParameters
VidTrimPartitionMemory
VidUnmapHvGlobalStatsPage
VidUnmapHvLocalStatsPage
VidUnmapHvRootStatsPage
VidUnmapMemoryBlockPageRange
VidUnprotectMemoryBlockPages
VidUnregisterCpuidResult
VidUnregisterHandler
VidVsmCheckGpaPageVtlAccess
VidVsmEnableVpVtl
VidVsmGetMemoryBlockProtections
VidVsmGetPartitionConfig
VidVsmPrecommitMgmtVtlPageRange
VidVsmQueryMemoryBlockProtections
VidVsmQueryProtectionsDirty
VidVsmSetMemoryBlockProtections
VidVsmSetPartitionConfig
VidWriteMemoryBlockPageRange
VirtualProtect
VirtualQuery
VMK_ALLOCATE_IOSPACE_PAGES
VMK_ALLOCATE_PAGES
VMK_GPA
VMK_HYPERV_PERF
VMK_HYPERV_PERF_INNER
VMK_HYPERV_PERF_OUTER
VMK_HYPERV_PERF_VERBOSE
VMK_MDL
VMK_MEMORY_BLOCK
VMK_PARTITION
VMK_TRACELOGGING_HOST
VmlEventLog
VMT_KSR_MEMORY_BLOCK_PERSIST
VMT_VID_ALLOCATE_PARTITION_NODE_IOSPACE_PAGES
VMT_VID_ALLOCATE_PARTITION_NODE_PAGES
VMT_VID_BALLOON_PAGES
VMT_VID_CREATE_DAX_MEMBLOCK
VMT_VID_CREATE_MEMBLOCK
VMT_VID_EPF
VMT_VID_GPA_MAP
VMT_VID_GPA_UNMAP
VMT_VID_HOTADD_PAGES
VMT_VID_HOTADD_UNDO_PAGES
VMT_VID_MDL_PAGE_FREE
VMT_VID_MEMORY_BLOCK_PERSIST
VMT_VID_MEMORY_BLOCK_PHU_TEARDOWN
VMT_VID_MEMORY_BLOCK_RESTORE
VMT_VID_PARTITION_PERSIST
VMT_VID_PARTITION_UNPERSIST
VMT_VID_PARTITION_WITHDRAW_MEMORY
VMT_VID_RELEASE_PAGES
VMT_VID_RESERVE_PAGES
VMT_VID_UNBALLOON_PAGES
VpCount
VpIndex
VS_VERSION_INFO
WaNja
Washington1
WATAUAVAWH
WAVAWH
wcschr
wcscpy_s
WEVT_TEMPLATE
WheaResult
win:Critical
win:Error
win:Informational
win:ResponseTime
win:Start
win:Stop
win:Warning
x AVH
x UATAUAVAWH
X0V0T
xmlns
xSu$W
Y eJ#P
Z^i<ZI
Zof1G
ZRichW
