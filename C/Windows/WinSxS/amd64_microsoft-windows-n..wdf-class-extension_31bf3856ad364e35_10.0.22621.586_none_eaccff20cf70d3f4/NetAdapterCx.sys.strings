 A^_^
 A^A\_
 A_A^_
 A_A^_^]
 A_A^A\
 A_A^A\_^
 A_A^A]A\_
 http://www.microsoft.com/windows0
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
! (buffer + bufferLength > buffer)
! (buffer + length > buffer)
! bufferArray.resize(BufferCounts)
! context.CreatedQueueObject
! demux[demux.count() - 1]
! m_affinitizedQueues.resize(m_maxProcessorIndex - m_minProcessorIndex + 1)
! m_extensionName
! m_extensions.insertSorted(extension, sort)
! m_indirectionTable.resize(capabilities.NumberOfIndirectionTableEntries)
! m_laLookupTable
! m_layoutParseBuffer.resize(m_datapathCapabilities.NominalMtu)
! m_multicastAddressList.resize(addressCount)
! m_packetExtensions.append(wistd::move(extension))
! m_rxQueues.reserve(RxQueueCount)
! m_rxQueues.reserve(RxScaling->GetNumberOfQueues())
! m_rxScaling
! m_Table.resize( m_Table.count()+1)
! m_temporary.reserve(m_extensions.count() + 1)
! m_txDemux.reserve(AdapterInit->TxDemux.count())
! m_vaLookupTable
! m_Vectors.resize( m_Vectors.count()+1)
! newApp
! queue
! queueControl
! QueueCreationContext.Extensions.append(*extension)
! Queues.resize(Queues.count() + 1)
! queues.resize(RxScaling->GetNumberOfQueues() - m_rxQueues.count())
! queues.resize(TxQueueCount - m_txQueues.count())
! resize(NdlCount)
! ring
! row.resize(Count)
! rxQueue
! rxQueues.resize(RxQueueCount)
! rxScaling
! translatedEntries.resize(m_indirectionTable.count())
! translatedEntries.resize(Parameters.NumberOfIndirectionTableEntries)
! translatedEntries.resize(parameters->NumberOfRssEntries)
! txQueues.resize(TxQueueCount)
! txScaling
!]_0t
!arpOffload
!blContext
!bufferManager
!checksumOffload
!dataBuffer
!DbgkLiveDumpAddSecondaryDataRoutine
!dot11Context
!gsoOffload
!m_allocator
!m_apps.append(wistd::unique_ptr<INxApp> { static_cast<INxApp *>(client) })
!m_bufferPool
!m_BuffersInUseFlag.Initialize(m_PoolSize)
!m_BuffersRef.resize(m_PoolSize)
!m_BufferVectorAllocator.get()
!m_driverState
!m_frameworkExecutionContext
!m_indirectionTable.resize(IndirectionTableCount)
!m_MdlStorage
!m_MemoryConstraints.append(*MemoryConstraints)
!m_NblPool
!m_NblStorage
!m_ndisMiniport
!m_ndisPnpPower
!m_offloadManager
!m_offloads.append(wistd::move(checksumOffload))
!m_offloads.append(wistd::move(gsoOffload))
!m_offloads.append(wistd::move(rscOffload))
!m_offloads.append(wistd::move(rxChecksumOffload))
!m_offloads.append(wistd::move(txChecksumOffload))
!m_oidList
!m_pGuidToOidMap
!m_powerPolicy
!m_registryPath
!miniport
!nsOffload
!offloadFacade
!pool
!resize(m_PoolSize)
!rscOffload
!RTL_IS_POWER_OF_TWO(BufferPoolConfig->BufferAlignment)
!RTL_IS_POWER_OF_TWO(IndirectionTableCount)
!rxChecksumOffload
!tempInstanceNameBuffer
!This program cannot be run in DOS mode.
!TkjE
!tssDemux
!txChecksumOffload
!TxDemux.append(tssDemux)
!WIN_VERIFY(Extension->NonWdfStyleAlignment <= alignment)
!WIN_VERIFY(Extension->Size != 0)
!WIN_VERIFY(Extension->Size <= MAXIMUM_ALLOWED_EXTENSION_SIZE)
!WIN_VERIFY(RTL_IS_POWER_OF_TWO(Extension->NonWdfStyleAlignment))
!wnodeCopy
"c}FK
"Microsoft Window
#HMDuV
$Microsoft Ireland Operations Limited1
$Microsoft Ireland Operations Limited1&0$
%.4S:%wZ-%wZ
%Microsoft Windows Production PCA 2011
%Microsoft Windows Production PCA 20110
%ws execution context #%lu for %wZ
&go`4
&S|9a
(|$pL
(D$ @
(D$ f
(D$ H
(D$@H
(D$`H
(D$0f
(D$0H
(D$PH
(ndisGuid->Flags & fNDIS_GUID_TO_STATUS) == 0
)D$0H
)Microsoft Root Certificate Authority 20100
* (Stable) or NetAdapterCx 2.3 (Preview or Stable).       
* Actual function table count  : %u 
* and NetAdapterOffloadSetRxChecksumCapabilities instead.   
* deprecated. Use NetAdapterOffloadSetTxChecksumCapabilities
* Driver verifier should be enabled on both client and Cx
* Expected function table count: %u 
* If not, DV may report false violations while verifiying NDIS rules
* NetAdapterCx 1.%u (Preview) client detected.            
* NetAdapterCx 2 (Preview) client detected.               
* NetAdapterCx detected a function count mismatch. The driver 
* NetAdapterCx detected a verifier rule violation.       *
* NetAdapterOffloadSetChecksumCapabilities has been         
* NetOffloadIsChecksumIPv4Enabled has been deprecated.    
* NetOffloadIsChecksumTcpEnabled has been deprecated.     
* NetOffloadIsChecksumUdpEnabled has been deprecated.     
* NetOffloadIsRxChecksumIPv4Enabled instead.              
* NetOffloadIsRxChecksumTcpEnabled instead.               
* NetOffloadIsRxChecksumUdpEnabled instead.               
* Recompile your source code and target NetAdapterCx 2.%u.
* Recompile your source code and target NetAdapterCx 2.x  
* Use NetOffloadIsTxChecksumIPv4Enabled and               
* Use NetOffloadIsTxChecksumTcpEnabled and                
* Use NetOffloadIsTxChecksumUdpEnabled and                
* using this extension will not load until it is re-compiled 
* with the latest version of the extension's header and libs 
************************* 
*************************** 
**********************************************************
************************************************************
*IdleRestriction
*IPChecksumOffloadIPv4
*LsoV1IPv4
*LsoV2IPv4
*LsoV2IPv6
*NumRssQueues
*RscIPv4
*RscIPv6
*RscTimestamp
*RssBaseProcGroup
*RssBaseProcNumber
*RssMaxProcGroup
*RssMaxProcNumber
*TCPChecksumOffloadIPv4
*TCPChecksumOffloadIPv6
*UDPChecksumOffloadIPv4
*UDPChecksumOffloadIPv6
*UsoIPv4
*UsoIPv6
,7Y28+lcJrzRTgHDi+fpW4YyE71JrGtNL+b4Gy7k2NgA=0Z
,f93r
,H;F v
,M9L6Hu
.00cfg
.data
.data$brc
.fffffff
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.kmdfclassbind$a
.kmdfclassbind$c
.kmdfclassbind$d
.kmdftypeinit$a
.kmdftypeinit$c
.pdata
.rdata
.rdata$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$mn
.text$mn$00
.text$mn$21
.xdata
:NAISH
:Tt3n
;@8-+|
;fD9#t
;fD9;t
;NAEIt
;w0t+H
;xuZH
?/=KzdN
?NAEIt
@8|$`
@8h0t$H
@8iHt
@8jpt&H
@8l$Xu
@8o t9H
@8x t)H
@A^_^
@A_A^_
@A_A^A\
@A_A^A]A\_^]
@p@8-C}
@USVWATAUAVAWH
@USVWATAVAWH
@USVWAVAWH
@USVWAVH
@USVWH
@UVWATAUAVAWH
[7]!^F^
[C[}\
[k\5]_^
\$ 9_
\$ E3
\$ H;
\$ UVWATAUAVAWH
\$@A+
\$@L;
\[]S^F_
\Device\netadaptercx
\p^7_
\Registry\Machine\System\CurrentControlSet\Control\NetworkSetup2\Interfaces\{%08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}\Kernel
]/^H_
]8tWE8y
]xD8I
^,M9n0
^?H4"
^t^I_
^y^+_
_,8\$xL
_?_w_
___q_
__chkstk
_strnicmp
_vsnwprintf
` UAVAWH
`0^0\
`A_A^A]A\_^]
`fothk
`INIT
{ AVH
{h@8-
|$ A#G
|$ AVH
|$ E3
|$ fD
|$ UATAUAVAWH
|$ UAVAWH
|$ UH
|$(A^
|$(E3
|$(fD
|$@A_A^A]A\
|$8A_A^A\
|$8E3
|$PH;{
|ED$X
}Hf+EvL
}PH;E
+M0#M
+N0#N
+O0#O
<&NxQueueVerifier
=diODt
=diOSt
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>NGdx
>NxExecutionContext
040904B0
0A^_^
0A_A\_
0A_A^_
0A_A^A\
0A_A^A]
0A_A^A]A\_
0A_A^A]A\_^]
0XYZAXAY
1(0&0
1,0*0
10.0.22621.586
10.0.22621.586 (WinBuild.160101.0800)
111019184142Z
20220817030010.91Z0
20220817052427Z
20220818052427Z0t0:
210930182225Z
211028192739Z
220505192315Z
229879+4700220
230126192739Z0
230504192315Z0p1
261019185142Z0
300930183225Z0|1
3http://www.microsoft.com/pkiops/Docs/Repository.htm0
4FBufferPoolConfig->Flag & NET_CLIENT_BUFFER_POOL_FLAGS_SERIALIZATION
4I3D7@H#
5`";Jb
5RTR~T
6z$WD
7fD9/t
7PoP&\\^
8\$4u
8\$5u
8\$6t
8\$xt
8A_A^A]A\_^][
8D$Bu
9(u"H
9|$Pv*H
9B0u#
9GNxIt
A H;D$8u
A)C(I
A;@0u
A;F+L
A^_^[]
A^A\_
A_A\]
A_A\_^]
A_A^]
A_A^_
A_A^_^[]
A_A^_^]
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A]
A_A^A]_]
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[]
A_A^A]A\_^]
A+Q0A#Q
A1/A3
A8CHtSH
A8HcI0H
A9@0t
A9@0u
A9@0u0L
A9@0u2H
A9@0uCL
actualBufferOffset < BufferAlignmentOffset
actualBufferSize < BufferSize
AdapterNetLuid
AdapterStateTransitionEvent
AdapterStateTransitionFrom
AdapterStateTransitionTo
AdStH
aGd! m_txQueues.reserve(TxQueueCount)
aJ6T9
AllowDmaHalBypass
App %lu - RX %zu
App %lu - TX %zu
AQAPRQPH
as.,k{n?,
ASmDH
Average Queue Depth
B.reloc
B.rsrc
B`fE+
BatlH
bGFIDS
BTH!B(H!B0!BH!BLH!BP
bufferLength % addressLength != 0
bufferLength < sizeof(ULONG)
BufferPoolConfig->BufferAlignment > PAGE_SIZE
BufferSize < sizeof(WNODE_TOO_SMALL)
bufferVector == nullptr
C D8j
C D8R
cbSourceString > USHORT_MAX
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
CompanyName
CoQuH
CPE8P
cT3Mk:V
cxbmH
cxDeviceInit == nullptr
CxDrH
CxDriverContext
D!d$ E
D!d$ E3
D!t$ E
D$ ;O
D$ E3
D$ fD
D$ H!D$ H
D$$fA
D$(BatlA
d$(E3
D$(fD
D$@E3
D$`t#
D$0D;
D$0E3
D$0H;
D$0H9A
D$4t#
D$8@8k
D$8D*
D$8I;@H
d$DD8%
D$HE3
D$hH;
D$HNdCxH
D$HNxRx
D$KH;
D$pA+
D$PH;
D$pH;
D$XE3
D$xE3
D;@A#
D3kPL#
D7@E3
D7DD;
D8%@:
D8@A#
D8{ th
D8{!tXH
D8{0t
D8BLu
D8BMu
D8c+t
D8c0t
D8d$A
D8RTu
D8S u
D8S!u
D9?t\Hc
D9@(s|3
D9C,t
DbgkWerCaptureLiveKernelDump
DbgPrintEx
DeferredDeleteContext
DeStD
DeviceBusAddress
DevicelessAdapterInterfaceGuid
DeviceStateTransitionEvent
DeviceStateTransitionFrom
DeviceStateTransitionTo
DmaBouncePolicy
DpcDuration
DPnPH
DriverEntry failed 0x%x for driver %wZ
E;K0u
E8T/`t0I
EC statistics
ECNaH
ECtxH
EcUpdatePerfCounters
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
entries == nullptr
en-US
epA_A^A\_^[]
EtwRegister
EtwRegisterClassicProvider
EtwSetInformation
EtwUnregister
EtwWriteTransfer
ExAcquirePushLockExclusiveEx
ExAcquirePushLockSharedEx
ExAcquireRundownProtection
ExAcquireRundownProtectionCacheAware
ExAcquireRundownProtectionEx
ExAllocateCacheAwareRundownProtection
ExAllocateFromNPagedLookasideList
ExAllocatePool2
ExAllocatePoolWithTag
ExDeleteNPagedLookasideList
Execution Context
ExFreeCacheAwareRundownProtection
ExFreePool
ExFreePoolWithTag
ExFreeToNPagedLookasideList
ExInitializeNPagedLookasideList
ExInitializeRundownProtection
ExQueueWorkItem
ExReInitializeRundownProtection
ExReInitializeRundownProtectionCacheAware
ExReleasePushLockEx
ExReleasePushLockExclusiveEx
ExReleaseRundownProtection
ExReleaseRundownProtectionCacheAware
ExReleaseRundownProtectionEx
extensionType == MediaExtensionType::None
ExWaitForRundownProtectionRelease
ExWaitForRundownProtectionReleaseCacheAware
f D9~
f!~XH9>u
f;L$0t
f9,Au
f9D$@u
f9iHt#H
f9QHt
fA;\$
fA+I(
fA9t$
fD9#t
fD9${u
fD9$Cu
fD9/t
fD9;t
fD9+t
fD9<{u
fD9<Cu
fD9aH
fD9aHt
fD9aHt"H
fD9iHt!H
fD9iHt"H
fD9iHt#H
fD9iHt/H
fD9qHt
fD9qHt)H
fE;\7DsVE3
fE;T4Ds
fffff
ffffff
fffffff
-fffffff
fg:SM
FHf;F
FileDescription
FileVersion
fogrp
FxGetNextClassBindInfo failed
FxGetNextObjectContextTypeInfo failed
FxStubBindClasses: ClientBindClass %p, WDF_CLASS_BIND_INFO 0x%p, class %S, returned status 0x%x
FxStubBindClasses: invalid driver image, the address of symbol __KMDF_CLASS_BIND_START 0x%p is greater than the address of symbol __KMDF_CLASS_BIND_END 0x%p, status 0x%x
FxStubBindClasses: VersionBindClass WDF_CLASS_BIND_INFO 0x%p, class %S, returned status 0x%x
FxStubInitTypes: invalid driver image, the address of symbol __KMDF_TYPE_INIT_START 0x%p is greater than the address of symbol __KMDF_TYPE_INIT_END 0x%p, status 0x%x
G D8c 
G D8R
G D8Z
G(H+l$@H;
g;^z 
GetNxDriverFromWdfDriver(Driver) != nullptr
GNxIH
H UVWATAUAVAWH
H!\$ D
H!|$ D
H!7H!u
H!D$(
H!l$ D
H!t$ D
H!T$ D
H!u D
H.data
H.idata
h.rdata
H;]gtQL
H;_`u
H;l$ 
H;Qhwx
H9(uOH
H9(uqH
H9/u5H
H9?u1H
H9\$8t
H9=O=
H95C-
H95Q5
H9-'e
H9-E$
H9n0u
H9y@u
HA_A^A]A\_^][
HcG,A
HGrmH
hostvnic
HPAGE
I#I(A
I,u1A
I0G1-0+
I1D7@I
I3@PI#
I3A@H#
I9N0t=@
I9R@u
I9W u
IfType
IgnoreVerifierDebugBreak
imp_NetAdapterLightweightInitAllocate
imp_WppRecorderReplay
InternalName
IoAllocateWorkItem
IoBuildPartialMdl
IofCompleteRequest
IoFileObjectType
IoFreeWorkItem
IoGetDeviceNumaNode
IoQueueWorkItem
IoRegisterPlugPlayNotification
IoUnregisterPlugPlayNotificationEx
IoWMIDeviceObjectToProviderId
IoWMIRegistrationControl
IoWMIWriteEvent
IPD8Q
iPlQ9R
IsEmpty()
IsK6*
Iterations/Sec
Iterations/Sec#Total number of packets transferred
J!D+@J
J>f;O
K D8I t
K(D8I t
K(fA+I
K(uWA
KArrH
KArrI
KdRefreshDebuggerNotPresent
KeAcquireSpinLockRaiseToDpc
KeClearEvent
KeEnterCriticalRegion
KeFlushIoBuffers
KeGetCurrentIrql
KeGetCurrentProcessorNumberEx
KeInitializeDpc
KeInitializeEvent
KeInitializeMutex
KeInitializeSpinLock
KeInsertQueueDpc
KeLeaveCriticalRegion
KeLowerIrql
KeQueryDpcWatchdogInformation
KeQueryMaximumProcessorCountEx
KeQueryTimeIncrement
KeReadStateEvent
KeReleaseMutex
KeReleaseSpinLock
KeSetBasePriorityThread
KeSetEvent
KeSetImportanceDpc
KeSetSystemGroupAffinityThread
KeSetTargetProcessorDpcEx
KeShouldYieldProcessor
KeWaitForSingleObject
key == nullptr
KfRaiseIrql
KHstH
KmdfLibrary
KPD8Q
KsplH
KsplL
L$ E;N
L$ E3
L$ SVWH
L$ UH
l$ VWATAVAWH
L$(E3
l$(fD
L$@!D$@L
L$@fD
L$@H3
L$`E3
L$`H3
L$0E3
L$0f9O
L$0fD
L$0H3
l$0L;
l$2E3
L$8E3
L$8H3
L$hH;
L$hH3
L$HH3
L$hHk
L$PE3
L$pH;D$X~@@8|$Ht H
L$PH3
L$XE3
L$XeH
L$XH3
L:@H;
L+l$8H
L8zp0
L9%{;
L9%R_
L9=<H
L95K^
L9g u
L9n t
L9t$@uTH
L9t$PuTH
L9v(u
L9w u
LcO A
LegalCopyright
length < NDIS_SIZEOF_OFFLOAD_ENCAPSULATION_REVISION_1
length < NDIS_SIZEOF_OFFLOAD_PARAMETERS_REVISION_3
length < NDIS_SIZEOF_RECEIVE_SCALE_PARAMETERS_V2_REVISION_1
length < NDIS_SIZEOF_RSC_STATISTICS_REVISION_1
length < NDIS_SIZEOF_RSS_SET_INDIRECTION_ENTRIES_REVISION_1
length < NDIS_SIZEOF_STATISTICS_INFO_REVISION_1
Lower
m_MemoryConstraints.count() > 1
m_receiveFilterCapabilities.SupportedPacketFilters == 0
m_resetDiagnosticsBuffer == WDF_NO_HANDLE
m<&8cx
M0K0I
mbbcx
MediaType
mH7n[
Microsoft
Microsoft Corporation
Microsoft Corporation1
Microsoft Corporation1&0$
Microsoft Corporation1.0,
Microsoft Corporation1-0+
Microsoft Corporation1200
Microsoft Time-Stamp PCA 2010
Microsoft Time-Stamp PCA 20100
Microsoft Time-Stamp Service
Microsoft Time-Stamp Service0
Microsoft Windows0
Microsoft.Windows.Ndis.NetAdapterCx
Microsoft.Windows.Ndis.NetAdapterCx.Translator
minio\netcx\adapter\adapterpnppower.cpp
minio\netcx\adapter\devicepnppower.cpp
minio\netcx\adapter\idle\idlestatemachine.cpp
minio\netcx\adapter\idle\powerreferenceholder.cpp
minio\netcx\adapter\nxadapter.cpp
minio\netcx\adapter\nxexecutioncontextapi.cpp
minio\netcx\adapter\nxexecutioncontexttask.cpp
minio\netcx\adapter\nxqueue.cpp
minio\netcx\adapter\powerpolicy\nxidlerestrictions.cpp
minio\netcx\adapter\powerpolicy\nxpowerreference.cpp
MmBuildMdlForNonPagedPool
MmGetPhysicalAddress
MmGetSystemRoutineAddress
MmIsDriverVerifyingByAddress
MmMapLockedPagesSpecifyCache
MmSizeOfMdl
MmUnmapLockedPages
MOFDATA
ms_fragment_databuffer
ms_fragment_logicaladdress
ms_fragment_mdl
ms_fragment_returncontext
ms_fragment_virtualaddress
ms_packet_checksum
ms_packet_gso
ms_packet_hash
ms_packet_ieee8021q
ms_packet_lso
ms_packet_rsc
ms_packet_rsc_timestamp
ms_packet_wifiexemptionaction
n{(aM0
N0L0J
NAEIH
NAInH
NAISH
NameGenerationError
NBL Pending/Iteration
nblTH
NdCxH
NdCxI
NDIS.SYS
NDIS_MINIPORT_BLOCK_TYPE
NdisAdvanceNetBufferDataStart
NdisAdvanceNetBufferListDataStart
NdisAllocateFragmentNetBufferList
NdisAllocateNetBufferAndNetBufferList
NdisAllocateNetBufferListContext
NdisAllocateNetBufferListPool
NdisCloseConfiguration
NdisConvertNdisStatusToNtStatus
NdisConvertNtStatusToNdisStatus
NdisCopyReceiveNetBufferListInfo
NdisCopySendNetBufferListInfo
NdisFreeFragmentNetBufferList
NdisFreeNetBufferList
NdisFreeNetBufferListContext
NdisFreeNetBufferListPool
NdisGetDataBuffer
NdisIfGetInterfaceIndexFromNetLuid
NdisLWMDeregisterMiniportDriver
NdisLWMInitializeNetworkInterface
NdisLWMRegisterMiniportDriver
NdisLWMStartNetworkInterface
NdisLWMUninitializeNetworkInterface
NdisMDeregisterMiniportDriver
NdisMIndicateReceiveNetBufferLists
NdisMIndicateStatusEx
NdisMOidRequestComplete
NdisMPauseComplete
NdisMRestartComplete
NdisMSendNetBufferListsComplete
NdisMSetMiniportAttributes
NdisOpenConfigurationEx
NdisOpenConfigurationKeyByName
NdisReadConfiguration
NdisReadNetworkAddress
NdisRetreatNetBufferDataStart
NdisWdfAsyncPowerReferenceCompleteNotification
NdisWdfChangeSingleInstance
NdisWdfCloseIrpHandler
NdisWdfCreateIrpHandler
NdisWdfDeregisterCx
NdisWdfDeviceControlIrpHandler
NdisWdfDeviceInternalControlIrpHandler
NdisWdfExecuteMethod
NdisWdfGetAdapterContextFromAdapterHandle
NdisWdfGetGuidToOidMap
NdisWdfMiniportDataPathStart
NdisWdfMiniportDereference
NdisWdfMiniportSetPower
NdisWdfMiniportStarted
NdisWdfMiniportTryReference
NdisWdfNotifyWmiAdapterArrival
NdisWdfPnPAddDevice
NdisWdfPnpPowerEventHandler
NdisWdfQueryAllData
NdisWdfQuerySingleInstance
NdisWdfReadConfiguration
NdisWdfRegisterCx
NdisWdfRegisterMiniportDriver
NdisWriteConfiguration
NetAdapterCx
NetAdapterCx Queue Counter
NetAdapterCx Queue Counter Set.
NetAdapterCx Queue Counter"Total number of polling iterations
NetAdapterCx.pdb
NetAdapterCx.sys
NetAdapterInitAllocateCommon
NetAdapterMof
NETADAPTERMOF
NETEXECUTIONCONTEXT %p
NETIO.SYS
NetLuidIndex
Network Adapter Class Extension for WDF
Nhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l
NmrClientAttachProvider
NmrDeregisterClient
NmrRegisterClient
NmrWaitForClientDeregisterComplete
NrxRH
ntoskrnl.exe
NtxTH
NWmiH
NxAdapter
NxAdapter::InitializePowerManagement
NxAdapterStateTransition
NxApH
nxbmH
nxbpH
NxBufferQueue
NxConfiguration
NxDevice
NxDevice::CollectDiagnostics
NxDevice::Initialize
NxDevice::WritePowerStateChangeEvent
NxDeviceStateTransition
NxDmH
NxDriver
NxExecutionContextTask
NxExH
NxIRH
nxmaD
nxmaH
nxmaI
nxmvH
NxNrD
NxNrH
NxNtH
NxOfA
NxOfD
NxOfH
NxOfI
NxPEA
NxPEH
NxPLH
NxPLt
NxPLt"L
NxPLt#H
NxpRH
NxPwH
NxQueue
NxRBH
NxRBI
NxRxI
NxWmH
NxWmHk
NxwRH
NxWSH
NxWSt
NxWSt"L
NxWSt#H
O@+k8A
O0M0K
ObfDereferenceObject
ObfReferenceObject
ObReferenceObjectByHandle
OPD8Q
OriginalFilename
p AWH
p WATAUAVAWH
p WAVAWH
P2PPP
P2Q|R
pA^_^[]
PA_A^A\_^
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PacketFilter & ~(m_receiveFilterCapabilities.SupportedPacketFilters) && GetMediaType() != NdisMediumNative802_11
Packets Completed
Packets Completed/Iteration
Packets Transferred
Packets Transferred/Iteration
Packets Transferred/Iteration!Total number of packets Completed
Parameters.HashInformation == 0
parameters->RssEntrySize != sizeof(NDIS_RSS_SET_INDIRECTION_ENTRY)
pbxnL
PcwAddInstance
PcwRegister
PcwUnregister
Phttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0
PmR:T
PnPNH
PowerRequiredWorkItemContext
ProductName
ProductVersion
PsCreateSystemThread
PsGetVersion
PSQrR
PTV.W
pZ1C>1
q(@85
Q(QIQ#R
Q;RpRUT
q\Q17
Q~2j,
Q0A#Q
qFRTd<
QueryExtension(Extension.Name, Extension.Version, Extension.Type) != nullptr
QXS}TpU9V
R!s4Z
R$fA;Z*
r`f;K
R|S2T
Rate of NBL pending
Rate of packets Completed
Rate of packets transferred
Rate of polling iterations
Receive
Redmond1
resetDiagnosticsSize == 0U
rOfA;[
RPSBT
RSDS2,
RtlClearAllBitsEx
RtlClearBitEx
RtlCopyUnicodeString
RtlEqualUnicodeString
RtlFreeUnicodeString
RtlInitializeBitMapEx
RtlInitUnicodeString
RtlNotifyFeatureUsage
RtlQueryFeatureConfiguration
RtlQueryFeatureConfigurationChangeStamp
RtlRegisterFeatureConfigurationChangeNotification
RtlRunOnceExecuteOnce
RtlSetBitEx
RtlStringFromGUID
RtlUnicodeStringToInteger
RtlUnregisterFeatureConfigurationChangeNotification
RxPerfCountersIterationInterval
RxReportPerfCounters
RxThreadAffinity
RxThreadPriority
s AWH
S#TLU
S)VBV
s`fA9F
S6S:UQUmW
sCH9+u
SDThT
SetRxThreadAffinity
SetTxThreadAffinity
size != sizeof(m_hashSecretKey)
SpUlV1WuW
status
status != STATUS_OBJECT_TYPE_MISMATCH
STATUS_ACCESS_DENIED
STATUS_ALREADY_REGISTERED
STATUS_BUFFER_OVERFLOW
STATUS_BUFFER_TOO_SMALL
STATUS_DUPLICATE_NAME
STATUS_INSUFFICIENT_RESOURCES
STATUS_INTEGER_OVERFLOW
STATUS_INVALID_DEVICE_REQUEST
STATUS_INVALID_PARAMETER
STATUS_NOT_IMPLEMENTED
STATUS_NOT_SUPPORTED
STATUS_SUCCESS
STATUS_UNSUCCESSFUL
STATUS_WMI_INSTANCE_NOT_FOUND
SThbH
StringFileInfo
SUVWATAUAVAWH
swprintf_s
t H9B
t$ E3
T$ E3
t$ E3
t$ fE
t$ UWATAVAWH
t$ UWAUAVAWH
t$ UWAVH
t$ WATAUAVAWH
t$ WATAUAVAWM
t$ WAVAWH
t$ WH
t$(A#
T$(E3
t$(fD
T$@E3
T$@H;Q
t$@L9N8
t$0M;
t$HA_A^A]A\_
T$hE3
t$HH;D$8t
t$pL;
t)<;u
t,K94
T,T^V
T/@E8Q`t?A
T}UJV
T+U?UkU
T<V\VA\S\
t6HE3
T7V$W
targetAdapters.count() == 0
tBfD9
TbULW
Thales TSS ESN:2AD4-4B92-FA011%0#
TlP0X
Total Iterations
TOU:VGX
TPU~UZV
Translation
TrQuH
TrQuu]H
T-U/V
TxPerfCountersIterationInterval
TxReportPerfCounters
TxThreadAffinity
TxThreadPriority
u L+t$HE
u!D8{
u)@8y
u*@8{
u*@8y
u,@8{
u.@8{
U.U?U
u-@8{
u@D8%
u@H95
u\A9<$t
u+D8m
U0S0Q
UATAUAVAWH
UAVAWH
uCL9=3
uEA9<$t
ufA99t
ugA9<$t
UGV}V
uiA9<$t
uIHcG
uKH9=c
uoA9<$t
uOH9=
uOH9=*
UpdateIndirectionTableEntryStatus( parameters->NumberOfRssEntries, translatedEntries, entries)
USVWAVH
uvA9<$t
UVWATAUAVAWH
UVWATAWH
UVWAVAWH
UWATAVAWH
UWAVH
UWAWH
uyL7j
V!resize(MdlCount)
v(L9=
V;XfX'YHYO[o[
v~Bpd
VarFileInfo
vFfl|
VS_VERSION_INFO
VWATAVAWH
VWAVH
V'WqW
VzW5X
W E8P
W(XG]p]
Washington1
WATAUAVAWH
WATAVH
WATAWH
WAVAWH
wcscmp
wcscpy_s
wcsstr
WDFLDR.SYS
WdfLdrQueryInterface
WdfRegisterClassLibrary
WdfVersionBind
WdfVersionBindClass
WdfVersionUnbind
WdfVersionUnbindClass
wGtWI
WI_AreAllFlagsClear(Parameters.HashInformation, hashTypeMask)
WI_IsAnyFlagSet(Parameters.HashInformation, reservedHashFunction)
WI_IsFlagClear(Parameters.HashInformation, hashFunctionMask)
wificx
WilStagingFeatureDescriptors$__m
WIXUY
WmiQueryTraceInformation
WmiTraceMessage
WoZ=[
WPD8Z
WppAutoLogStart
WppAutoLogStop
WppAutoLogTrace
WppRecorder.sys
WQ^m^
x ATAUAVAWD
x ATAUAVAWE3
x ATAVAWD
x ATAVAWH
x AUAVAWH
x AVH
x AVL
x AWH
x UATAUAVAWH
x UATAWH
X0V0T
XA_A^A]A\_^][
XCXWX
XIY6Z
xSu$W
X'XoY.Z
Y%Z[ZkZ
y*L9=YU
y;H95
y=L9=
y2L9=|W
Y3ZQZ
y4H95@/
y9^b?<
yAL9=
yHH9={
yHH9=g
YLZ<]
yOH95z-
Z! demux.reserve(Configuration.Count)
Z(sTH
Z/[<\
Z}*5f
Z4[T\`]]_
Ze^U_
ZwClose
ZwOpenFile
ZwOpenKey
ZwQuerySystemInformation
ZwQueryValueKey
ZwSetInformationThread
