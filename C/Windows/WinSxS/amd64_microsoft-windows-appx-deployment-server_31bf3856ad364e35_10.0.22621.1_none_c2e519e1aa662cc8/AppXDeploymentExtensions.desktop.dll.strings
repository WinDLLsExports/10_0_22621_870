                                     Callstack: %p %p %p %p %p %p %p %p %p %p %p %p
 @8}(t?L
 `&B*0,
 A^_]
 A^_^
 A^_^[]
 A^A]A\
 A__]
 A_A^_
 A_A^_^]
 A_A^A\
 A_A^A\_]
 A_A^A\_^
 A_A^A\_^[]
 A_A^A]
 A_A^A]_^
 A_A^A]A\_
 A_A^A]A\_^]
 f"" 
 H3E H3E
 Hcy@H
 Microsoft Corporation. All rights reserved.
 Operating System
 s#D;
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND (p._WorkId=0 OR p._WorkId=?1) AND EXISTS (SELECT 1 FROM PackageUser AS puser WHERE p._PackageID=puser.Package AND puser._WorkId=?1) AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND (pu._WorkId=0 OR pu._WorkId=?1) AND (p._WorkId=0  OR p._WorkId=?1) LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p._WorkId=0 AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1) AND (p.PackageFamily NOT IN (SELECT PackageFamily FROM Package WHERE Flags&0x400!=0 GROUP BY PackageFamily)) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p.PackageFamily=? AND p._WorkId=0 AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p.PackageFamily=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND (pu._WorkId=0 OR pu._WorkId=?2) AND (p._WorkId=0  OR p._WorkId=?2)  LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
 UpstreamDependentPackageFullName
 Windows
!_additionalValuesForInprocServer32.try_emplace( ValueName(WindowsGetStringRawBuffer(name, nullptr)), RegSzValueData(value)).second
!current.IsValid()
!D$x!D$p!D$tL
!D8D$@t
!emplaceResult.second
!InitOnceExecuteOnce(&s_initOnceKnownInvalidDeletePaths, [](PINIT_ONCE, PVOID, PVOID*) { try { static constexpr PCWSTR PathsWithWowNodes[] = { L"SOFTWARE", LR"(SOFTWARE\Classes)", }; static constexpr PCWSTR WowNodeStrings[] = { WOW6432NODE_WSTR, WOWAMD64NODE_WSTR, WOWARMNODE_WSTR, WOWARM64NODE_WSTR }; static constexpr PCWSTR PathsWithoutWowNodes[] = { L"SYSTEM", }; for (auto baseInvalidPath : PathsWithWowNodes) { s_knownInvalidDeletePaths.push_back(baseInvalidPath); for (auto wowNodeString : WowNodeStrings) { std::wstring invalidPath(baseInvalidPath); invalidPath += wowNodeString; s_knownInvalidDeletePaths.push_back(std::move(invalidPath)); } } for (auto invalidPath : PathsWithoutWowNodes) { s_knownInvalidDeletePaths.push_back(invalidPath); } return TRUE; } catch (...) { s_knownInvalidDeletePaths.clear(); return FALSE; } }, nullptr, nullptr)
!m_initialized
!m_isMachineRegister
!oldPosition->first.EqualsCaseSensitive(first)
!source && (length == static_cast<size_t>(-1))
!t$ 3
!t$03
!This program cannot be run in DOS mode.
"%ls"
"%ls" %ls
"&B*0,b&0.N
"&B*0,T&0.`
">&6(
"D$@H
"HcE 
"HcE0
"L&6(
"Z&f*6(
#StreamingDataSourcePrefetchCanceled
#text
#wil::make_unique_string_nothrow
$(Package)
$0< u
$BINDFLT.WRITTEN.IN.SILO
-$R7>u
%02u%02u%02u %02u%02u%02u.%03u [%s 0x%08X] P%x T%x: %s
%02u%02u%02u %02u%02u%02u.%03u [Profile %ums] P%x T%x: %s
%02u%02u%02u %02u%02u%02u.%03u [Trace] P%x T%x: %s
%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X
%08x%08x
%AppRepository%
%AppRepository%\Downlevel\StateRepository-Machine.srd
%AppRepository%\StateRepository-Deployment.srd
%AppRepository%\StateRepository-Machine.srd
%AppRepository%\StateRepository-User-%UserSid%.srd
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
%ProgramData%\Microsoft\Windows\PackagedEventProviders\
%s %I64d %s %s
%s!%s
%s%s%s
%s%s%s%s
%s.%s%s
%s:%s
%s\%d
%s\%s
%s\%s\%s
%s\resources.pri
%s\WpSystem\%s\AppData\Local\Packages
%windir%\system32\eraproxyapp.exe
%windir%\system32\gamecoreproxyapp.exe
%windir%\syswow64\aghost.exe
((HRESULT)0x8007000EL)
((HRESULT)0x80070057L)
((HRESULT)0x80080204L)
(/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='CompatMode' and .='classic']])
(/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='Scope' and .='machine']])
(/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='CompatMode' and .='classic']])
(/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='Scope' and .='machine']])
(\$\((.+?)\)|\[\{(.+?)\}\])[/\\]+(.+)
(_^[]
(9Q|t
(A;;0xB;;;%s)
(A;OICI;0x120089;;;%s)
(A;OICI;0x120089;;;%s)(A;OICI;0x120089;;;%s)
(A;OICI;0x120089;;;AC)(A;OICI;0x120089;;;S-1-15-2-2)(A;OICI;0x120089;;;BU)
(A;OICI;0x120089;;;BU)
(A;OICI;0x1200A9;;;%s)
(A;OICI;0x1200A9;;;%s)(A;OICI;0x1200A9;;;%s)
(A;OICI;0x1200A9;;;AC)
(A;OICI;0x1200A9;;;AC)(A;OICI;0x1200A9;;;S-1-15-2-2)(A;OICI;0x1200A9;;;BU)
(A;OICI;0x1200A9;;;BU)
(A;OICI;0x1200A9;;;S-1-15-2-2)
(A;OICI;FR;;;BU)
(A;OICI;GR;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;FR;;;RC)
(A;OICI;GRGX;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;FRFX;;;LS)(A;OICI;FRFX;;;NS)(A;OICI;FRFX;;;RC)
(A;OICI;GRGX;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;FRFX;;;RC)
(A_A^_^[]
(caller: %p) 
(currentEnd - currentBegin) > MaxKeyNameLength
(D$ f
(D$ H
(D$@f
(D$0f
(D$Pf
(D8oPt6H;_H
(database)
(HashMap<CLSID, ComProxyStubRegistration*>::Make(&_proxyStubs))
(HashMap<CLSID, ComTreatAsClassRegistration*>::Make(&_treatAsClasses))
(HashMap<CLSID, Internal::ComClassRegistrationCombinedProperties*>::Make(&_classes))
(HashMap<IID, ComInterfaceRegistration*>::Make(&_interfaces))
(HashMap<UINT32, IComServerRegistration*>::Make(&_servers))
(Inbox) Package rows w/no PackageUser references
(L$@f
(L9l$Xu
(lBpTl"rL
(m_text.length() - currentBegin) > MaxKeyNameLength
(Non-Inbox) Package rows w/no PackageUser references
(registrationStore->*Traits::getEntriesForPackage)(packageFullName, &entriesHandle)
(registrationStore->*Traits::readEntry)(packageFullName, EntryIdRaiiTraits::UnwrapRaiiType(entryId), properties, nullptr, nullptr)
(registrationStore->*Traits::tryGetEntryIdForPackageByIndex)(entriesHandle, index, &hasEntryAtIndex, &entryId)
(t$`H
(t$`I
(t$`L
(t$0H
(t$PH
(t$pL
(unpackaged)
(XA;OICI;0x120089;;;BU;(WIN://SYSAPPGROUPID Contains "%s"))
(XA;OICI;0x120089;;;BU;(WIN://SYSAPPID Contains "%s"))
(XA;OICI;0x1200A9;;;BU;(WIN://SYSAPPGROUPID Contains "%s"))
(XA;OICI;0x1200A9;;;BU;(WIN://SYSAPPID Contains "%s"))
)L$PH
)t$`H
)t$`M
)t$0I
)t$PL
*&6TU
*.sccd
*/*[local-name()='InstallActions']/*[local-name()='InstallAction']
*/*[local-name()='RepairActions']/*[local-name()='RepairAction']
*/*[local-name()='UninstallActions']/*[local-name()='UninstallAction']
*[local-name()='%s']
*[local-name()='AppExecutionAlias']/*[local-name()='ExecutionAlias']
*[local-name()='Applications']/*[local-name()='Application']
*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.applicationRegistration']/*[local-name()='ApplicationRegistration']
*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.approvedShellExtension']
*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.controlPanelItem']
*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.internal.shadowCopyExclude']
*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.mailProvider']
*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.shortcut']/*[local-name()='Shortcut']
*[local-name()='AppMigrations']/*[local-name()='AppMigration']
*[local-name()='AppPrinter']
*[local-name()='ApprovedShellExtension']
*[local-name()='BinaryData']
*[local-name()='ClassicAppCompatKey']
*[local-name()='ClassicAppCompatKeys']
*[local-name()='ControlPanelItem']
*[local-name()='CustomInstall']
*[local-name()='DefaultIcon']
*[local-name()='Dependencies']
*[local-name()='DependentService']
*[local-name()='ExtensionHandler']
*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.appointmentsProvider']
*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.fileTypeAssociation']/*[local-name()='FileTypeAssociation']
*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.protocol']/*[local-name()='Protocol']
*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.systemFileAssociation']
*[local-name()='Extensions']/*[local-name()='Extension']/*[local-name()='FileTypeAssociation']/*[local-name()='SupportedFileTypes']/*[local-name()='FileType' and not(.='*')]
*[local-name()='Extensions']/*[local-name()='Extension']/*[local-name()='Protocol']
*[local-name()='FileExplorerClassicContextMenuHandler']
*[local-name()='FileExplorerClassicDragDropContextMenuHandler']
*[local-name()='FileOpenPicker']
*[local-name()='FileSavePicker']
*[local-name()='FilesToExclude']
*[local-name()='FileToExclude']
*[local-name()='FileTypeAssociation']
*[local-name()='FileTypeAssociation']/*[local-name()='DisplayName']
*[local-name()='FileTypeAssociation']/*[local-name()='EditFlags']
*[local-name()='FileTypeAssociation']/*[local-name()='InfoTip']
*[local-name()='FileTypeAssociation']/*[local-name()='KindMap']/*[local-name()='Kind']
*[local-name()='FileTypeAssociation']/*[local-name()='Logo']
*[local-name()='FileTypeAssociation']/*[local-name()='MigrationProgIds']/*[local-name()='MigrationProgId']
*[local-name()='FileTypeAssociation']/*[local-name()='OleClass']
*[local-name()='FileTypeAssociation']/*[local-name()='ProgId']
*[local-name()='FileTypeAssociation']/*[local-name()='PropertyLists']/*[local-name()='PropertyList']
*[local-name()='FileTypeAssociation']/*[local-name()='SupportedFileTypes']/*[local-name()='FileType']
*[local-name()='FileTypeAssociation']/*[local-name()='SupportedVerbs']/*[local-name()='Verb']
*[local-name()='FirewallRules']
*[local-name()='FirewallRules']/*[local-name()='Rule']
*[local-name()='Font']
*[local-name()='HostRuntime']
*[local-name()='InfoTip']
*[local-name()='InstalledLocationVirtualization']
*[local-name()='KeywordAllData']
*[local-name()='KeywordAnyData']
*[local-name()='LevelData']
*[local-name()='LocalizedString']
*[local-name()='MailProvider']
*[local-name()='PredefinedTriggerEvents']
*[local-name()='PrimaryInteropAssemblies']
*[local-name()='PrimaryInteropAssemblies']/*[local-name()='Redirect']
*[local-name()='ProgId']
*[local-name()='Protocol']
*[local-name()='Protocol']/*[local-name()='DisplayName']
*[local-name()='Protocol']/*[local-name()='Logo']
*[local-name()='Protocol']/*[local-name()='MigrationProgIds']/*[local-name()='MigrationProgId']
*[local-name()='PublisherCacheFolders']/*[local-name()='Folder']
*[local-name()='Service']
*[local-name()='SharedFonts']
*[local-name()='ShareTarget']/*[local-name()='DataFormat']
*[local-name()='ShareTarget']/*[local-name()='SupportedFileTypes']/*[local-name()='FileType']
*[local-name()='ShareTarget']/*[local-name()='SupportedFileTypes']/*[local-name()='SupportsAnyFileType']
*[local-name()='StringData']/*[local-name()='DataItem']
*[local-name()='SupportedFileTypes']/*[local-name()='FileType']
*[local-name()='SupportedFileTypes']/*[local-name()='SupportsAnyFileType']
*[local-name()='SystemFileAssociation']
*[local-name()='TriggerCustom']
*[local-name()='TriggerEvents']
*[local-name()='UpdateActions']
*[local-name()='VisualElements']
*tiD;
*value
, could not get user sid
, status=0x
, user SID: 
,J"0.00
,p<DR
,XcvMonitor AppMon
,Zndrz
../..
../../*[local-name()='VisualElements']
./*[local-name()='AppService']
./*[local-name()='BackgroundTasks']
./*[local-name()='Content']
./*[local-name()='Device']
./*[local-name()='VisualElements']
.?AV_System_error@std@@
.?AVbad_alloc@std@@
.?AVbad_array_new_length@std@@
.?AVbad_cast@std@@
.?AVbad_optional_access@std@@
.?AVbad_variant_access@std@@
.?AVexception@std@@
.?AVfilesystem_error@filesystem@std@@
.?AVinvalid_argument@std@@
.?AVout_of_range@std@@
.?AVrange_error@std@@
.?AVResultException@wil@@
.?AVruntime_error@std@@
.?AVsystem_error@std@@
.?AVtype_info@@
._Q%N
.00cfg
.accountpicture-ms
.application
.appref-ms
.config
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.data
.data$brc
.data$r$brc
.data$rs$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gadget
.gehcont
.gfids
.giats
.html
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$brc
.rdata$r
.rdata$T$brc
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.tls$
.tls$ZZZ
.u(H;+u
.wil::err_failfast_policy::HResult
.xdata
.xdata$x
.xn--
/*[local-name()='Package']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.autoPlayContent']/*[local-name()='AutoPlayContent']/*[local-name()='LaunchAction']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.autoPlayDevice']/*[local-name()='AutoPlayDevice']/*[local-name()='LaunchAction']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.autoPlayHandler']/*[local-name()='AutoPlayHandler']/*[local-name()='InvokeAction']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension']/*[local-name()='FileTypeAssociation']/*[local-name()='SupportedFileTypes']/*[local-name()='FileType' and @ContentType]
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension']/*[local-name()='FileTypeAssociation']/*[local-name()='SupportedFileTypes']/*[local-name()='FileType' and @ContentType='
/*[local-name()='Package']/*[local-name()='Capabilities']/*[local-name()='Capability' and @Name='protectedApp']
/*[local-name()='Package']/*[local-name()='Capabilities']/*[local-name()='Capability' and @Name='removableStorage']
/*[local-name()='Package']/*[local-name()='Dependencies']/*[local-name()='OSPackageDependency']
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.classicAppCompatKeys']/*[local-name()='ClassicAppCompatKeys']/*[local-name()='ClassicAppCompatKey']
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.desktopEventLogging']/*[local-name()='DesktopEventLogging' and @AppName]
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.desktopEventLogging']/*[local-name()='DesktopEventLogging']/*[local-name()='EventMessageFiles']/*[local-name()='File']
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.desktopEventLogging']/*[local-name()='DesktopEventLogging']/*[local-name()='TypesSupported']/*[local-name()='TypeSupported']
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.installedLocationVirtualization']
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.userMutablePackageDirectories']/*[local-name()='UserMutablePackageDirectories']/*[local-name()='UserMutablePackageDirectory']
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension']
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Extensions']/mx:PackageExtension
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] |/*[local-name()='Package']/*[local-name()='Extensions']/mx:PackageExtension
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='Description']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='DisplayName']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='Logo']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='PublisherDisplayName']
//*[local-name()='Extension' and @Category='windows.appExtension']/*[local-name()='AppExtension' and @Name='microsoft.gameBarUIExtension']
/@*[local-name()="DesiredView"]
/install
/messageFilePath:
/parameterFilePath:
/resourceFilePath:
/unicode:true
/uninstall
/w/t'
: could not check access
: could not get SDDL
: could not get security descriptor
: does not have a resources.pri file or could not create a resource manager
: owner is 
: SDDL is 
: user has access 0x
: user has no access
::GetLastError()
::RegOpenKeyExW(classesRootKey.get(), Constants::CLSID, 0 , KEY_READ, &clsidTopLevelKey)
::RegOpenKeyExW(clsidKey.get(), Constants::InprocServer32, 0 , KEY_READ, &inprocServer32Key)
::RegOpenKeyExW(clsidTopLevelKey.get(), GuidString(clsid), 0 , samDesired, key)
::RegOpenKeyExW(GetHiveKey(whichHive), GetClassesRootPathRelativeToHiveKey(whichHive), 0 , samDesired, key)
:\tIA
:D$hu)H
:memory:
;/uAI
;\$Pr
;] sDH
;~ rB
;E$}fL
;l$Pt
;t$@t
;t$pr
;u }3L
?/tSL
??0?$basic_ios@GU?$char_traits@G@std@@@std@@IEAA@XZ
??0?$basic_istream@GU?$char_traits@G@std@@@std@@QEAA@PEAV?$basic_streambuf@GU?$char_traits@G@std@@@1@_N@Z
??0?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAA@XZ
??0_Locinfo@std@@QEAA@PEBD@Z
??0_Lockit@std@@QEAA@H@Z
??0facet@locale@std@@IEAA@_K@Z
??1?$basic_ios@GU?$char_traits@G@std@@@std@@UEAA@XZ
??1?$basic_istream@GU?$char_traits@G@std@@@std@@UEAA@XZ
??1?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAA@XZ
??1_Locinfo@std@@QEAA@XZ
??1_Lockit@std@@QEAA@XZ
??1facet@locale@std@@MEAA@XZ
??Bid@locale@std@@QEAA_KXZ
??Bios_base@std@@QEBA_NXZ
?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
?_Getcat@?$ctype@G@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
?_Getcoll@_Locinfo@std@@QEBA?AU_Collvec@@XZ
?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
?_Incref@facet@locale@std@@UEAAXXZ
?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z
?_Ipfx@?$basic_istream@GU?$char_traits@G@std@@@std@@QEAA_N_N@Z
?_Lock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAAXXZ
?_Pninc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAPEAGXZ
?_Syserror_map@std@@YAPEBDH@Z
?_Unlock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAAXXZ
?_Winerror_map@std@@YAHH@Z
?_Xbad_alloc@std@@YAXXZ
?_Xinvalid_argument@std@@YAXPEBD@Z
?_Xlength_error@std@@YAXPEBD@Z
?_Xout_of_range@std@@YAXPEBD@Z
?_Xregex_error@std@@YAXW4error_type@regex_constants@1@@Z
?c_str@?$_Yarn@D@std@@QEBAPEBDXZ
?eback@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?egptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?epptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?gbump@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXH@Z
?gptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?id@?$collate@G@std@@2V0locale@2@A
?id@?$ctype@G@std@@2V0locale@2@A
?imbue@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAXAEBVlocale@2@@Z
?is@?$ctype@G@std@@QEBA_NFG@Z
?pptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?rdbuf@?$basic_ios@GU?$char_traits@G@std@@@std@@QEBAPEAV?$basic_streambuf@GU?$char_traits@G@std@@@2@XZ
?sbumpc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QEAAGXZ
?setbuf@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAPEAV12@PEAG_J@Z
?setg@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXPEAG00@Z
?setp@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXPEAG0@Z
?setp@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXPEAG00@Z
?setstate@?$basic_ios@GU?$char_traits@G@std@@@std@@QEAAXH_N@Z
?sgetc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QEAAGXZ
?showmanyc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JXZ
?snextc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QEAAGXZ
?sync@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAHXZ
?tolower@?$ctype@G@std@@QEBAGG@Z
?tolower@?$ctype@G@std@@QEBAPEBGPEAGPEBG@Z
?uflow@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAGXZ
?xsgetn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JPEAG_J@Z
?xsputn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JPEBG_J@Z
@ !H0H
@ <"2$
@*[local-name()='%ls']
@*[local-name()='Category']
@*[local-name()='CompatMode']
@*[local-name()='CurrentDirectoryPath']
@*[local-name()='DdeExecApplication']
@*[local-name()='DdeExecCommand']
@*[local-name()='DdeExecIfExec']
@*[local-name()='DdeExecTopic']
@*[local-name()='Default']
@*[local-name()='HostId']
@*[local-name()='Parameters']
@*[local-name()='RuntimeBehavior']
@*[local-name()='Scope']
@*[local-name()='Subsystem']
@*[local-name()='SupportsMultipleInstances']
@*[local-name()='TrustLevel']
@.data
@.didat
@.reloc
@`H;{ r
@8!HHH
@8|$0
@8|$1u
@8|$Hu
@8}Pt
@8<.u
@8i t9
@8l$Xu
@8p tB
@8p tH@8t$Ht
@8qHtD@8q@u
@8t$Ht
@8u0t
@8ugu
@8uot
@8x u
@A^_]
@A^_^
@A^_^[]
@A^_^][
@A^A\_
@A^A]_
@A__]
@A_A\_
@A_A^]
@A_A^_
@A_A^_^]
@A_A^A\
@A_A^A\_]
@A_A^A\_^
@A_A^A\_^[]
@A_A^A]A\_^[
@A_A^A]A\_^]
@AddedItems
@DeletedItems
@ModifiedItems
@P!H`f
@R<R:4N8R
@s F;
@SUVWATAUAVAWH
@SUVWATAVAW
@SUVWAVAWH
@SUVWAVH
@SUVWH
@SVWATAUAVAWH
@SVWAVAWH
@SVWAVH
@SVWH
@t!I;F
@t4I;G
@u;L9;u$E3
@USVWATAUAVAWH
@USVWATAUAVH
@USVWATAVAWH
@USVWAUAVAWH
@USVWAVAWH
@USVWAVH
@USVWAWH
@USVWH
@USWATAUAVAWH
@USWATAVAWH
@USWAVH
@USWH
[%hs(%hs)]
[%hs]
[{Package}]
[8A8X8t!A
[checkstatements] #%u Database %p: Statement %p: %s SQL %s
[DatabaseCache.Add] #%u Database %p: StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[DatabaseCache.Get(Hit)] #%u DatabaseCache %p: Database %p: StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
[DatabaseCache.Get(Miss)] #%u DatabaseCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
[IzZG
[post-sqlite3_exec] #%u Database %p: Try %u (%llums) {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X} TID:%u : SQL %s
[post-sqlite3_finalize] #%u Database %p: Statement %p: --
[post-sqlite3_prepare] #%u Database %p: Statement -------- --: Try %u (%llums) : SQL %s
[post-sqlite3_prepare] #%u Database %p: Statement %p %s: Try %u (%llums) : SQL %s
[post-sqlite3_reset] #%u Database %p: Statement %p: %s
[post-sqlite3_step] #%u Database %p: Statement %p %s: Tries %u
[pre-DatabaseCache.Get] #%u DatabaseCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
[pre-sqlite3_exec] #%u Database %p {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X} TID:%u : SQL %s
[pre-sqlite3_finalize] #%u Database %p: Statement %p: %s
[pre-sqlite3_prepare] #%u Database %p : SQL %s
[pre-sqlite3_reset] #%u Database %p: Statement %p: %s
[pre-sqlite3_step] #%u Database %p: Statement %p %s
[pre-StatementCache.Get] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[sqlite3_close] #%u Database %p: %s
[sqlite3_exec] #%u Database %p: Try %u (%llums) {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}%s%s TID:%u %s : SQL %s
[sqlite3_finalize] #%u Database %p: Statement %p: --: %s
[sqlite3_open: lastErrNo:0x%X filecontrolrc:%d] #%u Database %p: %hs
[sqlite3_open: lastErrNo:0x%X filecontrolrc:%d] #%u Database %p: %s
[sqlite3_prepare] #%u Database %p: Try %u (%llums) %s : SQL %s
[sqlite3_prepare] #%u Database %p: Try %u (%llums)%s%s %s : SQL %s
[sqlite3_reset] #%u Database %p: Statement %p: %s: %s
[sqlite3_step] #%u Database %p: Statement %p %s: Try %u (%llums)%s%s %s : SQL %s
[S'rA9
[StatementCache.Add(list)] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[StatementCache.Add] #%u Database %p: StatementCache %p: Statement %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
[StatementCache.Get(Hit)] #%u Database %p: StatementCache %p: Statement %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
[StatementCache.Get(Miss)] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
\$ E3
\$ UH
\$ UVW
\$ UVWATAUAVAWD
\$ UVWATAUAVAWH
\$ UVWATAVH
\$ UVWAVAWH
\$ UVWH
\$ VWAVH
\$ WH
\$@L;_Hu
\$`E3
\$`H;_Ht`H
\$`L;
\$`L;APs
\$`L;GPs
\$`L+
\$0A8X t)H
\$0E2
\$0E3
\$0H;
\$0H;\$8t
\$0I;^
\$0ue
\$8D8d$pu
\$8E3
\$8H;
\$8I;
\$8Lc
\$HD8s
\$nfA
\$pD9|$0tWH
\$PfD
\$pI;
\$PI;
\$X!D$PL
\$x@2
\$XD;
\$xHi
\$xI;
\\.\FltMgr
\\?\UNC\
\assembly\
\Deleted
\LaunchWinApp.exe" "%1"
\Local
\Local\Microsoft\WritablePackageRoot
\LocalCache
\Microsoft.NET\assembly\
\MutableBackup
\MutablePackageRoot
\Packages
\Registry\
\resources.pri
\RXRV
\SharedLimitedTime\
\WcifsPort
\WOW6432Node
\Wow6464Node
\WowAA32Node
\WowAA64Node
]|pIX
]8H9^@t5H
]PL;iPs
]PL;oPs
^ H9;t
^lBaaAV
^m&5t
_^[]H
_^6&a
__C_specific_handler
__current_exception
__current_exception_context
__CxxFrameHandler3
__CxxFrameHandler4
__std_terminate
_1.0.0.0_neutral_neutral_nopublisherid
_activatableClassId.Set(activatableClassId.Get())
_attributes->GetView(&(_properties.CustomAttributes.MapView))
_attributes->GetView(attributes)
_classes->First(&iterator)
_classes->Insert(clsid, classProperties.Get(), &replaced)
_classNames->Append(className.Get())
_combinedProperties
_combinedProperties->AddStringValueForInprocServer32CompatibilityKey( assemblyAttributeName.Get(), assembly)
_combinedProperties->AddStringValueForInprocServer32CompatibilityKey( implementationClassAttributeName.Get(), implementationClass)
_combinedProperties->AddStringValueForInprocServer32CompatibilityKey( runtimeVersionAttributeName.Get(), runtimeVersion)
_combinedProperties->SetInprocServerDllPath_arm(mscoreeDll.Get())
_combinedProperties->SetInprocServerDllPath_arm64(mscoreeDll.Get())
_combinedProperties->SetInprocServerDllPath_x64(mscoreeDll.Get())
_combinedProperties->SetInprocServerDllPath_x86(mscoreeDll.Get())
_combinedProperties->SetIsSystemInprocServerDll(true)
_combinedProperties->SetOutofprocClassIsSurrogate(true)
_combinedProperties->SetServerId(serverId)
_customAttributes->GetView(&customAttributesView)
_customAttributes->HasKey(name, &alreadyHasKey)
_customAttributes->Insert(name, propValue.Get(), &replacedIgnored)
_customAttributes->Lookup(name, &existingPropValue)
_CxxThrowException
_dataFormats->Append(dataFormat)
_dataFormats->IndexOf(dataFormat, &indexIgnored, &found)
_exeServers->First(&iterator)
_exeServers->HasKey(serverName, found)
_exeServers->Insert(serverName.Get(), static_cast<IExeServerRegistration*>(server), &replaced)
_exeServers->Lookup(serverName, &registration)
_HD8e@t
_implementedCategories->GetView(&implementedCategoriesView)
_implementedCategories->Insert(Wrappers::HStringReference(categoryKey).Get(), categoryPropValue.Get(), &replacedIgnored)
_initterm
_initterm_e
_inProcessActivatableClasses->First(&iterator)
_inProcessActivatableClasses->HasKey(activatableClassId, found)
_inProcessActivatableClasses->Lookup(activatableClassId, &registration)
_interfaceRegistrations->First(&iterator)
_interfaces->Insert(interfaceId, spRegistration.Get(), &replaced)
_local_unwind
_miscStatusAspects->GetView(&miscStatusAspectsView)
_miscStatusAspects->HasKey(aspect, &alreadyHasKey)
_miscStatusAspects->Insert(aspect, miscStatusPropValue.Get(), &replacedIgnored)
_miscStatusAspects->Lookup(aspect, &existingMiscStatusPropValue)
_o____lc_codepage_func
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vsnprintf_s
_o___stdio_common_vsnwprintf_s
_o___stdio_common_vsprintf
_o__callnewh
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__errno
_o__execute_onexit_table
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__purecall
_o__register_onexit_function
_o__seh_filter_dll
_o__stricmp
_o__wcsicmp
_o__wcsnicmp
_o__wcstoui64
_o__wtoi
_o_calloc
_o_ceilf
_o_free
_o_malloc
_o_memcpy_s
_o_realloc
_o_terminate
_o_wcscpy_s
_o_wcsncat_s
_o_wcsncpy_s
_o_wcstok_s
_o_wcstol
_o_wcstoll
_o_wcstoul
_o_wcstoull
_outOfProcessActivatableClasses->First(&iterator)
_outOfProcessActivatableClasses->HasKey(activatableClassId, found)
_outOfProcessActivatableClasses->Insert(acid.Get(), static_cast<IExeServerActivatableClassRegistration*>(activatableClass), &replaced)
_outOfProcessActivatableClasses->Lookup(activatableClassId, &registration)
_progIds->Insert(progId, spRegistration.Get(), &replaced)
_properties.ActivatableClasses.InitializeFromStringArray(_classNames.Get())
_properties.EnableOleDefaultHandler.Present
_properties.EnableVirtualizationForInprocHandler.Present
_properties.EnableVirtualizationForInprocServer.Present
_properties.ImplementedCategories.MapView.CopyTo(IID_PPV_ARGS(&implementedCategoriesIterable))
_properties.InprocHandlerHasMachineScope.Present
_properties.InprocServerHasMachineScope.Present
_properties.InsertableObject.Present
_properties.IsSystemInprocServerDll.Present
_properties.MiscStatusAspects.MapView.CopyTo( IID_PPV_ARGS(&miscStatusAspectsIterable))
_properties.OutofprocClassHasMachineScope.Present
_properties.UseUniversalMarshaler.Present
_properties.Verbs.MapView.CopyTo(IID_PPV_ARGS(&verbsIterable))
_propertyValueFactory->CreateString(miscStatus, &miscStatusPropValue)
_propertyValueFactory->CreateString(value, &propValue)
_propertyValueFactory->CreateString(verb, &verbPropValue)
_propertyValueFactory->CreateUInt32(0, &categoryPropValue)
_propertyValueFactory->CreateUInt32(value, &propValue)
_proxyStubRegistrations->First(&iterator)
_proxyStubs->Insert(proxyStubClassId, spRegistration.Get(), &replaced)
_server.CopyTo(server)
_serverCount > 0
_servers->Insert(serverId, serverRegistration.Get(), &replaced)
_spAttributesCollisionMap->HasKey(keyName, &fHasKey)
_spAttributesCollisionMap->Insert(keyName, keyName, &fReplaced)
_spAttributesCollisionMap->Remove(keyName)
_spAttributesMap->GetView(_properties.CustomProperties.MapView.ReleaseAndGetAddressOf())
_spAttributesMap->GetView(spAttributesMapView.GetAddressOf())
_spPropertyValueFactory->CreateString(value, &spPropertyValue)
_spPropertyValueFactory->CreateUInt32(value, &spPropertyValue)
_treatAsClasses->Insert(classId, spRegistration.Get(), &replaced)
_typeLibs->Insert(typeLibKey.Get(), spRegistration.Get(), &replaced)
_verbs->GetView(&verbsView)
_verbs->HasKey(verbId, &alreadyHasKey)
_verbs->Insert(verbId, verbPropValue.Get(), &replacedIgnored)
_verbs->Lookup(verbId, &existingVerbPropValue)
_Wcscoll
_Wcsxfrm
` UAVAWH
`.rdata
`[@D+
`A^_^[]
`A^_^][
`A^A\_^]
`A_A^_^[
`A_A^_^]
`A_A^A\_^[]
`A_A^A]A\_^]
{ ATAVAWH
{ AVH
{@A8w
{||urH
{|}t H
{00020424-0000-0000-C000-000000000046}
{4ED3A719-CEA8-4BD9-910D-E252F997AFC2}
{78E1CD88-49E3-476E-B926-580E596AD309}
{A56A841F-E974-45C1-8001-7E3F8A085917}
{BFEC0C93-0B7D-4F2C-B09C-AFFFC4BDAE78}
|$ ATAVAWH
|$ AVH
|$ AWH
|$ E3
|$ I9
|$ SRD1t
|$ UATAUAVAWH
|$ UATAWH
|$ UAVAWH
|$ UH
|$(;}
|$(A\
|$(A^
|$(E3
|$(I;
|$@A_A^A]A\
|$@E3
|$0E3
|$0L;
|$HH;|$pu'A
|$HM;
|$PE3
|$Xf9t$`t
|$xfD
|$XH;{
|$xI;
|6fD9Q
|Ff9Q
|-udH
} A8w
}PD;u0
}PD8u
}Pt}H
}X;u0
~@H9FXu
~\IcR(A
~]IcQ(A
~0H+~(H
~1LcA(H
~HD+x
~TIcQ(A
~VHcS(A
~WIcQ(A
~XIcQ(A
~ZIcQ(A
+ *Px
+dZrp>N
<"D$^&r$."<(>*^,r*.(<.>0^2r0..<4=
<@\t/
<Error 0x%X converting the user's SID to a string>
<Error 0x%X getting the user's SID from the process' token>
<Error 0x%X in GetApplicationUserModelIdFromToken>
<Error 0x%X in GetPackageFullName>
<Error 0x%X in NtQueryInformationProcess>
<Error 0x%X in OpenProcessToken>
<Error 0x%X in QueryFullProcessImageNameW>
<Error 0x%X moving command line>
<Error allocating memory>
<Error message string not found>
<error>
<J>b@NBLD0F
<No commandline present>
<no-error-message>
<None>
<null>
<Unknown>
=;\$8t5
=u!H;+u
>`Path: %ws
>r<.:)
0123456789abcdef\
0123456789abcdefghjkmnpqrstvwxyz
0123456789ABCDEFonecore\base\appmodel\common\guid.cpp
040904B0
04206N8"<
08@HPX`h
08286
0A^_]
0A^_^
0A^_^[]
0A^_^][
0A^A\]
0A__^[]
0A_A^]
0A_A^_
0A_A^_][
0A_A^_^[
0A_A^_^]
0A_A^A\
0A_A^A\_]
0A_A^A\_^
0A_A^A\_^[]
0A_A^A]_^
0A_A^A]_^[]
0A_A^A]A\]
0A_A^A]A\_
0A_A^A]A\_^[
0A_A^A]A\_^]
0Ic@ I
0RP\M
0s F;
0x%08lx
10.0.22621.1
10.0.22621.1 (WinBuild.160101.0800)
1234567890abcdefghjkmnpqrstvwxyzABCDEFGHJKMNPQRSTVWXYZ
2 2"y
3;\$8t+
3333333
3D$8%
3D$8%x
4$L9w@t5M
6*$^L^$@X*
6|2(H
8\$ u
8\$`t
8\$`uI
8\$PtRH
8]Pt:8]
8_^][
8A t*H
8A^_^[
8A_A^_^[]
8A_A^A]A\_^][
8B t(H
8Bpt,H
8x6.4J:
9)v4H
9*v4H
9.tkf
9\$@L
9\$Ht
9\$Pv[H
9\$xu
9_(u#H
9|$@t
9+teL
9D$Pt
9D$pt+
9E8t>I
9O4t;
9s(v'H
9s@|+3
9T$ v
9t$@t
9t$8|
9uotRH
9uPt/H
9uPtBH
9W@u*
9y<tjH
9Y8IL
A(A;@
A,9A(
A@A8@ t-H
A]A\]
A^_[]
A^_^[
A^_^[]
A^_^][
A^A\]
A^A\_
A^A\_^]
A^A]A\_]
A^A]A\_^
A^A]A\_^[]
A_A\]
A_A]A\_]
A_A^]
A_A^^
A_A^_
A_A^_^[
A_A^_^[]
A_A^_^]
A_A^_^][
A_A^A\
A_A^A\_[]
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A\_^][
A_A^A]_]
A_A^A]_^
A_A^A]_^[]
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_[]
A_A^A]A\_^[
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^][
a7l6y+
A8F@u|8E
A8FBt3I
A8v`t
A9_0t0H
A9<$sEA
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
Access
access
AccessCheck
AccessControlFlags
accountpictureprovider
AccTreeResetNamedSecurityInfo
acid.Initialize(activatableClass->get_ActivatableClassId())
AcquireSRWLockExclusive
AcquireSRWLockShared
Action
ActionDisplayName
ActionStart
ActionStop
activatableClass
activatableClass->PendingWriteToStore(packageMoniker, registrationStoreContext)
ActivatableClassId
ActivatableClassIdentifier
Activation
activationCount
ActivityError
ActivityFailure
ActivityIntermediateStop
ActivityStoppedAutomatically
AddAccessAllowedAceEx
AddAce
AddedItems
AddImplementedCategory(CATID_Insertable)
AddLookaside
AddPrinterW
AddStringCustomAttribute(assemblyAttributeName.Get(), assembly)
AddStringCustomAttribute(implementationClassAttributeName.Get(), implementationClass)
AddStringCustomAttribute(runtimeVersionAttributeName.Get(), runtimeVersion)
AddToPurgeList(m_previousOwnerPackageFullName.c_str(), ResourceScopePerPackage, resourcePath.c_str())
AdjustTokenPrivileges
admin
Admin
ALARM_DEH_KEYWORD
AlarmCapable
Alias
AllocateAndInitializeSid
AllowSilentDefaultTakeOver
alnum
alpha
Always
AlwaysUnsafe
Analytic
analytic
Analyze
ANALYZE;
ancestor::*[local-name()='
ancestor::*[local-name()='Application']
ancestor::*[local-name()='Application']/*[local-name()='VisualElements']
ancestor::*[local-name()='Application']/*[local-name()='VisualElements']/*[local-name()='LockScreen']
ancestor::*[local-name()='Extension']
ancestor::*[local-name()='Extension']/*[local-name()='Logo']
ancestor::*[local-name()='InvokeAction']
ancestor::*[local-name()='InvokeAction']/*[local-name()='DefaultIcon']
Aonecore\admin\appmodel\osim\src\deh\dsm\dsmextensionhandler.cpp
Apartment
api-ms-win-appmodel-runtime-internal-l1-1-1.dll
api-ms-win-appmodel-runtime-internal-l1-1-2.dll
api-ms-win-appmodel-runtime-internal-l1-1-4.dll
api-ms-win-appmodel-runtime-l1-1-0.dll
api-ms-win-appmodel-runtime-l1-1-1.dll
api-ms-win-appmodel-runtime-l1-1-3.dll
api-ms-win-appmodel-state-l1-2-0.dll
api-ms-win-appmodel-unlock-l1-1-0.dll
api-ms-win-core-apiquery-l1-1-0.dll
api-ms-win-core-biplmapi-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-com-private-l1-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-file-l1-2-2.dll
api-ms-win-core-file-l2-1-0.dll
api-ms-win-core-file-l2-1-2.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-core-io-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-psapi-l1-1-0.dll
api-ms-win-core-realtime-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-registry-l1-1-1.dll
api-ms-win-core-registry-l2-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-shlwapi-legacy-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-string-l2-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-threadpool-legacy-l1-1-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-windowserrorreporting-l1-1-1.dll
api-ms-win-core-winrt-error-l1-1-0.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-core-wow64-l1-1-1.dll
api-ms-win-crt-private-l1-1-0.dll
api-ms-win-crt-runtime-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-eventing-tdh-l1-1-0.dll
api-ms-win-ntuser-ie-message-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-cryptoapi-l1-1-0.dll
api-ms-win-security-lsalookup-l1-1-0.dll
api-ms-win-security-lsalookup-l2-1-0.dll
api-ms-win-security-provider-l1-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
api-ms-win-security-trustee-l1-1-0.dll
api-ms-win-service-management-l1-1-0.dll
api-ms-win-service-management-l2-1-0.dll
api-ms-win-service-winsvc-l1-1-0.dll
api-ms-win-shcore-registry-l1-1-0.dll
api-ms-win-shcore-stream-l1-1-0.dll
api-ms-win-shcore-thread-l1-1-0.dll
ApiSetQueryApiSetPresence
appContainer
AppData
AppDataErrorOperation
AppDataVolume
AppDeployment.Test.SearchSettingsMigration.Main_8wekyb3d8bbwe
AppExecutionAlias
AppExecutionAliasUser
AppExtension
AppExtensionHost
AppExtensionName
AppID
appId
AppId
AppID
AppId
AppInstaller
AppInstallerUri
ApplicabilityState
ApplicabilityStateEnumMap
application
Application
application.manifest
application.reference
application/force-download
application/octet-stream
application/unknown
application/x-msdownload
ApplicationBackgroundTask
ApplicationCompany
ApplicationContentUriRule
ApplicationCount
ApplicationDescription
ApplicationExtension
ApplicationIcon
ApplicationIdentity
ApplicationIndex
ApplicationName
ApplicationProperty
ApplicationUser
ApplicationUserModelId
APPLYDATA_DEH_KEYWORD
ApplyInPlace
APPMODEL_RUNTIME_DMR_KEYWORD
AppName
AppObject.Aliased
AppObject.EntryPoint
AppObject.RuntimeType
AppService
APPSERVICE_DEH_KEYWORD
appSilo
APPSYNC_DEH_KEYWORD
AppUriHandler
AppUriHandlerGroup
AppUserModelId
AppUserModelID
AppX Deployment Extensions Desktop DLL
APPX_BASE_DEH_KEYWORD
APPX_E_INVALID_MANIFEST
AppxAllUserStore
AppXAllUserStore.dll
AppXApplyTrustLabelToFolder
AppXBackupContentType
AppXdbszz9cysstkgdz6xk17sywkqb7gjj0v
AppXDeployment.Perftrack.Task.Uninstall
AppXDeployment.Task.Server.AppxAllUserStore
AppXDeployment.Task.Server.Dependency
AppXDeployment.Task.Server.Deployment
AppXDeployment.Task.Server.Deployment.AllowReset
AppXDeployment.Task.Server.Deployment.AllowService
AppXDeployment.Task.Server.Deployment.AllowService2
AppXDeployment.Task.Server.Deployment.AllowUninstall
AppXDeployment.Task.Server.Deployment.BeginJETSession
AppXDeployment.Task.Server.Deployment.BundleProcessor
AppXDeployment.Task.Server.Deployment.CancelRequest
AppXDeployment.Task.Server.Deployment.CleanupManagerPostDeployment
AppXDeployment.Task.Server.Deployment.CleanupManagerPreDeployment
AppXDeployment.Task.Server.Deployment.ClearPackageStatus
AppXDeployment.Task.Server.Deployment.ContainerDeploymentStateHandler
AppXDeployment.Task.Server.Deployment.CreateDatabase
AppXDeployment.Task.Server.Deployment.DataFlushStateHandler
AppXDeployment.Task.Server.Deployment.DeletePackageFiles
AppXDeployment.Task.Server.Deployment.DeStagePackage
AppXDeployment.Task.Server.Deployment.DisablePackage
AppXDeployment.Task.Server.Deployment.EndJETSession
AppXDeployment.Task.Server.Deployment.EvaluateStateHandler
AppXDeployment.Task.Server.Deployment.FileCompressionStat
AppXDeployment.Task.Server.Deployment.FileStat
AppXDeployment.Task.Server.Deployment.FlushMachineRegistration
AppXDeployment.Task.Server.Deployment.FlushUserRegistration
AppXDeployment.Task.Server.Deployment.GetRequestForWNFName
AppXDeployment.Task.Server.Deployment.MRTDataStateHandler
AppXDeployment.Task.Server.Deployment.MutablePackageDirectoryStateHandler
AppXDeployment.Task.Server.Deployment.OptionalDependencyHandler
AppXDeployment.Task.Server.Deployment.OSIMActivate
AppXDeployment.Task.Server.Deployment.OSIMDeactivate
AppXDeployment.Task.Server.Deployment.PackageManagerGetPackageReader
AppXDeployment.Task.Server.Deployment.PackagesInUse
AppXDeployment.Task.Server.Deployment.PackageStateHandler
AppXDeployment.Task.Server.Deployment.PrerequisiteStateHandler
AppXDeployment.Task.Server.Deployment.QueueManagerDequeue
AppXDeployment.Task.Server.Deployment.QueueManagerEnqueue
AppXDeployment.Task.Server.Deployment.QueueManagerGetNext
AppXDeployment.Task.Server.Deployment.ReleaseJETResources
AppXDeployment.Task.Server.Deployment.RepositoryBeginTransaction
AppXDeployment.Task.Server.Deployment.RepositoryCommitTransaction
AppXDeployment.Task.Server.Deployment.RepositoryRollbackTransaction
AppXDeployment.Task.Server.Deployment.RepositoryTerminateSession
AppXDeployment.Task.Server.Deployment.Runtime
AppXDeployment.Task.Server.Deployment.SetPackageState
AppXDeployment.Task.Server.Deployment.SetPackageStatus
AppXDeployment.Task.Server.Deployment.SharedAppsRedirectHandler
AppXDeployment.Task.Server.Deployment.SharedAppsSyncHandler
AppXDeployment.Task.Server.Deployment.SISOptimization
AppXDeployment.Task.Server.Deployment.StagePackage
AppXDeployment.Task.Server.Deployment.StageUserData
AppXDeployment.Task.Server.Deployment.StateRepositoryDownlevel
AppXDeployment.Task.Server.Deployment.StateRepositoryFixIntegrity
AppXDeployment.Task.Server.Deployment.TilesStateHandler
AppXDeployment.Task.Server.Deployment.Trust
AppXDeployment.Task.Server.Deployment.UpdatePackage
AppXDeployment.Task.Server.Deployment.UpdatePackageStatus
AppXDeployment.Task.Server.Deployment.VersionSupercedenceHandler
AppXDeployment.Task.Server.Extensions
AppXDeployment.Task.Server.OSIM
AppXDeployment.Task.Server.Service
AppXDeployment.Task.Server.StagingManager
AppXDeployment.Task.Server.VolumeManager
AppXDeployment.Task.Server.VolumeRequestManager
AppXDeploymentClient.dll
AppXDeploymentExtensions.desktop.dll
AppxDeploymentExtensions.Desktop.pdb
AppxDeploymentExtensions.dll
AppXDeploymentServer
AppxDeploymentServer.dll
APPXDEPLOYMENTSERVER_KEYWORD
APPXDEPLOYMENTSERVER_PERF_KEYWORD
AppxExtension
AppxManifest
AppxManifest.xml
AppxMetadata\AppxBundleManifest.xml
AppxMetadata\CodeIntegrity.cat
AppxMiniRepository
AppxPackageOriginEnumMap
AppxPackageVolumes
AppxPolicies
AppxPurgeList
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs
AppxRoot
AppXSetTrustLabelOnPackage
AppxSignature.p7x
AppxSignatureOriginEnumMap
Architecture
ArchitectureEnumMap
Argument
Arguments
arm64
Assembly
AssemblyName
AssemblyVersion
AsynchronousInterface
ATAVAWH
ATTACH DATABASE '%s' AS '%s';
Attribute
AttributeName
attributes->Insert(keyName.Get(), propValue.Get(), &replaced)
AttributesMap::Make(&_attributes)
AttributesMap::Make(&registration->_attributes)
AttributeValue
AumId
AutoBackup
autoBackup
AutoConvertTo
automatic index on PackageIdByAll(_PackageID)
AUTOPLAY_DEH_KEYWORD
AutoUpdatePackage
AuxUserType
B<D6F
B7Xzz
BACKGROUND_TASKS_DEH_KEYWORD
bad allocation
bad array new length
bad cast
Bad optional access
bad variant access
batfile
Bcrypt.dll
BCryptCloseAlgorithmProvider
BCryptCreateHash
BCryptDestroyHash
BCryptFinishHash
BCryptGetProperty
BCryptHashData
BCryptOpenAlgorithmProvider
BEGIN -> COMMIT;
BEGIN -> ROLLBACK;
BEGIN EXCLUSIVE /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
BfRemoveMappingEx
BfSetupFilterEx
Bh(jt
BiApplicationStateTransition
BiChangeApplicationStateForPackageName
BinaryCount
BINDFLTAPI.dll
blank
BMAP<
Bool1
Bool2
BrowserChoice_cw5n1h2txyewy
buffer error
BufferSize
bufferSize
BuildTrusteeWithSidW
Bundle
BundlePackage
BundlePackageFullName
BundleResource
BusyCount
BusyDelayBetweenRetries
BusyMaxTimeout
BusyTimeout
BX9A4t
C !C0H
C H!C(H
C H;>r
C H9D$p
C(!C8H
C(!C8H!C@H
C`#St
C++/WinRT version:2.0.220110.5
C8!CHH
C9fD97u,
Cache.Count
Cache.Hits
Cache.Misses
cache_size
CacheHit
CacheMiss
CacheSpill
CacheUsed
CacheWrite
CalculateBinaryCompatibilityPropertiesIfNecessary(incomingPackage)
CalculateServerPermissions(strPackageSid)
CalculateSurrogateDllPath(incomingPackage)
callContext
CallContext:[%hs] 
CallerPackageFullName
CallingProcess
CallOrigin
cannot start a transaction within a transaction
Capabilities
Capability
capabilityCheck
CapabilityCount
CapabilityNotSupported
CapabilitySids
capauthz.dll
Category
CategoryName
Cc}H+
CD$`H
CD$0H
CD$8H
cD9#v+L
cerfile
CERTIFICATES_DEH_KEYWORD
ChangeAppPrinterPort
changeid_next_value
changeid_next_value() failed
ChangeServiceConfig2A
ChangeServiceConfig2W
Channel
channel
Channels
channels
CharLowerBuffW
CHE8h8u
CheckAllCascadingInDeploymentPartition
CheckAllCascadingInMachinePartition
CheckOnStartup
Checkpoint
CheckPoint.VPN_cw5n1h2txyewy
CheckpointInterval
CheckpointMaxClockDelta
CheckpointMode
CheckResult
chm.file
Class
Classes
classes->HasKey(id, &internalRegistrationExists)
classes->Insert(id, _combinedProperties.Get(), &replaced)
classes->Lookup(id, &_combinedProperties)
classic
classProperties
classRegistration->SetAppId(_appId.Value)
classRegistration->SetApplicationDisplayName( _properties.ApplicationDisplayName.Value.Get())
classRegistration->SetExeServerArguments(_properties.Arguments.Value.Get())
classRegistration->SetExeServerPath(_properties.Executable.Value.Get(), _properties.IsSystemExecutable.GetValueOrDefault(false), _properties.SystemExecutableArchitecture.GetValueOrDefault(IMAGE_FILE_MACHINE_UNKNOWN))
Clear
ClockType
clockType
CloseHandle
ClosePrinter
CloseServiceHandle
CloseState
CloseThreadpoolTimer
CloudSearchEnabled
CloudSearchEnabledForAAD
CloudSearchEnabledForMSA
CLSID
Clsid
CLSID
Clsid
CLSID
ClsidExtended
ClsidSimple
cmdfile
cntrl
CoCancelCall
CoCreateCLSIDOOP
CoCreateGuid
CoCreateInstance
CoCreateInstance(__uuidof(MrtResourceManager), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&localResourceManager))
CoDisableCallCancellation
CoEnableCallCancellation
CoGetApartmentType
CoGetClassObject
CoGetModuleArchitecture
CoGetModuleArchitecture(_exeServerAbsolutePath.get(), reinterpret_cast<DWORD*>(&_executableArchitecture))
CoGetModuleArchitecture(_surrogateDllAbsolutePath.get(), reinterpret_cast<DWORD*>(&_surrogateDllArchitecture))
COLLECTOREXTENSION_DEH_KEYWORD
collectors->GetActivationCatalogCollector()->AddOutOfProcessActivatableClassRegistration(classRegistration.Get())
collectors->GetActivationCatalogCollector()->AddServerRegistration(serverRegistration.Get())
collectors->GetActivationCatalogCollector()->RetrieveInProcessActivatableClassRegistration(activatableClassId, &found, &retrievedInProcClassRegistration)
collectors->GetActivationCatalogCollector()->RetrieveOutOfProcessActivatableClassRegistration( activatableClassId, &found, &outOfProcessRegistration)
collectors->GetActivationCatalogCollector()->RetrieveOutOfProcessActivatableClassRegistration(activatableClassId, &found, &retrievedOutOfProcClassRegistration)
collectors->GetActivationCatalogCollector()->RetrieveServerRegistration( serverName, &found, &serverRegistration)
collectors->GetActivationCatalogCollector()->RetrieveServerRegistration(serverName, &found, &retrievedServerRegistration)
collectors->GetActivationCatalogCollector()->RetrieveServerRegistration(serverName, &found, &serverRegistration)
collectors->GetExtensionCatalogCollector()->CreateExtensionRegistration( contractId, activatableClassId, spExtensionRegistration.GetAddressOf())
collectors->GetExtensionCatalogCollector()->RetrieveExtensionRegistration( contractId, activatableClassId, spExtensionRegistration.GetAddressOf())
Column
ColumnNumber
Com::Catalog::Win32Registry::Details::GetStringValue
Com::Catalog::Win32Registry::GetInprocServer32Properties
Com::Catalog::Win32Registry::OpenClassesRootKey
Com::Catalog::Win32Registry::OpenClsidKey
com1.
com2.
com3.
com4.
com5.
com6.
com7.
com8.
com9.
combase.dll
ComClassRegistration::RuntimeClassInitialize(classes, id)
comfile
command
commandLine
COMMIT /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
Common Programs
Common::Deployment::Configuration::AreMrtResourcesRedirected(package->GetIsMsixvc(), &resourcesRedirected)
COMMUNICATION_BLOCKING_APP_DEH_KEYWORD
ComOutofprocClassRegistration::RuntimeClassInitialize(classes, id, serverId)
CompanyName
CompareStringEx
CompareStringOrdinal
CompareStringW
CompatMode
compress
Compress(x[,level]) error: Invalid level (%d)
Compress(x[,level]) error: Invalid type for level (%d)
CompressedSizeKB
ComServerRegistration::CreateClassRegistration<ComExeClassRegistration>(classId, &classRegistration)
ComServerRegistration::CreateClassRegistration<ComServiceClassRegistration>(classId, &classRegistration)
ComServerRegistration::CreateClassRegistration<ComSurrogateClassRegistration>(classId, &classRegistration)
ComServerRegistration::SetArguments(arguments)
ComServerRegistration::SetExecutable(executable, isSystemExecutable)
ComServerRegistration::SetServiceName(serviceName)
ComServerRegistration::SetSurrogateAppId(appId)
ComServerRegistration::SetSurrogateAppId(classId)
ComServerRegistration::SetSystemExecutableArchitecture(architecture)
ConditionalACE
Configuration
ConnectedSet
ConnectedSetPackageFamily
console
ConstructCommandLine(_exeServerAbsolutePath.get(), _exeServerArguments.Value.GetRawBuffer(nullptr), _exeServerCommandLine)
Content
ContentEvent
ContentGroup
ContentGroupFile
contentsCopy
ContentType
Context
ContractID
ContractId
contractIdCopy.Set(contractId.Get())
Control
controlGuid
ControlGuid
ControlService
Conversion
ConvertSecurityDescriptorToStringSecurityDescriptorW
ConvertSidToStringSid(tokenUser->User.Sid, &stringSid)
ConvertSidToStringSidW
ConvertStringSecurityDescriptorToSecurityDescriptorW
ConvertStringSidToSidW
copy.Initialize(_activatableClassId.Get())
copy.Initialize(_contractId.Get())
copy.Initialize(_permissions.Get())
copy.Initialize(_properties.AppUserModelId.Value.Get())
copy.Initialize(_properties.CommandLine.Value.Unexpanded.Get())
copy.Initialize(_properties.Description.Get())
copy.Initialize(_properties.DisplayName.Get())
copy.Initialize(_properties.ExePath.Value.Unexpanded.Get())
copy.Initialize(_properties.Icon.Get())
copy.Initialize(_properties.Vendor.Get())
copy.Initialize(_serverName.Get())
CopyFileExW
CopyFileW
CopySid
CoSetProxyBlanket
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
Count
CountOfErrorsCorrected
CountOfErrorsDetected
CP!C`f
cplfile
Cpu:%d%s Mem:%d%s Io:%d%s
CpuPriority
create_directories
create_directory
CreateActivationCatalogCollector(&activationCatalogCollector)
CreateActivationCatalogCollectorForUser(&activationCatalogCollectorForUser)
CreateCompatibilityEntries(incomingPackage)
CreateDirectoryW
CreateEnvironmentBlock
CreateEventW
CreateExtensionCatalogCollector(&extensionCatalogCollector)
CreateFileMappingW
CreateFileW
CreateHardLinkW
CreateMutexExW
CreatePackagedComCatalogCollector(&packagedComCatalogCollector)
CreatePackagedComCatalogCollectorForUserOrSystemRegister(userToken, &packagedComCatalogCollectorForUserOrSystemRegister)
CreatePort
CreateProcessAsUserW
CreateProcessW
CreatePropertyValueFactoryIfNecessary()
CreateRegistryCompatibilityCollector
CreateRegistryCompatibilityCollector(&registryCompatibilityCollector)
CreateRegistryCompatibilityCollectorForUserOrSystemRegister
CreateRegistryCompatibilityCollectorForUserOrSystemRegister(userToken, &registryCompatibilityCollectorForUserOrSystemRegister)
CreateRegistryCompatibilityManager
CreateRegistryCompatibilityManager(true , nullptr , &registryCompatibilityManager)
CreateSemaphoreExW
CreateServiceW
CreateSetting: Subkey=%ls
CreateStreamOnHGlobal
CreateSymbolicLinkW
CreateThreadpoolTimer
CreateTimerQueueTimer
CreateWellKnownSid
Critical
CryptAcquireContextW
CryptCreateHash
CryptDestroyHash
CryptGetHashParam
CryptHashData
CryptReleaseContext
CT$(H
CT$`H
CT$`L
CT$0L
currentBegin == currentEnd
currentBegin == m_text.length()
currentContextId
currentContextMessage
currentContextName
CurrentFilePath
CurrentFileSize
CurrentlyInstalledPackages
CurrentPackageFullName
currentPackageFullName
CurrentPackageFullName
currentPackageFullName
currentStepIndex
CurVer
Custom
custom
CUSTOM_CAPABILITY_CHECK
CustomInstallActionType is INVALID
CustomInstallExec.exe
CustomInstallWork
CustomInstallWork Flags are INVALID
cW*q.
CXH9h
D!D$ D
D#CtA
D#CtD
D#D$0D
D#GtD
D$ E3
d$ E3
D$ E3
D$ H!D$(
D$ H9C
D$ Hi
D$ Mi
D$ SRD1H
D$ tk
D$$H;
D$(@@!
D$(E3
D$(I+
D$(L!L$ H
D$(L+
D$@E3
D$@fA
D$@H;
D$@H9
D$@L9g(
D$@L9H s
D$\D+
D$`@8l$ht
D$`D8h
D$`E3
D$`E8
D$`H;
D$`H9D$Pu
D$`H9D$Pu!H
D$`Hcy
D$03D$8
d$0D8
D$0D8p
D$0D9r
D$0E3
d$0fD
D$0H;
D$0H;D$8t
D$0H;G
D$0H9H s
d$0I;
D$0I+
D$0L;
D$0Li
D$0t,M
D$0u 
d$4@2
D$43D$<
D$8@8
D$8D8h
D$8E3
D$8E8h
D$8L;
D$cD9l$tt
D$H!D$@
D$H0u
D$HA;
D$HA+
D$HD8l$8tL
D$HE3
D$hE3
D$HE3
D$hH;
D$HH+D$@H
D$HI9
d$HM;
D$lfE
d$pA!4$I
D$PD8h
D$PE2
D$PE3
D$pE3
D$PE3
D$pE3
D$PE3
D$pfD
D$PH!|$@H
D$PH;D$`u%A
D$PI9
D$pMi
D$TE3
D$x0u
D$xA;
D$xE3
D$XE3
D$XHc
D$xHi
D(mgQ
D:(A;;GRGX;;;SY)(A;;GRGX;;;BA)(A;;GRGX;;;BU)(A;;GA;;;S-1-5-80-117416528-2204451360-1913602512-1355018040-1234992034)
D:AI(A;OICI;0x120089;;;AC)(A;OICI;0x120089;;;S-1-15-2-2)(A;OICI;0x120089;;;BU)S:AI
D:AI(A;OICI;0x1200A9;;;%s)(A;OICI;0x1200A9;;;BU)
D:AI(A;OICI;0x1200A9;;;AC)(A;OICI;0x1200A9;;;S-1-15-2-2)(A;OICI;0x1200A9;;;BU)S:AI
D:PAI
D:PAI(A;OICI;FA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;OI;0x120089;;;BA)(A;CI;0x120089;;;BA)(A;OICI;0x120089;;;BA)(A;OICI;0x120089;;;LS)(A;OICI;0x120089;;;NS)(A;OICI;FA;;;SY)
D:PAI(A;OICI;FA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;OI;0x1200a9;;;BA)(A;CI;0x1200a9;;;BA)(A;OICI;0x1200a9;;;BA)(A;OICI;0x1200a9;;;LS)(A;OICI;0x1200a9;;;NS)(A;OICI;FA;;;SY)
D:PAI(A;OICI;FA;;;SY)(A;OICI;FA;;;BA)(A;OICI;GA;;;%s)(XA;OICI;0x1200A9;;;BU;(WIN://SYSAPPID Contains "%s"))(A;OICI;FR;;;%s)(A;CI;FX;;;%s)(A;OICI;0x010116;;;%s)
D;0t)
D;s }
D;t$$
D;t$0
D;t$4
D;t$H
D;t$ls
D;v(r
D8.tXI
D8` t
D8|$@
D8|$@t
D8|$0
D8|$4t
D8|$XL
D8|$Xt
D8}puJ
D8~htiH
D8~xteH
D8~Xu
D8+uAA
D8d$!t,H
D8d$@t
D8d$@tS
D8d$0
D8D$0u.D8D$8t
D8D$HA
D8d$pt
D8d$xt
D8d8@A
D8d8@t
D8ewt
D8ewt#D9eoA
D8g tSH
D8g|t
D8h tAL
D8h teD8
D8h tMD8l$Xt
D8h(tJH
D8k t
D8k t%H
D8k taH
D8l$@
D8l$`A
D8l$0u
D8l$8t
D8l$H
D8l$X
D8l$Xt
D8l$xth@
D8l8@
D8l8@u
D8n(u
D8o ttH
D8oPt
D8oPt*
D8oPtBH;GH
D8p tMD8t$Xt
D8q8uyH
D8s(H
D8s*H
D8s8u_H
D8t$`t
D8t$0u
D8t$X
D8t$Xt
D8t$xu
D8t8@thD8
D8t9@tYHc^
D8ugt^
D8wxt
D8xxt<H
D8y$t
D8Z t
D9#t(
D9(vVH;
D9.u(H
D9;}OH
D9|$@
D9|$@t
D9|$0
D9|$0t
D9|$0t H
D9|$0t#H
D9|$0tSH
D9|$0u%
D9|$p
D9}H|
D9~hv@A
D9+tK
D9+u0
D9>v[H
D92u&H
D9aLu
D9d$$
D9d$0
D9d$0uQH
D9d$Hv%H
D9e@t
D9e@u
D9egt$L9e
D9egt8H
D9egu)E3
D9eXt4H
D9l$ 
D9l$$
D9l$@
D9l$4
D9l$4t)D
D9l$4t?H
D9l$8
D9l$l
D9l$pt6H
D9l$pv7L
D9l$Xt6H
D9m@t
D9mPt
D9s`vAH
D9s0v
D9sHv
D9t$@
D9t$`
D9uot
D9uot/D8ugt)L
D9uot'L
D9uou7H
D9uwt7
D9uwu
data error
Database
Database.Checkpoint
DatabaseCache.Add
DatabaseCache.Get
DatabaseCache.Lifespan
DatabaseConnection
DatabaseCorruption.Detected
DatabaseCorruptionFirstDetectedUptime
DatabaseCorruptionFirstDetectedWhen
DatabaseCorruptionLastReported
DatabasePtr
DatabaseStatisticsUpdateInterval
DatabaseStatisticsUpdateMaintenanceTaskInterval
DatabaseStatisticsUpdateMaxClockDelta
DataFormats
dataPackageFormats
DATAPACKAGEHOST_DEH_KEYWORD
ddeexec
Debug
debug
DebugBreak
default
DEFAULT_DATA
DefaultApp_cw5n1h2txyewy
DefaultFile
DefaultIcon
DefaultTile
DehName
delayedStart
DelayLoadFailureHook
DelegateExecute
DELETE
DELETE FROM %s WHERE _WorkId=? AND _WorkId<>0;
DELETE FROM Activation WHERE (_ActivationID NOT IN (SELECT Activation FROM Application)) AND (_ActivationID NOT IN (SELECT Activation FROM ApplicationExtension)) AND (_ActivationID NOT IN (SELECT Activation FROM PackageExtension));
DELETE FROM AppExecutionAlias WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppExecutionAliasUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM AppExecutionAliasUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM AppExtension WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppExtensionHost WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppInstaller WHERE (PackageFamily = 0) AND (_AppInstallerID NOT IN (SELECT AppInstaller FROM AppInstallerUri)) AND (_AppInstallerID NOT IN (SELECT AppInstaller FROM AutoUpdatePackage)) AND (_AppInstallerID NOT IN (SELECT AppInstaller FROM PackageAppInstaller));
DELETE FROM AppInstaller WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM AppInstallerUri WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
DELETE FROM Application WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
DELETE FROM Application WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM ApplicationBackgroundTask WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM ApplicationContentUriRule WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
DELETE FROM ApplicationExtension WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationIdentity WHERE (ApplicationUserModelId NOT IN (SELECT ApplicationUserModelId FROM Application)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM AppExecutionAliasUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM ApplicationUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM PrimaryTileUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SRJournal)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SRJournalArchive)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SecondaryTileUser));
DELETE FROM ApplicationProperty WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationUser WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM ApplicationUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM ApplicationUser WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
DELETE FROM ApplicationUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM AppService WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppUriHandler WHERE (AppUriHandlerGroup>0) AND (AppUriHandlerGroup NOT IN (SELECT _AppUriHandlerGroupID FROM AppUriHandlerGroup));
DELETE FROM AppUriHandler WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppUriHandlerGroup WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppxExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM AppxExtension WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM AppxExtension WHERE _AppxExtensionID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM AppxExtension WHERE _AppxExtensionID=? AND _WorkId=0;
DELETE FROM AppxManifest WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM AppxManifest WHERE _AppxManifestID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM AppxManifest WHERE _AppxManifestID=? AND _WorkId=0;
DELETE FROM AutoUpdatePackage WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
DELETE FROM AutoUpdatePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM Bundle WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM BundlePackage WHERE (Bundle>0) AND (Bundle NOT IN (SELECT _BundleID FROM Bundle));
DELETE FROM BundleResource WHERE (BundlePackage>0) AND (BundlePackage NOT IN (SELECT _BundlePackageID FROM BundlePackage));
DELETE FROM ConnectedSetPackageFamily WHERE (ConnectedSet>0) AND (ConnectedSet NOT IN (SELECT _ConnectedSetID FROM ConnectedSet));
DELETE FROM ConnectedSetPackageFamily WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM ContentGroup WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM ContentGroupFile WHERE (ContentGroup>0) AND (ContentGroup NOT IN (SELECT _ContentGroupID FROM ContentGroup));
DELETE FROM ContentGroupFile WHERE (File>0) AND (File NOT IN (SELECT _FileID FROM File));
DELETE FROM CustomInstallWork WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM CustomInstallWork WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM CustomInstallWork WHERE User=? AND Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM CustomInstallWork WHERE User=? AND Package=? AND Name=? AND _WorkId=0;
DELETE FROM DefaultTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM Dependency WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM DependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM DependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM DependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM DependencyGraph WHERE _DependencyGraphID IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=? AND _WorkId<>0);
DELETE FROM DependencyGraph WHERE _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
DELETE FROM DeploymentHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM DeploymentHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM DynamicAppUriHandler WHERE (DynamicAppUriHandlerGroup>0) AND (DynamicAppUriHandlerGroup NOT IN (SELECT _DynamicAppUriHandlerGroupID FROM DynamicAppUriHandlerGroup));
DELETE FROM DynamicAppUriHandlerGroup WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM DynamicAppUriHandlerGroup WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM EndOfLifePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM Enterprise WHERE (_EnterpriseID NOT IN (SELECT Enterprise FROM Package));
DELETE FROM File WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM File WHERE _FileID IN (SELECT _FileID FROM File INNER JOIN (SELECT Package AS P, RelativeFilePath AS R FROM File WHERE _WorkId=? AND _WorkId<>0) WHERE _WorkId=0 AND Package=P AND RelativeFilePath=R);
DELETE FROM FileTypeAssociation WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM HostRuntime WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
DELETE FROM MrtApplication WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM MrtDefaultTile WHERE (DefaultTile>0) AND (DefaultTile NOT IN (SELECT _DefaultTileID FROM DefaultTile));
DELETE FROM MrtPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM MrtSharedPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM MrtUserPri WHERE (MrtSharedPri>0) AND (MrtSharedPri NOT IN (SELECT _MrtSharedPriID FROM MrtSharedPri));
DELETE FROM MrtUserPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM MrtUserPri WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM MrtUserPri WHERE Package=? AND User=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM MrtUserPri WHERE Package=? AND User=? AND _WorkId=0;
DELETE FROM NamedDependency WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM OptionalBundle WHERE (MainBundle>0) AND (MainBundle NOT IN (SELECT _BundleID FROM Bundle));
DELETE FROM OptionalBundlePackage WHERE (OptionalBundle>0) AND (OptionalBundle NOT IN (SELECT _OptionalBundleID FROM OptionalBundle));
DELETE FROM OptionalBundleResource WHERE (OptionalBundlePackage>0) AND (OptionalBundlePackage NOT IN (SELECT _OptionalBundlePackageID FROM OptionalBundlePackage));
DELETE FROM Package WHERE (Enterprise>0) AND (Enterprise NOT IN (SELECT _EnterpriseID FROM Enterprise));
DELETE FROM Package WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM Package WHERE (SourceBundle>0) AND (SourceBundle NOT IN (SELECT _BundleID FROM Bundle));
DELETE FROM Package WHERE (TargetDeviceFamily>0) AND (TargetDeviceFamily NOT IN (SELECT _TargetDeviceFamilyID FROM TargetDeviceFamily));
DELETE FROM Package WHERE _PackageID IN (SELECT p_PackageID FROM (SELECT p_PackageID, EXISTS(SELECT 1 FROM BundlePackage AS bp INNER JOIN Package AS p ON bp.Version=p.Version AND bp.Architecture=p.Architecture AND ((bp.ResourceId=p.ResourceId) OR (bp.ResourceId IS NULL AND p.ResourceId IS NULL)) WHERE bp.PackageType=0 AND bp.Bundle=p_SourceBundle AND p.PackageFamily=p_PackageFamily AND bp._WorkId=0 AND p._WorkId=0 LIMIT 1) AS hasPackages FROM (SELECT p._PackageID AS p_PackageID, p.PackageFamily AS p_PackageFamily, p.SourceBundle AS p_SourceBundle FROM Package AS p WHERE p.PackageType & 8 != 0 AND p.SourceBundle <> 0 AND p._WorkId=0)) WHERE hasPackages=0);
DELETE FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Package WHERE _PackageID=? AND _WorkId=0;
DELETE FROM PackageAppInstaller WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
DELETE FROM PackageAppInstaller WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageDependency WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageDependency WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
DELETE FROM PackageExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageExternalLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageExternalLocation WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageExternalLocation WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageExternalLocation WHERE User=? AND Package=? AND _WorkId=0;
DELETE FROM PackageFamily WHERE (_PackageFamilyID NOT IN (SELECT PackageFamily FROM AppInstaller)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM AutoUpdatePackage)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM ConnectedSetPackageFamily)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM DynamicAppUriHandlerGroup)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM EndOfLifePackage)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM Package)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageDependency)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageFamilyPolicy)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageFamilyUser)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageIdentity)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM ProvisionedPackageExclude)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM SRJournal)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM SRJournalArchive));
DELETE FROM PackageFamilyPolicy WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageFamilyPolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageFamilyUser WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageFamilyUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageFamilyUserResource WHERE (PackageFamilyUser>0) AND (PackageFamilyUser NOT IN (SELECT _PackageFamilyUserID FROM PackageFamilyUser));
DELETE FROM PackageIdentity WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageIdentity WHERE (PackageFullName NOT IN (SELECT PackageFullName FROM Package)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM DeploymentHistory)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageMachineStatus)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageSuperceded)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageUserStatus)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM ProvisionedPackage)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM ProvisionedPackageDeleted)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRHistory)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRJournal)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRJournalArchive));
DELETE FROM PackageLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageLocation WHERE Package IN (SELECT Package FROM PackageLocation WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
DELETE FROM PackageMachineStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackagePolicy WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackagePolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageProperty WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageSourceUri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageSuperceded WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackageSuperceded WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageUser WHERE _PackageUserID IN (SELECT _PackageUserID FROM PackageUser INNER JOIN (SELECT User AS U, Package AS P FROM PackageUser WHERE _WorkId=? AND _WorkId<>0) WHERE _WorkId=0 AND User=U AND Package=P);
DELETE FROM PackageUser WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE _PackageUserID=? AND _WorkId=0;
DELETE FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0;
DELETE FROM PackageUserStatus as pus WHERE pus.PackageIdentity NOT IN ( SELECT _PackageIdentityID FROM PackageIdentity AS pi INNER JOIN Package AS p ON pi.PackageFullName=p.PackageFullName);
DELETE FROM PackageUserStatus AS pus WHERE User IN ( SELECT _UserID FROM User WHERE UserSid=?) AND PackageIdentity IN (SELECT _PackageIdentityID FROM PackageIdentity WHERE PackageFullName=?);
DELETE FROM PackageUserStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackageUserStatus WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PrimaryTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM PrimaryTile WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PrimaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM PrimaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PrimaryTileUser WHERE _PrimaryTileUserId IN (SELECT _PrimaryTileUserId FROM PrimaryTileUser INNER JOIN (SELECT ApplicationIdentity AS ai, User AS usr FROM PrimaryTileUser WHERE _WorkId=? AND _WorkId<>0 ) WHERE _WorkId=0 AND ApplicationIdentity=ai AND User=usr);
DELETE FROM PrimaryTileUser WHERE TileUniqueId IN (SELECT TileUniqueId FROM PrimaryTileUser WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
DELETE FROM PrimaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM Protocol WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM ProvisionedPackage WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM ProvisionedPackageDeleted WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM ProvisionedPackageExclude WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM ProvisionedPackageExclude WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PublisherCacheFolder WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
DELETE FROM Resource WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM SecondaryTile WHERE _SecondaryTileID IN (SELECT SecondaryTile FROM SecondaryTileUser WHERE _WorkId=0 AND TileUniqueId IN (SELECT TileUniqueId FROM SecondaryTileUser WHERE _WorkId=? AND _WorkId<>0)) AND _WorkId=0;
DELETE FROM SecondaryTile WHERE SecondaryTile._SecondaryTileID NOT IN (SELECT SecondaryTile FROM SecondaryTileUser);
DELETE FROM SecondaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM SecondaryTileUser WHERE (SecondaryTile>0) AND (SecondaryTile NOT IN (SELECT _SecondaryTileID FROM SecondaryTile));
DELETE FROM SecondaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SecondaryTileUser WHERE TileUniqueId IN (SELECT TileUniqueId FROM SecondaryTileUser WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
DELETE FROM SecondaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SharedPackageContainer WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SharedPackageContainerPackageFamily WHERE (SharedPackageContainer>0) AND (SharedPackageContainer NOT IN (SELECT _SharedPackageContainerID FROM SharedPackageContainer));
DELETE FROM SRHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SRJournal WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM SRJournal WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM SRJournal WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM SRJournal WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM SRJournal WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRJournal WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
DELETE FROM SRJournal WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SRJournalArchive WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM SRJournalArchive WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM SRJournalArchive WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM SRJournalArchive WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM SRJournalArchive WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRJournalArchive WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
DELETE FROM SRJournalArchive WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM TargetDeviceFamily WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM User WHERE (_UserID NOT IN (SELECT User FROM AppExecutionAliasUser)) AND (_UserID NOT IN (SELECT User FROM ApplicationUser)) AND (_UserID NOT IN (SELECT User FROM AppxExtension)) AND (_UserID NOT IN (SELECT User FROM CustomInstallWork)) AND (_UserID NOT IN (SELECT User FROM DependencyGraph)) AND (_UserID NOT IN (SELECT User FROM DeploymentHistory)) AND (_UserID NOT IN (SELECT User FROM DynamicAppUriHandlerGroup)) AND (_UserID NOT IN (SELECT User FROM MrtUserPri)) AND (_UserID NOT IN (SELECT User FROM PackageDependency)) AND (_UserID NOT IN (SELECT User FROM PackageExternalLocation)) AND (_UserID NOT IN (SELECT User FROM PackageFamilyPolicy)) AND (_UserID NOT IN (SELECT User FROM PackageFamilyUser)) AND (_UserID NOT IN (SELECT User FROM PackagePolicy)) AND (_UserID NOT IN (SELECT User FROM PackageSuperceded)) AND (_UserID NOT IN (SELECT User FROM PackageUser)) AND (_UserID NOT IN (SELECT User FROM PackageUserStatus)) AND (_UserID NOT IN (SELECT User FROM PrimaryTileUser)) AND (_UserID NOT IN (SELECT User FROM PrimaryTileUserChangelog)) AND (_UserID NOT IN (SELECT User FROM ProvisionedPackageExclude)) AND (_UserID NOT IN (SELECT User FROM SRHistory)) AND (_UserID NOT IN (SELECT User FROM SRJournal)) AND (_UserID NOT IN (SELECT User FROM SRJournalArchive)) AND (_UserID NOT IN (SELECT User FROM SecondaryTileUser)) AND (_UserID NOT IN (SELECT User FROM SecondaryTileUserChangelog)) AND (_UserID NOT IN (SELECT User FROM SharedPackageContainer)) AND (_UserID NOT IN (SELECT User FROM WowDependencyGraph));
DELETE FROM WowDependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM WowDependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM WowDependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM WowDependencyGraph WHERE _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
DELETE FROM WowDependencyGraph WHERE _WorkId=?;
DELETE FROM WowDependencyGraph WHERE _WowDependencyGraphID IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=? AND _WorkId<>0);
DELETE FROM XboxPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM XboxPackage WHERE EditionId IN (SELECT EditionId FROM XboxPackage WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
DeleteAce
DeleteCriticalSection
DeletedItems
Deletefile Failed with 0x%X
DeleteFileW
DeletePrinter
DeleteService
DeleteTimerQueueTimer
DeleteTreeWithExtremePrejudice(m_path, false)
DeleteTreeWithExtremePrejudice(m_path, isPackageRemove)
DeleteUpdatedPackageKey
DeleteValueNoThrow(root)
Dependency
DependencyArchitecture
DependencyGraph
DependencyMinVersion
DependencyName
DependencyPackageApplicabilityStateMap
DependencyPaths
DependencyProviderGuid
DependencyPublisher
DependentPackage
DependentPackageName
Deployment
DeploymentDatabase
DeploymentDatabaseAutoCheckpoint
DeploymentDatabaseCacheSize
DeploymentDatabaseCheckpointThreshold
DeploymentDatabaseFileChunkSize
DeploymentDatabaseJournalSizeLimit
DeploymentDatabaseOptions
DeploymentDatabasePageSize
DeploymentDatabaseStatisticsLastUpdated
DeploymentHistory
DeploymentOperation
deploymentOperation
DeploymentOperation
deploymentOperation
DeploymentOperation
DeploymentOperationEnumMap
DeploymentOptions
DeploymentOptionsBitMap
DeploymentOptionsHighBitMap
DeploymentPath
DeploymentState
DeploymentStateHandlerEnumMap
Description
DesiredInitialViewState
desktop2:AllowSilentDefaultTakeOver
desktop5:ThumbnailTypeOverlay
desktop8:RunAsUser
DesktopAppX
DesktopAppXActivateOptions
DesktopAppXContent
DesktopAppXDevice
Destination Path
DestinationFolderPath
DestinationMediaID
DestinationPath
DestroyEnvironmentBlock
DETACH DATABASE '%s';
DetailedMessageInfo
Details::GetStringValueExpanded(inprocServer32Key.get(), L"", dllPath)
DeveloperModeRequired
Device
DEVICEACCESS_DEH_KEYWORD
DeviceAccessVetoReasonMap
DeviceCapabilityHandlerCLSID
DeviceCapabilityName
DeviceEvent
deviceFamilyName
DeviceId
deviceInterfaceArrival
DeviceIoControl
DeviceName
DeviceSearchHistoryEnabled
DIALPROTOCOL_DEH_KEYWORD
DidCatalogCheckFailed
digit
Direction
directlyServicedPackagesList
DirtyPackages
disabled
DispatchMessageW
DisplayName
dllfile
DLLPath
DLLPathEx
DllSurrogate
domain
domainAndPrivate
domainJoin
DownlevelMachineDatabase
DownlevelMachineDatabaseAutoCheckpoint
DownlevelMachineDatabaseCacheSize
DownlevelMachineDatabaseCheckpointThreshold
DownlevelMachineDatabaseFileChunkSize
DownlevelMachineDatabaseJournalSizeLimit
DownlevelMachineDatabaseOptions
DownlevelMachineDatabasePageSize
DownlevelMachineDatabaseStatisticsLastUpdated
DOWNLOAD_DEH_KEYWORD
DriverName
DropTarget
DropTargetHandler
drvfile
DSM_DEH_KEYWORD
DuplicateChannelName
DuplicateTokenEx
DurationMS
DynamicAppUriHandler
DynamicAppUriHandlerGroup
E_NOTIMPL
E_OUTOFMEMORY
E_UNEXPECTED
E0f;0ta
E8}`t
E8}Pt
E8>tKH
E8h t?H
E8H!}@H
E8H!}8H
E8I9G(t
E8l$ 
E8n@t<E
E8n@thE
E8nAt*A
E8tCH
E8w8u
E9&u$D9#u"H
E9&v+L
E9'uQH
EC8H9k0H
EDGEHTML.dll
EditFlags
EHH;p
EHI;EPt
Elapsed
Element
ElementName
EM H;M
empty distance tree with lengths
Enabled
enabled
EndOfLifePackage
EndOfLifePackageList
endswith
EndsWith(*string*,suffix) error: Invalid type (%d)
EndsWith(string,*suffix*) error: Invalid type (%d)
EnterCriticalSection
Enterprise
EntryPoint
EnumPortsW
EnumPrintersW
en-US
eOSIntegration::DEH::Internal::ContractIdActivatableClassIdPairLifetimeTraits::Destroy
EpD8m`t
EpI;D$
EqualSid
eraproxyapp.exe
Error
ERROR_BAD_ARGUMENTS
ERROR_INVALID_DATA
ERROR_NOT_FOUND
ErrorCode
errorCode
ErrorCode
errorCode
ErrorCode
ErrorCodeDescription
ErrorContext
ErrorContext1
ErrorContext2
ErrorCount
ErrorDescription
ErrorFileInfo
ErrorMessage
errorString
ErrorString
ErrorText
Et$@H
EtwEventRegister
EtwEventUnregister
EtwEventWrite
Eu H;u
EventActivityIdControl
EventData
EVENTLOG_AUDIT_FAILURE
EVENTLOG_AUDIT_SUCCESS
EVENTLOG_ERROR_TYPE
EVENTLOG_INFORMATION_TYPE
EVENTLOG_WARNING_TYPE
EventlogDllFamilyPath
EventLogHelper
EventManifests
EventMessageFile
EventRegister
events
EventSetInformation
EventUnregister
EventWriteTransfer
EVNTT
EvtClose
EvtGetChannelConfigProperty
EvtGetObjectArrayProperty
EvtGetObjectArraySize
EvtGetPublisherMetadataProperty
EvtNextPublisherId
EvtOpenChannelConfig
EvtOpenChannelConfig(%ls)
EvtOpenPublisherEnum
EvtOpenPublisherMetadata
EvtOpenPublisherMetadata(%ls)
EvtOpenSession
Exception
ExceptionCode
ExcludeFromShowInNewInstall
EXCLUSIVE
Executable
ExecutableName
execution_flags
ExecutionFlags
exefile
ExeHost
ExeServerRegistration
ExeServerRegistration_Impl::Create(serverName, &serverRegistration)
existingMiscStatusPropValue->GetString(existingMiscStatus.GetAddressOf())
existingPropValue->GetString(existingValue.GetAddressOf())
existingPropValue->GetUInt32(&existingValue)
existingVerbPropValue->GetString(existingVerb.GetAddressOf())
ExitCode
ExitingPackageFullname
ExpandedSQL
ExpandedSQL=%hs
ExpandEnvironmentStringsW
explorer.assocactionid.burnselection
explorer.assocactionid.closesession
explorer.assocactionid.erasedisc
explorer.assocactionid.zipselection
explorer.assocprotocol.search-ms
explorer.burnselection
explorer.closesession
explorer.erasedisc
explorer.zipselection
Extended
ExtendedData
ExtendedMapiLibrary
ExtendedTileInfo
Extension
extensionCatalogContext->CreateExtensionEntry( _contractId.Get(), packageMoniker, _activatableClassId.Get(), _properties)
extensionCatalogContext->RemoveExtensionEntriesForPackage(packageMoniker.Get(), deploymentOperation)
ExtensionID
ExtensionName
extensionRegistration->PendingWriteToStore( packageMoniker.Get(), extensionCatalogContext.Get())
ExtensionsCategoryNames
ExternalLocation
ext-ms-win32-subsystem-query-l1-1-0
ext-ms-win-advapi32-ntmarta-l1-1-0
ext-ms-win-advapi32-ntmarta-l1-1-0.dll
ext-ms-win-advapi32-safer-l1-1-0.dll
ext-ms-win-appmodel-deployment-l1-1-0
ext-ms-win-appmodel-deployment-l1-1-0.dll
ext-ms-win-appmodel-deployment-l1-1-1
ext-ms-win-com-ole32-l1-1-0
ext-ms-win-com-ole32-l1-1-1
ext-ms-win-com-ole32-l1-1-2
ext-ms-win-com-ole32-l1-1-3
ext-ms-win-com-ole32-l1-1-4
ext-ms-win-com-ole32-l1-1-5
ext-ms-win-com-ole32-l1-3-0
ext-ms-win-com-ole32-l1-4-0
ext-ms-win-desktopappx-l1-1-0
ext-ms-win-desktopappx-l1-1-1
ext-ms-win-desktopappx-l1-1-2
ext-ms-win-desktopappx-l1-1-3
ext-ms-win-desktopappx-l1-1-3.dll
ext-ms-win-desktopappx-l1-1-4
ext-ms-win-desktopappx-l1-1-5
ext-ms-win-desktopappx-l1-1-6
ext-ms-win-desktopappx-l1-1-7
ext-ms-win-desktopappx-l1-1-7.dll
ext-ms-win-desktopappx-l1-2-0
ext-ms-win-desktopappx-l1-2-1
ext-ms-win-desktopappx-l1-2-1.dll
ext-ms-win-resources-languageoverlay-l1-1-0
ext-ms-win-resources-languageoverlay-l1-1-1
ext-ms-win-resources-languageoverlay-l1-1-2
ext-ms-win-resources-languageoverlay-l1-1-3
ext-ms-win-resources-languageoverlay-l1-1-4
ext-ms-win-resources-languageoverlay-l1-1-5
ext-ms-win-resources-languageoverlay-l1-1-6
ext-ms-win-resources-languageoverlay-l1-1-7
ext-ms-win-security-capauthz-l1-1-0.dll
ext-ms-win-session-usermgr-l1-1-0
ext-ms-win-session-usermgr-l1-1-0.dll
ext-ms-win-session-usermgr-l1-2-0
ext-ms-win-session-usertoken-l1-1-0
ext-ms-win-session-usertoken-l1-1-0.dll
ext-ms-win-session-wtsapi32-l1-1-0
ext-ms-win-session-wtsapi32-l1-1-0.dll
ext-ms-win-session-wtsapi32-l1-1-1
ext-ms-win-shell32-shellfolders-l1-1-0.dll
ext-ms-win-shell-shell32-l1-2-0
ext-ms-win-shell-shell32-l1-2-0.dll
ext-ms-win-shell-shell32-l1-2-1
ext-ms-win-shell-shell32-l1-2-2
ext-ms-win-shell-shell32-l1-2-3
ext-ms-win-shell-shell32-l1-5-0
ext-ms-win-storage-sense-l1-1-0
ext-ms-win-storage-sense-l1-2-0
ext-ms-win-storage-sense-l1-2-1
ext-ms-win-storage-sense-l1-2-2
ext-ms-win-storage-sense-l1-2-3
ext-ms-win-storage-sense-l1-2-4
ext-ms-win-storage-sense-l1-2-5
ext-ms-win-wevtapi-eventlog-l1-1-0
ext-ms-win-wevtapi-eventlog-l1-1-0.dll
ext-ms-win-wevtapi-eventlog-l1-1-1
ext-ms-win-wevtapi-eventlog-l1-1-1.dll
ext-ms-win-wevtapi-eventlog-l1-1-2
ext-ms-win-wevtapi-eventlog-l1-1-2.dll
ext-ms-win-wevtapi-eventlog-l1-1-3
ext-ms-win-wevtapi-eventlog-l1-1-3.dll
extOrProtocol
EXTRA
F H;x
F H;X
F!oldPosition->first.EqualsCaseSensitive(subkeyName)
F()$^.*+?[]|\-{},:=!
F(D9h,u
f(item.Get())
F;~ sEL
F<}lf-#X
f5.vpn.client_cw5n1h2txyewy
F8@88t
F8d8 
f9,^u
f9,~u
f9,Au
f9,Cu
f9,Hu
f9,Nu
f9,Pu
f9,Vu
f9,Zu
f9]%t
f9<Au
f9<Bu
f9<Cu
f9<Fu
f9<Hu
f9<Ju
f94Bu
f94Cu
f94Ju
f94Qu
f94Su
f99t;H
f9Kxu
fA9,@u
fA9,xu
fA9\M
fA9|B
fA9<@u
fA9<Au
fA9<Cu
fA9<Hu
fA9<Iu
fA9>u
fA94@u
fA94Cu
fA94Fu
fA94Hu
fA9Z*v#A
Failed call to GetSystemDirectory/GetSystemWow64Directory2. imageFileMachine=%u
Failed to read status (PackageStatusAri-OFF) for 
Failed to read status (PackageStatus-OFF) for 
Failed to sync status (PackageStatusAri-OFF) for 
Failed to sync status (PackageStatus-OFF) for 
Failed to update State Repository Cache
FailFast
FailFastBusySnapshot.StatementInProgress: #%u Index=%u Database=%p Statement=%p SQL=%s
FailFastBusySnapshot: Statements Total=%u Busy=%u Database=%p FirstBusySQL=%hs
Failure
failureCount
failureId
failureType
FallbackError
false
FB&_W
fB9,Bu
fB9,Fu
fB9,Hu
fB9,Ju
fB9<@u
fB9<Bu
fB94Gu
fD;:A
fD;L$0
fD9 u%D8
fD9!u
fD9"u
fD9#t
fD9$^u
fD9$~u
fD9$Au
fD9$Bu
fD9$Cu
fD9$Fu
fD9$Gu
fD9$Ku
fD9$Nu
fD9$Ou
fD9$Wu
fD9$xu
fD9$zu
fD9(t
fD9,_u
fD9,Au
fD9,Fu
fD9,qu
fD9,Vu
fD9,Xu
fD9|]
fD9|M
fD9<~u
fD9<Au
fD9<Fu
fD9<Gu
fD9<Hu
fD9<nu
fD9<Ou
fD9<Qu
fD9<Vu
fD9<xu
fD9<Yu
fD9<zu
fD94Au
fD94Bu
fD94Cu
fD94Qu
fD94Yu
fD94Zu
fD97tYf
fD97u
fD98t
fD9dt.t
fD9tE
fE9 u
fE9$@u
fE9$Gu
fE9$Ju
fE9$Ku
fE9$Nu
fE9$Ou
fE9$Pu
fE9$Wu
fE9,$
fE9,\u
fE9<~u
fE9<Au
fE9<Fu
fE9<Xu
fE94Hu
fE94Ju
fE94Ku
fE98t
fF9,Gu
fF9<@u
fF9<Bu
fF9<Fu
fF9<Iu
fF94Fu
fF94Hu
fG9$^u
fG9,Fu
fG9,Gu
fG9,qu
file error
file://
FileAssociations
FileCreationTime(UTC): %04hu-%02hu-%02hu %02hu:%02hu:%02hu, LastFileWriteTime(UTC): %04hu-%02hu-%02hu %02hu:%02hu:%02hu, FileSize: %I64u, Attributes: 0x%08lx
FileDescription
fileExtensions
FileInUse
FileInUse PFun: %ws, ImageName: %ws, Cmd: %ws, UserSid: %ws, SessionId: %d, PID: %d
FileManager_cw5n1h2txyewy
FileMax
fileMax
fileName
Filename
fileName
FileName
Filename
FileName
fileName
FileName
Filename
FileName
Filename
FileName
fileName
FileName
fileName
Filename
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
filename
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
filename
FileName
Filename
fileName
FileName
fileName
filename
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
fileName
FileName
filename
FileName
fileName
FileName
Filename
FileName
fileName
FileName
Filename:%s, SQL:%s, TxCallerId:%hs %ls
FilePath
Files
Filesize
FileSize
Filesize
FileSize
FileSystemType
FileTimeToSystemTime
FileType
FILETYPE_DEH_KEYWORD
FileTypeAssociation
FileVersion
FilterConnectCommunicationPort
FilterSendMessage
FindClose
FindFirstFileExW
FindFirstFileNameW
FindFirstFileW
FindNextFileNameW
FindNextFileW
FirewallAPI.dll
firewallPortEvent
FirstBusySQL
FirstLine
FirstReportedUptime
FirstReportedWhen
FixAllCascadingInDeploymentPartition
FixAllCascadingInMachinePartition
FixAncestors(root, m_keyPath, m_oldKeyPath, (m_location == KeyLocation::Managed) && !m_newData.has_value())
FixAncestors(root, m_oldKeyPath.value(), m_keyPath)
FixAncestors(root, m_oldPath.value(), m_path)
FixAncestors(root, m_path, m_oldPath, (m_location == KeyLocation::Managed) && !m_newContent.has_value())
Flags
FLAGS
Flags
FlagsHigh
FlBpTl"rT
FLTLIB.DLL
Folder
FolderPath
fonfile
ForEachExtensionRegistration(extensionRegistrationMap.Get(), [&](Internal::CExtensionRegistration* extensionRegistration) { StringReference packageMoniker(incomingPackage->GetPackageMoniker()); RETURN_HR(extensionRegistration->PendingWriteToStore( packageMoniker.Get(), extensionCatalogContext.Get())); })
FormatMessageA
FormatMessageW
ForMove
FoundState
FP9_@t
FreeLibrary
FreeSid
FriendlyTypeName
FullDetails
FullFilePath
FullTrust
function
FunctionType
Funknown error
FWAddFirewallRule
FWClosePolicyStore
FWDeleteFirewallRule
FWFreeFirewallRulesByHandle
FWOpenPolicyStore
FWQueryFirewallRules
FXH;X
G H;X
G L;C
G()p(H
G,A_A^A]A\_^][
G@H9GP
G@H9GPt
G6?lYi
GAC_32\
GAC_64\
GAC_MSIL\
gamecoreproxyapp.exe
GCChangelogsInterval
GCTimeToLiveExpiredInterval
generic
GEOLOCATION_DEH_KEYWORD
GetAce
GetAclInformation
GetActivationFactory( Wrappers::HStringReference(RuntimeClass_Windows_Foundation_PropertyValue).Get(), &_propertyValueFactory)
GetActivationFactory((Windows::Internal::String&)propertyValueId, &_propertyValueFactory)
GetActivationFactory((Windows::Internal::String&)propertyValueId, &registration->_propertyValueFactory)
GetApplicationUserModelIdFromToken
GetAppxDataRootPath
GetAppXLogMessageFromDataFailure
GetChanges() called but !db.IsOpen()
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetDeploymentError
GetExitCodeProcess
GetFileAttributesExW
GetFileAttributesW
GetFileInformationByHandleEx
GetFileSecurityW
GetFileSize
GetFileSizeEx
GetHasAnyClasses(&hasAnyClasses)
GetInprocServer32Properties(WhichHive::LocalMachine, __uuidof(PackagedInprocClassVirtualizationManager), &g_virtualizationManagerDllPath)
GetLastError
GetLastInsertRowID() called but !db.IsOpen()
GetLengthSid
GetLocalTime
GetModuleFileNameA
GetModuleHandleExA
GetModuleHandleExW
GetModuleHandleW
GetNamedSecurityInfoW
GetNonExactManifestReader
GetPackagedFileAbsolutePath(incomingPackage, _exeServerPath.Value.GetRawBuffer(nullptr), _exeServerAbsolutePath)
GetPackagedFileAbsolutePath(incomingPackage, _properties.DefaultIcon.Value.GetRawBuffer(nullptr), _defaultIconAbsolutePath)
GetPackagedFileAbsolutePath(incomingPackage, _properties.DllPath.Value.GetRawBuffer(nullptr), _surrogateDllAbsolutePath)
GetPackagedFileAbsolutePath(incomingPackage, _properties.ToolboxBitmap32.Value.GetRawBuffer(nullptr), _toolboxBitmap32AbsolutePath)
GetPackagedFileAbsolutePath(incomingPackage, GetInprocHandlerDllForArchitecture(architecture).GetRawBuffer(nullptr), _inprocHandlerAbsolutePaths.*(architecture.PerArchitectureDllPath))
GetPackagedFileAbsolutePath(incomingPackage, GetInprocServerDllForArchitecture(architecture).GetRawBuffer(nullptr), _inprocServerAbsolutePaths.*(architecture.PerArchitectureDllPath))
GetPackageFullNameFromToken
GetPackageStatus
GetPackageStatusForUserSid
GetPersistedRegistryLocationW
GetPrinterW
GetProcAddress
GetProcessHeap
GetRegistryPathDetokenizer
GetSecurityDescriptorDacl
GetSecurityDescriptorOwner
GetSecurityInfo
GetSessionUserSidQueryTokenFailed
GetSet
GetSidSubAuthority
GetSidSubAuthorityCount
GetStagedPackagePathByFullName2
GetStringLength(string) == 0
GetSystemAppDataKey
GetSystemDirectoryW
GetSystemFileAbsolutePath(_executableArchitecture, _exeServerPath.Value.GetRawBuffer(nullptr), _exeServerAbsolutePath)
GetSystemInfo
GetSystemMetadataPathForPackage
GetSystemTimeAsFileTime
GetSystemWow64Directory2W
GetTempFileNameW
GetTempPath2W
GetTempPathW
GetTickCount64
GetTokenInformation
GetTokenInformation(token, TokenUser, tokenUser, sizeof(buffer), &lengthIgnored)
GetTotalChanges() called but !db.IsOpen()
getValueResult
GetVersionExW
GetVirtualizationManagerDllFilename(&virtualizationManagerDllFilename)
GetVolumeMediaId
GetVolumeNameForVolumeMountPointW
GetVolumePathNameW
GetWindowsDirectoryW
gfffA
gfffffffI
GHH;p
GlobalAlloc
GlobalFree
GlobalMemoryStatusEx
GNHcK(A
GPH;p
graph
groupPolicy
GtfD;
GXL9GPt
H !X M
H UATAUAVAWH
h UAVAWH
H UAVAWH
h UAVAWH
h VWAVH
H WATAUAVAWH
H!\$0H!\$(H!\$ 3
H!\$83
H!\$HH
H!]@H
H!]@L
H!]0L
H!]H!]@H
H!]o8_ u
H!]PL
H!|$8H!|$0H!|$(H!|$ 3
H!} I
H!}@E3
H!}@H
H!}8H
H!}HH
H!C(H
H!D$(H!D$ L
H!t$(E3
H!t$XA
H!X D
H,J6Hn$\H,J6H
H;\$8u
H;\$p
H;\$ps
H;\$Ps
H;\$Xs7M
H;^ r
H;^ sXH
H;_ r
H;_(s
H;_hr
H;_Pr
H;{ r
H;{(s8H
H;{`r
H;{8r
H;{Pr
H;|$8
H;~(s\H
H;C(tJL
H;D$@
H;D$@t
H;D$`
H;D$8uJ
H;D$Xs$H
H;Egu_H
H;G tbI
H;GHH
H;Gpu
H;KPsX
H;OHu
H;Q0s
H;s r
H;S(v
H;SPt
H;t$ps1H
H;VPt
H;YPr
h_^[]
H+\$x
H+CXH
H+D$ u
H+D$(H
H+D$(u
H+D$0H
H+D$0u
H+D$8H
H+L$(H
H4J2L
h5!wE
H9/sDH
H9;s!
H9^0tGH
H9_(v
H9_Hu
H9_hvGH;_hr
H9_Pu
H9{ v
H9{`v2H;{Pr
H9{8v
H9{Pv
H9|$P
H9D$Xu(3
H9Fhs
H9Ghs
H9k0L
H9k8H
H9MPu
H9MPv
H9t$ 
H9T$x
H9uwu"
H9wHu-A
H9wXu
H9y v
H9Y v$H;Y r
H9YhvbH;^
hA_A^_^[]
HA_A^A]A\_^[]
HardLinkedCount
HardLinkedSizeKB
hasAnyClasses
HasFullTrust
hash_base32
hash_base32() doesn't support double (%d)
HashDigestLength
Hasher.GetDigestAsBase32(text) failed
Hasher.Start() failed
Hasher.Update(integer) failed
Hasher.Update(text) failed
HasWin32alacarte
Hc\$@
Hc\$@E
HcD$@
HcF D8d8H
HcG H
HcI(H
HcK(A
HcK(H
HcQ(H
HcT$ HcL$$H
HeaderAddr
HeapAlloc
heapBuffer
HeapFree
HELPDIR
helpLink
HiUx(
HKEY_CURRENT_USER
HKEY_LOCAL_MACHINE
hlpfile
HostingModel
HostRuntime
HostRuntimePackageFullName
hrCommit
hrDeleteExisting
hrDuplicateString
hresult
HResult
hresult
HResult
hresult
HResult
hresult
HResult
hresult
HResult
hresult
HRESULT
HResult
hresult
HResult
hresult
HRESULT
HResult
hresult
HRESULT_FROM_WIN32(13L)
HRESULT_FROM_WIN32(160L)
HresultCode
hrInsert
hrLookup
hrPendingWrite
hrput_AppUserModelId
hrReadEntry
hrRemove
hrRuntimeClassInitialize
hrSetCommandLine
hrSetExePath
htafile
HTML Format
http://schemas.microsoft.com/win/2004/08/events
https
Hu2fD9
HV@k>
HWEventHandler
I*VwZ
I;E u
I;G8t*
I;MHugH
i|,D+
I9>t$H
I9>tWI
I94$u
I9T$ 
IcI(H
IcJ(H
IcK(f
ICMPv4
ICMPv6
IconReference
IcQ(fA
IdleTaskInProgress
ifexec
Ignoring failure from EvtOpenPublisherMetadata(%ls)
IIDFromString
imageName
ImagePath
Immersive
ImpersonateLoggedOnUser
ImpersonateSelf
Implemented Categories
implementedCategoryKeyValuePair->get_Key(&implementedCategory)
ImportChannel
importChannel
IncomingPackage
incomingPackage->GetMainPackageFamilyMoniker(executionPackageFamily)
IncomingPackageInstallOrder
IncomingPackageName
incompatible version
incomplete distance tree
incomplete dynamic bit lengths tree
incomplete literal/length tree
incorrect data check
incorrect header check
Index
INDEXEDDB_DEH_KEYWORD
indirectlyServicedPackagesList
ineID
inffile
Information
InfoTip
InitCmdLine
InitializeAcl
InitializeCriticalSectionAndSpinCount
InitializeCriticalSectionEx
InitializeSecurityDescriptor
InitializeSListHead
InitializeSRWLock
InitOnceBeginInitialize
InitOnceComplete
InitOnceExecuteOnce
InprocHandler32
InprocRegistration
InprocServer32
INSERT INTO Activation (_Revision, ActivationKey, Flags, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?);
INSERT INTO ApplicationUser (_Revision, _WorkId, User, ApplicationIdentity, Application, Package, PackageUser)SELECT 1, ?2, pu.User, ai._ApplicationIdentityID, a._ApplicationID, pu.Package, pu._PackageUserID FROM PackageUser AS pu INNER JOIN Application AS a ON a.Package=pu.Package INNER JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId WHERE pu._PackageUserID=?1   AND (pu._WorkId=0 OR pu._WorkId=?2) AND (a._WorkId=0 OR a._WorkId=?2);
INSERT INTO AppxExtension (_Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
INSERT INTO AppxManifest (_Revision, _WorkId, Package, Xml, _Dictionary) VALUES(?,?,?,compress(?),?);
INSERT INTO CustomInstallWork (_Revision, _WorkId, User, Package, Name, "Index", Flags, Status, File, Arguments, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO DependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) SELECT _Revision, ?2, ?1, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE _DependencyGraphID=?1 AND _ShadowId=0 AND NOT EXISTS(SELECT 1 FROM DependencyGraph WHERE _ShadowId=?1 AND _WorkId<>0 LIMIT 1);
INSERT INTO DependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) VALUES(?1,?2,?3,?4,?5,?6,?7,?8,?9,?10);
INSERT INTO HostRuntime (_Revision, _WorkId, HostId, PackageExtension, _Dictionary) VALUES(?,?,?,?,?);
INSERT INTO MrtPackage (_Revision, _WorkId, Package, DisplayNameReference, PublisherDisplayNameReference, DescriptionReference, LogoReference, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO Package (_Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO PackageExtension (_Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO PackageFamily (_Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary) VALUES(?,?,?,?,?,?,?);
INSERT INTO PackageIdentity (_Revision, PackageFamily, PackageFullName, _Dictionary) VALUES(?,?,?,?);
INSERT INTO PackageLocation (_Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
INSERT INTO PackageUser (_Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
INSERT INTO PackageUser(_Revision, _WorkId, Package, User, InstallTime, IsExplicitlyInstalled, DeploymentState, AppDataVolume)SELECT 1, 0, _PackageID, (SELECT _UserID FROM User WHERE UserSid=X'010100000000000512000000'), now(), 1, 1, 0 FROM Package WHERE _PackageID NOT IN (SELECT Package FROM PackageUser) AND PackageOrigin=2;
INSERT INTO PackageUser(_Revision, _WorkId, Package, User, InstallTime, IsExplicitlyInstalled, DeploymentState, AppDataVolume)SELECT 1, 0, _PackageID, (SELECT _UserID FROM User WHERE UserSid=X'010100000000000512000000'), now(), 1, 6, 0 FROM Package WHERE _PackageID NOT IN (SELECT Package FROM PackageUser) AND PackageOrigin<>2;
INSERT INTO PackageUserStatus (_Revision, PackageIdentity, User, Status, _Dictionary) VALUES(?,?,?,?,?);
INSERT INTO PublisherCacheFolder (_Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary) VALUES(?,?,?,?,?,?);
INSERT INTO Sequence (Id, LastValue) VALUES(?,?);
INSERT INTO TargetDeviceFamily (_Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
INSERT INTO User (_Revision, UserSid, _Dictionary) VALUES(?,?,?);
INSERT INTO WowDependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) SELECT _Revision, ?2, ?1, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND _ShadowId=0 AND NOT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _ShadowId=?1 AND _WorkId<>0 LIMIT 1);
INSERT INTO WowDependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) VALUES(?1,?2,?3,?4,?5,?6,?7,?8,?9,?10);
INSERT OR IGNORE INTO ApplicationUser (_Revision, _WorkId, User, ApplicationIdentity, Application, Package, PackageUser)SELECT 1, ?2, pu.User, ai._ApplicationIdentityID, a._ApplicationID, pu.Package, pu._PackageUserID FROM PackageUser AS pu INNER JOIN Application AS a ON a.Package=pu.Package INNER JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId WHERE pu._PackageUserID=?1   AND (pu._WorkId=0 OR pu._WorkId=?2) AND (a._WorkId=0 OR a._WorkId=?2);
INSERT OR IGNORE INTO User(_Revision, UserSid, _Dictionary)VALUES(1, X'010100000000000512000000', NULL);
Insertable
insfile
Install
InstallAppMonPrinter
InstalledLocationVirtualization
install-manifest
InstallPackageList
InstallPrinterDriverFromPackageW
instrumentation
instrumentationManifest
insufficient memory
IntegrityLevel
Interactive User
Interface
InterfaceIdentifier
InterlockedPopEntrySList
InterlockedPushEntrySList
Internal::GetPackagedFileAbsolutePath(incomingPackage, _properties.Executable.Value.GetRawBuffer(nullptr), surrogateExecutableAbsolutePath)
Internal::GetPackagedFileAbsolutePath(incomingPackage, _properties.HelpDirectory.Value.GetRawBuffer(nullptr), absolutePath)
Internal::GetPackagedFileAbsolutePath(incomingPackage, _properties.Win32Path.Value.GetRawBuffer(nullptr), absolutePath)
Internal::GetPackagedFileAbsolutePath(incomingPackage, _properties.Win64Path.Value.GetRawBuffer(nullptr), absolutePath)
Internal::GetPackagedFileAbsolutePath(incomingPackage, GetDllPathForArchitecture(architecture).GetRawBuffer(nullptr), dllAbsolutePath)
Internal::GetSystemFileAbsolutePath( _properties.SystemExecutableArchitecture.Value, _properties.Executable.Value.GetRawBuffer(nullptr), surrogateExecutableAbsolutePath)
InternalName
internetshortcut
invalid bit length repeat
invalid block type
invalid distance code
invalid hash bucket count
Invalid incoming package manifest
invalid literal/length code
invalid map<K, T> key
Invalid outgoing package manifest
invalid stoi argument
invalid stoll argument
invalid stored block lengths
invalid stoull argument
invalid string position
invalid string_view position
invalid unordered_map<K, T> key
invalid window size
InvokeProgID
InvokeVerb
IoPriority
ipAddressAvailability
IPProtocol
is_srjournal_enabled
is_triggers_enabled
IsAADCloudSearchEnabled
IsCentennial
IsDebuggerPresent
IsDeveloperModeEnabled
IsDeviceSearchHistoryEnabled
IsImpersonating
IsInAutoCommitMode() called but !db.IsOpen()
IsInPlaceUpdate
IsInRelatedSet
IsInstalled
IsKnownInvalidDeletePath(m_path)
IsMSACloudSearchEnabled
isolation
Isolation
IsOptional
IsPackageEncrypted
IsPackageUsingBDC
IsProcessorFeaturePresent
IsRetailUnlocked
isSessionLocked
IsStreamingPackage
IsValidSid
IsWellKnownSid
iterator == writerInfos.end()
iterator->get_Current(&item)
iterator->get_HasCurrent(&hasCurrent)
iterator->MoveNext(&hasCurrent)
journal_mode
journal_size_limit
jsefile
JuniperNetworks.JunosPulseVpn_cw5n1h2txyewy
K H;O
k VWATAVAWH
k VWAUAVAWH
K0H;{ r
K0H9i
kernel32.dll
kernelbase.dll
key.HasValue(entryTagValueName)
KeyName
keyValuePair->get_Key(clsid.ReleaseAndGetAddressOf())
keyValuePair->get_Key(iid.ReleaseAndGetAddressOf())
keyValuePair->get_Value(&classInterface)
keyValuePair->get_Value(&itf)
keyValuePair->get_Value(&proxyStub)
keyValuePair->get_Value(&serverInterface)
keywords
Keywords
KxH9i
L!d$0E3
L!d$0H
L!d$8L!d$0L!d$(L!d$ 3
L!L$ 3
L#F0M
L#u0M
L#v0M
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
L$ H+
L$ H3
L$ Ic
L$ SH
L$ SVWH
L$ SWH
L$ UH
L$ USVWATAUAVH
L$ USVWAVH
L$ UVWATAUAVAWH
L$ UVWH
L$ UWAVH
l$ VH
l$ VWATAUAVAW
l$ VWATAUAVH
l$ VWATAVAWH
l$ VWAUAVAWH
L$ VWAVH
l$ VWAVH
L$ VWAVH
l$ VWAVH
L$ VWAVH
l$ VWAVH
L$ VWAVH
L$ WH
L$(@8u
L$(E3
L$(H;
L$(I;
L$(L+
L$@9L$ t
L$@E3
L$@H3
L$@I+
L$`D;
L$`E3
L$`H;
L$`H3
L$0E3
L$0H!|$(3
L$0H;
L$0H;A s
L$0H3
L$0H9
L$0H9;t
L$0I;N
L$0I+
L$0L;L$8t*A
L$8E3
L$8H;
L$8H3
l$8H9i u+H
L$8I;
L$8L+
l$aD8l$d
L$h@8u
L$hE3
L$HE3
L$hE3
L$HE3
l$hE3
L$HE3
l$HE3
L$HH;
L$HH;C
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$hI;
l$hL9
L$P;L$@
l$PA_A^A]A\_^
l$PE3
L$PE3
l$Pf9.s
L$PH;
L$PH+
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$PI#
L$PI9
l$pL;OPs
L$TE3
L$xD;
L$xE3
L$XE3
L$xE3
L$XE3
L$xE3
L$XE3
L$XH+
L$XH3
L$xH3
L$XH3
L;`0r
L;eHs{H
L;oHu$H
L;t$H
L;t$Ht
L;t$Hw
L+C0L;
L9{Hu
L9|$xt eH
L90t?I
L9d$ u
L9G(A
L9l$0
L9l$hu
L9p A
L9u8u
L9v u
L9v(u
L9v0u
L9v8u1
lambda(spExtensionRegistration.Get())
LastError=%d, source=%s, dest=%s
LastLine
latency
Latency
LaunchPermission
LazyFlushQueueLength
LcL$@L
LD9&v9H
LeaveCriticalSection
LegalCopyright
level
Level
LICENSING_DEH_KEYWORD
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LineNumber
lineNumber
LinkDestinationPath
list too long
lnkfile
LoadCategoryNameTable
LoadExtensionRegistrationTable
LoadLibraryExW
Local\SM0:%lu:%lu:%hs
LocalAlloc
localCollector
LocalExperiencePackage
LocalFree
LocalizedString
localManager
LocalPortMax
LocalPortMin
localResourceManager->Initialize()
LocalServer32
LocalService
localService
localSystem
Location
locking_mode
Log(*error*,message) error: Invalid type for error (%d)
Log(error,*message*) error: Invalid type for message (%d)
LogFileInUse Telemetry failed: No valid tag.
Logging
logging
Logging data because access was denied for file: 
LogHr
LogIfAccessDenied
LogNt
LogStagedFeatureUsage
LookasideHitPeak
LookasideMissFullPeak
LookasideMissSizePeak
LookasideUsed
LookasideUsedPeak
LookupAccountSidW
lower
lpt1.
lpt2.
lpt3.
lpt4.
lpt5.
lpt6.
lpt7.
lpt8.
lpt9.
ls:\9
LsaLookupClose
LsaLookupFreeMemory
LsaLookupGetDomainInfo
LsaLookupOpenLocalPolicy
lstd::exception: %hs
LXP_DEH_KEYWORD
M H1E
M#u0M
m_isMachineRegister
M_L9}
m_mrtHelper.GetLocalizedStringResource(stringOrResourceReference, resolvedStringBuffer)
m_mrtHelper.Initialize(package->GetPackageRoot(), package->GetPackageMoniker(), package->GetIsInbox(), resourcesRedirected)
m_mrtRsourceManager->GetReference(IID_PPV_ARGS(&resourceReferenceHandler))
m_text.find(L'\\') != std::wstring::npos
m_text.length() < minLength
m_text.length() == 0
m_text.length() > maxLength
m_text.length() > UNICODE_STRING_MAX_CHARS
m_userToken == nullptr
M8uwL
M9.ubI
Machine
machine
Machine
MACHINE\
Machine\
MachineArchitecture
MachineDatabase
machineDatabase == nullptr
MachineDatabaseAutoCheckpoint
MachineDatabaseCacheSize
MachineDatabaseCheckpointThreshold
MachineDatabaseFileChunkSize
MachineDatabaseJournalSizeLimit
MachineDatabaseOptions
MachineDatabasePageSize
MachineDatabaseStatisticsLastUpdated
MachineType
MainBundle
MainOrOptionalPackageFullName1
MainOrOptionalPackageFullName2
MainPackageFamilyName
MainPackageFullName
MainPackageMoniker
MaintenanceInterval
MaintenanceMaxClockDelta
MakeAndInitialize<ActivationCatalogCollector>(collector)
MakeAndInitialize<ActivationCatalogCollectorForUser>(collector)
MakeAndInitialize<ClassRegistrationType>(&classRegistration, _classes.get(), classId, _id)
MakeAndInitialize<ComInprocHandlerClassDllRegistration>(&classRegistration, _classes.Get(), classId)
MakeAndInitialize<ComInprocServerClassDllRegistration>(&classRegistration, _classes.Get(), classId)
MakeAndInitialize<ComManagedInprocServerClassRegistration>(&classRegistration, _classes.Get(), classId)
MakeAndInitialize<ExtensionCatalogCollector>(collector)
MakeAndInitialize<PackagedComCatalogCollector>(collector)
MakeAndInitialize<PackagedComCatalogCollectorForUserOrSystemRegister>(collector, userToken)
MallocCount
MallocCountPeak
MallocSizePeak
ManifestCacheOptions
ManifestPath
ManifestReaderFound
manual
map/set too long
MAPI Server Host
MAPSL
MapViewOfFile
MaxBuffers
maxBuffers
MaxCount
MaxInstallOrder
MaxSize
maxSize
McC(A
MediaId
MediaID
mediumIL
memcmp
memcpy
memmove
memmove_s
MEMORY
MemoryPriority
MemoryUsed
MemoryUsedPeak
memset
message
Message
message
Message
message
Message
message
Message
message
Message
MessageFile
MHH!}
MHH9O(t*H
MHL;oHu!H
Microsoft
Microsoft Corporation
Microsoft Enhanced RSA and AES Cryptographic Provider
Microsoft Software Printer Driver
Microsoft.classicAppCompat_8wekyb3d8bbwe
Microsoft.classicAppCompatElevated_8wekyb3d8bbwe
Microsoft.classicAppInstaller_8wekyb3d8bbwe
Microsoft.GameOS
Microsoft.MoCamera_cw5n1h2txyewy
microsoft.powershellscript.1
microsoft.system.package.metadata
Microsoft.Windows.ApplicationModel.DesktopAppx
Microsoft.Windows.AppXDeploymentExtensions
Microsoft.Windows.AppxDeploymentFallback
Microsoft.Windows.AppXDeploymentServer
Microsoft.Windows.Cortana_cw5n1h2txyewy
Microsoft.Windows.Print.AppMon
Microsoft.Windows.Security.CustomCapability
Microsoft.Windows.Shell.CentennialDefaultAssoc
Microsoft.Windows.StateRepository.Service
MicrosoftTelemetryAssertTriggeredUM
Microsoft-Windows-AppXDeployment-Server
Microsoft-Windows-AppXDeploymentServer/Debug
Microsoft-Windows-AppXDeploymentServer/Diagnostic
Microsoft-Windows-AppXDeploymentServer/Operational
Microsoft-Windows-AppXDeploymentServer/Restricted
Migrated successfully setting.
MigrateToCentennialAsDefault
MigratorPatch
minBuffers
MinBuffers
MiscStatus
miscStatus != existingMiscStatus
miscStatusAspectFlagsPropertyValue->GetString( &miscStatusAspectFlagsString)
miscStatusAspectKeyValuePair->get_Key(&miscStatusAspect)
miscStatusAspectKeyValuePair->get_Value( &miscStatusAspectFlagsInspectable)
MissingPackageFamily
MissingParameter
MitigatedAppDataVolume
mmgaclient.dll
MmgaServer.exe
MoCOM
MOCOM_HELPER_KEYWORD
modern
ModifiedFile
ModifiedItems
module
MofFile
MountPoint
MoveFileExW
MoveFileW
MRT_DEH_KEYWORD
MrtApplication
MrtDefaultTile
mrtManager.Initialize()
mrtManager->ResolveStringReference(referenceString, resolvedString)
MrtPackage
MrtSharedPri
MrtUserPri
ms:CriticalData
ms:Measures
ms:ReservedKeyword44
ms:Telemetry
MSAC_SIGNOUT_DEH_KEYWORD
ms-accountpictureprovider
ms-appdata
ms-appx
ms-appx-web
ms-autoplay
mscoree.dll
Msg:[%ws] 
MsgWaitForMultipleObjects
msi.package
msi.patch
MsixRegistryCompatibility.Entry
MsixRegistryCompatibility.EntryPath.
MsixRegistryCompatibility.OverwrittenBy
MsixRegistryCompatibility.WrittenBy
msvcp_win.dll
ms-windows-search
MultiByteToWideChar
MultiSelectModel
MultiString::InitializeFromStringArray
MutablePackageDirectory
MutablePackageDirectoryStateHandler
m'w8Z
MWD8a tPH
mwt3H
MyForEach
MyForEach(iterator, [&packageMoniker, &registrationStoreContext] ( IKeyValuePair< HSTRING, IDllServerActivatableClassRegistration* > * keyValuePair ) -> HRESULT { ComPtr< IDllServerActivatableClassRegistration > classInterface; RETURN_IF_FAILED(keyValuePair->get_Value(&classInterface)); RETURN_IF_FAILED(static_cast< InProcessActivatableClassRegistration_Impl* >(classInterface.Get())-> PendingWriteToStore(packageMoniker, registrationStoreContext)); return S_OK; })
MyForEach(iterator, [&packageMoniker, &registrationStoreContext] ( IKeyValuePair< HSTRING, IExeServerActivatableClassRegistration* > *keyValuePair ) -> HRESULT { ComPtr< IExeServerActivatableClassRegistration > classInterface; RETURN_IF_FAILED(keyValuePair->get_Value(&classInterface)); OutOfProcessActivatableClassRegistration_Impl *activatableClass = static_cast< OutOfProcessActivatableClassRegistration_Impl* >(classInterface.Get()); RETURN_IF_FAILED(activatableClass->PendingWriteToStore(packageMoniker, registrationStoreContext)); return S_OK; })
MyForEach(iterator, [&packageMoniker, &registrationStoreContext]( IKeyValuePair< HSTRING, IInspectable* > *keyValuePair ) -> HRESULT { ComPtr< IInspectable > itf; Windows::Internal::String iid; RETURN_IF_FAILED(keyValuePair->get_Key(iid.ReleaseAndGetAddressOf())); RETURN_IF_FAILED(keyValuePair->get_Value(&itf)); RETURN_IF_FAILED(registrationStoreContext->CreateInterfaceEntry( packageMoniker.Get(), iid.Get(), *static_cast<InterfaceRegistration_Impl*>(itf.Get()))); return S_OK; })
MyForEach(iterator, [&packageMoniker, &registrationStoreContext]( IKeyValuePair< HSTRING, IInspectable* > *keyValuePair ) -> HRESULT { ComPtr< IInspectable > proxyStub; Windows::Internal::String clsid; RETURN_IF_FAILED(keyValuePair->get_Key(clsid.ReleaseAndGetAddressOf())); RETURN_IF_FAILED(keyValuePair->get_Value(&proxyStub)); RETURN_IF_FAILED(registrationStoreContext->CreateProxyStubEntry( packageMoniker.Get(), clsid.Get(), *static_cast<ProxyStubRegistration_Impl*>(proxyStub.Get()))); return S_OK; })
MyForEach(iterator, [this, incomingPackage, &registrationStoreContext] ( IKeyValuePair< HSTRING, IExeServerRegistration* > *keyValuePair ) -> HRESULT { ComPtr< IExeServerRegistration > serverInterface; RETURN_IF_FAILED(keyValuePair->get_Value(&serverInterface)); RETURN_IF_FAILED(static_cast<ExeServerRegistration_Impl*>(serverInterface.Get())-> PendingWriteToStore(incomingPackage, registrationStoreContext)); return S_OK; })
N H"0$.&.*
N(I;N0t
N6Eh0
NameCollisionMap::Make(&_nameCollisionMap)
NameCollisionMap::Make(&registration->_nameCollisionMap)
nameCollisionMap->HasKey(keyName, &fHasKey)
nameCollisionMap->Insert(keyName, keyName, &replaced)
nameCollisionMap->Remove(keyName)
NamedDependency
NavigateTo
NCBEnabled
nD9e@tDH
need dictionary
networkEndpoint
networkService
neutral
Neutral
NewMainPackageFullName
NextDeploymentState
Ng0D+
No package found
NORMAL
Not found reason: %d
NotifyServiceStatusChangeW
NT AUTHORITY\LocalService
NT AUTHORITY\NetworkService
NtAccessCheck
NtAdjustPrivilegesToken
NtClose
NtCreateFile
NtDelayExecution
NtDeviceIoControlFile
ntdll.dll
ntelA
NtEnumerateValueKey
NtFsControlFile
NTMARTA.dll
NtOpenFile
NtOpenThreadToken
NtQueryEaFile
NtQueryInformationFile
NtQueryInformationProcess
NtQueryInformationThread
NtQueryInformationToken
NtQueryKey
NtQueryKey(handle, KeyBasicInformation, keyBasicInformation, keyBasicInformationSize, &keyBasicInformationSize)
NtQueryObject
NtQuerySystemInformation
NtQueryValueKey
NtQueryWnfStateData
NtSetInformationFile
NtSetInformationThread
NtSetInformationVirtualMemory
NtSetValueKey
NtSetValueKey(handle, &nameUnicodeString, 0, type, data.pBlobData, data.cbSize)
NtUpdateWnfStateData
NtWaitForSingleObject
numAttempts
NumberOfFiles
NumberOfPagesCheckpointed
numTotalSteps
O D8h t@
O H;Y
O:%sD:P(A;;FA;;;%s)(A;;GR;;;%s)(A;;FA;;;BA)
O:BAG:BAD:(A;;0x1;;;SY)(A;;0x1;;;BA)
O:PSG:BAD:(A;;0xB;;;BU)(A;;0xB;;;AC)
O:PSG:BAD:(A;;0xB;;;SY)(A;;0xB;;;BA)(A;;0xB;;;BU)
O:PSG:BAD:(A;;0xB;;;SY)(A;;0xB;;;IU)(A;;0xB;;;BA)(A;;0xB;;;BU)
O:SYG:SYD:P(A;OICI;KA;;;SY)(A;OICI;KRKX;;;BA)(A;OICI;KRKX;;;%s)
O@H9OPt
o\$PH
O`H;Oht
ObjectLength
ObjectNum
ocxfile
oD$ f
Offset
oL$0f
OldMainPackageFullName
ole32.dll
OLEAUT32.dll
onecore\admin\appmodel\cleanupmanager\cleanupmanager.cpp
onecore\admin\appmodel\common\accesshelpers.cpp
onecore\admin\appmodel\common\appxdeletefile.cpp
onecore\admin\appmodel\common\configuration.cpp
onecore\admin\appmodel\common\directoryacls.cpp
onecore\admin\appmodel\common\FileInUseTelemetry.hpp
onecore\admin\appmodel\common\hardlinkdirectorytree.cpp
onecore\admin\appmodel\common\impersonateself.cpp
onecore\admin\appmodel\common\logfileinformation.cpp
onecore\admin\appmodel\common\ManifestCache.hpp
onecore\admin\appmodel\common\manifestreader.cpp
onecore\admin\appmodel\common\metadata.cpp
onecore\admin\appmodel\common\mountedfolder.cpp
onecore\admin\appmodel\common\mrthelper.cpp
onecore\admin\appmodel\common\mutabledirectoryhelper.cpp
onecore\admin\appmodel\common\packagefullnameutilities.cpp
onecore\admin\appmodel\common\packageid.cpp
onecore\admin\appmodel\common\PackageID.inl
onecore\admin\appmodel\common\packageinfo.cpp
onecore\admin\appmodel\common\packagestatus.cpp
onecore\admin\appmodel\common\prefetchfile.cpp
onecore\admin\appmodel\common\privilege.cpp
onecore\admin\appmodel\Common\ProgID.hpp
onecore\admin\appmodel\common\removeregistrytree.cpp
onecore\admin\appmodel\common\securitydescriptorbuilder.cpp
onecore\admin\appmodel\common\sessionutilities.cpp
onecore\admin\appmodel\common\shellrefresh.cpp
onecore\admin\appmodel\common\stagingpaths.cpp
onecore\admin\appmodel\common\statepaths.cpp
onecore\admin\appmodel\Common\StateRepository.hpp
onecore\admin\appmodel\common\utilities.cpp
onecore\admin\appmodel\Common\Utilities.hpp
onecore\admin\appmodel\common\volume.cpp
onecore\admin\appmodel\common\volumemanager.cpp
onecore\admin\appmodel\common\xmltools.cpp
onecore\admin\appmodel\common\xpath.cpp
onecore\admin\appmodel\osim\src\deh\alarm\alarmextensionhandler.cpp
onecore\admin\appmodel\osim\src\deh\applicationregistration\applicationregistrationhelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\appprinter\appprinterhelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\approvedshellextension\approvedshellextensionhelper.cpp
onecore\admin\appmodel\OSIM\src\deh\appx\Common\ConstantStringMap.hpp
onecore\admin\appmodel\osim\src\deh\appx\common\ConstantStringMap.hpp
onecore\admin\appmodel\osim\src\deh\appx\common\customcapabilities.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\dehrequest.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\deploymentextension.cpp
onecore\admin\appmodel\OSIM\src\deh\appx\Common\EnumStringMapping.hpp
onecore\admin\appmodel\osim\src\deh\appx\common\extensionbundle.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\mocomhelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\MoCOMHelper.hpp
onecore\admin\appmodel\OSIM\src\deh\appx\Common\MoCOMHelper.hpp
onecore\admin\appmodel\OSIM\src\deh\appx\Common\MsixAppCompatSupport.hpp
onecore\admin\appmodel\osim\src\deh\appx\common\package.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\progidregistryhelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\shellrefresh.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\tools.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\usertoken.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\xmltools.cpp
onecore\admin\appmodel\osim\src\deh\appx\contenttype\contenttypehelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\contextmenushellexhandler\contextmenushellexhandler.cpp
onecore\admin\appmodel\osim\src\deh\appx\contextmenushellexhandler\contextmenushellexhelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\controlpanelregistration\controlpanelregistrationhelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\custominstall\dehlib\custominstallextensionhandler.cpp
onecore\admin\appmodel\osim\src\deh\appx\custominstall\dehlib\custominstallextensionhelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\custominstall\dehlib\installactionhelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\custominstall\installaction.cpp
onecore\admin\appmodel\osim\src\deh\appx\fileexplorercontextmenus\fileexplorercontextmenus.cpp
onecore\admin\appmodel\osim\src\deh\appx\filetype\filetypeextensionhandler.cpp
onecore\admin\appmodel\osim\src\deh\appx\filetype\filetypehelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\firewallrules\firewallruleshelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\integrity\integritydeh.cpp
onecore\admin\appmodel\osim\src\deh\appx\lookaside\lookasidehelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\mutabledirectory\mutabledirectoryhandler.cpp
onecore\admin\appmodel\osim\src\deh\appx\mutabledirectory\MutableDirectoryHandler.hpp
onecore\admin\appmodel\osim\src\deh\appx\packagedservices\packagedserviceextensionhandler.cpp
onecore\admin\appmodel\osim\src\deh\appx\packagedservices\packagedserviceextensionhelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\packagedservices\packagedservicetriggerdata.cpp
onecore\admin\appmodel\osim\src\deh\appx\packagedservices\packagedservicetriggerdataitems.cpp
onecore\admin\appmodel\osim\src\deh\appx\pia\piahelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\protocol\protocolextensionhandler.cpp
onecore\admin\appmodel\osim\src\deh\appx\protocol\protocolhelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\registrycompatkeys\registrycompatkeyshelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\scopecompatenforcer\scopecompatenforcerhandler.cpp
onecore\admin\appmodel\osim\src\deh\appx\shadowcopyexclude\shadowcopyexcludehelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\sud\setuserdefaulthelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\systemfileassociation\systemfileassociationhelper.cpp
onecore\admin\appmodel\osim\src\deh\autoplay\autoplayextensionhandler.cpp
onecore\admin\appmodel\osim\src\deh\autoplay\autoplayhelper.cpp
onecore\admin\appmodel\OSIM\src\deh\BaseClasses\BaseHandlers.hpp
onecore\admin\appmodel\OSIM\src\deh\BaseClasses\BaseHelpers.hpp
onecore\admin\appmodel\osim\src\deh\baseclasses\mainpackagedeploymentextensionhandler.cpp
onecore\admin\appmodel\osim\src\deh\errorreporting\errorreportingextensionhandler.cpp
onecore\admin\appmodel\osim\src\deh\eventlog\eventloghelper.cpp
onecore\admin\appmodel\osim\src\deh\eventtracing\eventtracingconflictresolution.cpp
onecore\admin\appmodel\OSIM\src\deh\EventTracing\EventTracingConflictResolution.hpp
onecore\admin\appmodel\osim\src\deh\eventtracing\eventtracingextensionhandler.cpp
onecore\admin\appmodel\osim\src\deh\eventtracing\eventtracingextensions.cpp
onecore\admin\appmodel\OSIM\src\deh\EventTracing\EventTracingPathHelpers.hpp
onecore\admin\appmodel\osim\src\deh\eventtracing\eventtracingregistration.cpp
onecore\admin\appmodel\OSIM\src\deh\EventTracing\EventTracingWinevtHelpers.hpp
onecore\admin\appmodel\osim\src\deh\eventtracing\srdictionarytoxmldomelement.cpp
onecore\admin\appmodel\osim\src\deh\indexeddb\indexeddb.cpp
onecore\admin\appmodel\osim\src\deh\microsoftaccountclient\signoutextensionhandler.cpp
onecore\admin\appmodel\osim\src\deh\mmga\mmgahelper.cpp
onecore\admin\appmodel\osim\src\deh\searchindexer\searchindexerextensionhandler.cpp
onecore\admin\appmodel\osim\src\deh\searchsettingsmigration\searchsettingsmigrationextensionhandler.cpp
onecore\admin\appmodel\osim\src\deh\sharedfonts\sharedfontshandler.cpp
onecore\admin\appmodel\osim\src\deh\shortcuts\shortcuthelper.cpp
onecore\admin\appmodel\osim\src\deh\uex\apppicker\apppickerhelper.cpp
onecore\admin\appmodel\OSIM\src\deh\uex\apppicker\CachedFileUpdater.hpp
onecore\admin\appmodel\OSIM\src\deh\uex\apppicker\FileOpenPicker.hpp
onecore\admin\appmodel\OSIM\src\deh\uex\apppicker\fileOpenPickerHelper.hpp
onecore\admin\appmodel\OSIM\src\deh\uex\apppicker\FileSavePicker.hpp
onecore\admin\appmodel\OSIM\src\deh\uex\apppicker\fileSavePickerHelper.hpp
onecore\admin\appmodel\OSIM\src\deh\uex\inc\BaseHandler.hpp
onecore\admin\appmodel\OSIM\src\deh\uex\inc\BaseHelper.hpp
onecore\admin\appmodel\osim\src\deh\uex\share\sharehelper.cpp
onecore\admin\appmodel\osim\src\deh\uex\usertileprovider\usertileproviderhelper.cpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\activatableclassregistration.cpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\activationcatalogverifier.cpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\CollectorMrtResourceManager.hpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\collectors.cpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\extensioncatalogcollector.cpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\ExtensionCatalogCollector.hpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\getpackagefamilytimestamp.cpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\packagedcomregistration.cpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\registrycompatibilitycollector.cpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\registrycompatibilitymanager.cpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\RegistryCompatibilityShared.hpp
onecore\admin\appmodel\OSIM\src\deh\WinRT\Collector\RegistryCompatibilityTypes.hpp
onecore\admin\appmodel\osim\src\deh\winrt\collector\RegistryCompatibilityTypes.hpp
onecore\admin\appmodel\OSIM\src\deh\WinRT\Inc\Uint32String.hpp
onecore\admin\appmodel\osim\src\deh\xbox\gamebar\gamebarextensionhandler.cpp
onecore\admin\appmodel\osim\src\extensiondll\desktop\dllmain.cpp
onecore\admin\appmodel\osim\src\extensiondll\desktop\registration.cpp
onecore\admin\appmodel\osim\src\extensionmanager\extensionmanagerproviders.cpp
onecore\admin\appmodel\packagemanager\logging\appxlog.cpp
onecore\admin\appmodel\packagerepository\common\extensions.cpp
onecore\admin\appmodel\packagerepository\common\packageextras.cpp
onecore\admin\appmodel\packagerepository\common\packagerow.cpp
onecore\admin\appmodel\packagerepository\common\tools.cpp
onecore\admin\appmodel\packagerepository\common\visibilityrow.cpp
onecore\admin\appmodel\PackageRepository\Inc\External\ITable.hpp
onecore\admin\appmodel\packagerepository\staterepository\dependencygraphtable.cpp
onecore\admin\appmodel\packagerepository\staterepository\dependencytable.cpp
onecore\admin\appmodel\packagerepository\staterepository\extensiontable.cpp
onecore\admin\appmodel\packagerepository\staterepository\packagetable.cpp
onecore\admin\appmodel\packagerepository\staterepository\repository.cpp
onecore\admin\appmodel\packagerepository\staterepository\repositorypropertybag.cpp
onecore\admin\appmodel\packagerepository\staterepository\repositorysession.cpp
onecore\admin\appmodel\packagerepository\staterepository\staterepositoryhelper.cpp
onecore\admin\appmodel\packagerepository\staterepository\visibilitytable.cpp
onecore\admin\appmodel\packagerepository\staterepository\wowdependencygraphtable.cpp
onecore\admin\appmodel\sharedpackagecontainer\lib\sharedpackagecontainer.acls.cpp
onecore\base\appmodel\appxminirepository\lib\appxminirepository.cpp
onecore\base\appmodel\common\base32encoding.cpp
onecore\base\appmodel\common\bytebuffer.cpp
onecore\base\appmodel\common\cryptoprovider.cpp
onecore\base\appmodel\common\impersonationcontext.cpp
onecore\base\appmodel\common\pathhelpers.cpp
onecore\base\appmodel\common\registrykey.cpp
onecore\base\appmodel\common\sidhelper.cpp
onecore\base\appmodel\common\stateseparation.cpp
onecore\base\appmodel\common\stringbuilder.cpp
onecore\base\appmodel\common\stringset.cpp
onecore\base\appmodel\common\widestring.cpp
onecore\base\appmodel\package\packagesid.cpp
onecore\base\appmodel\runtime\src\monikerinternal.cpp
onecore\base\appmodel\StateRepository\Common\Inc\Security.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\blob.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\changetracking.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\database.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\Database.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\databasecache.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\DatabaseCache.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\databasecachesingleton.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\datatype-hasher.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\datatype-progid.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionarywinrtreader.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionarywriter.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionaryxmlwriter.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entities-partitions.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-activation.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-activation-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionalias.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionaliasuser.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextension.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextensionhost.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appinstaller.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appinstalleruri.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-application.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationbackgroundtask.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationcontenturirule.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationextension.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationextension-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationidentity.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationproperty.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationuser.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationuser-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appservice.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandler.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandlergroup.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxextension.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxmanifest.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-autoupdatepackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundle.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundlepackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundleresource.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-connectedsetpackagefamily.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroup.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroupfile.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-custominstallwork.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-defaulttile.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependency.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependency-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependencygraph.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependencygraph-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-deploymenthistory.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dynamicappurihandler.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dynamicappurihandlergroup.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-endoflifepackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-enterprise.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-file.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-file-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-filetypeassociation.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-hostruntime.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-hostruntime-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtapplication.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtdefaulttile.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtpackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtsharedpri.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtuserpri.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-nameddependency.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundle.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundlepackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundleresource.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-package.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageappinstaller.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-package-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagedependency.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageextension.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageextension-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageexternallocation.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamily.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamily-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilypolicy.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilyuser.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilyuserresource.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageidentity.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageidentity-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagelocation.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagelocation-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagemachinestatus.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagepolicy.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageproperty.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesourceuri.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesuperceded.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuser.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuser-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuserstatus.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuserstatus-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytile.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuser.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuserchangelog.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuserchangelog-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuser-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-protocol.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackagedeleted.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackageexclude.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-publishercachefolder.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-resource.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytile.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytile-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuser.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuserchangelog.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuserchangelog-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuser-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sequence.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sequence-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sharedpackagecontainer.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sharedpackagecontainerpackagefamily.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srhistory.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srjournal.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srjournalarchive.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-targetdevicefamily.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-tilechangelogview-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-tileview-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-user.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-user-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-workinprogress.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-workinprogress-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-wowdependencygraph.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-wowdependencygraph-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-xboxpackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-xboxpackage-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\globals.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\logging.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\longrunningtransaction.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\repository.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\resourcepriority.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\ResourcePriority.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\statement.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\Statement.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\statementcache.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\StatementCache.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\statementexecution.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\text.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\texta.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\Utf16String.hpp
onecore\base\appmodel\StateRepository\DataAccessLayer\Utf8String.hpp
onecore\internal\com\inc\combase\ComGuid.hpp
onecore\internal\sdk\inc\wil/Staging.h
onecore\internal\sdk\inc\wil\opensource/wil/resource.h
onecore\internal\sdk\inc\wil\opensource/wil/result_macros.h
onecore\internal\sdk\inc\wil\opensource/wil/token_helpers.h
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\internal\sdk\inc\wil\opensource\wil\result.h
onecore\internal\shell\inc\UserChoiceCore.h
onecore\printscan\print\lib\appprinterinstallationlib\appprinterinstaller\appprinterinstaller.cpp
onecore\private\base\inc\AppModel\Common\FileInUse.hpp
onecore\private\base\inc\appmodel\package\PackageMoniker.hpp
onecore\private\base\inc\appmodel\staterepository\dal/ResourcePriority.hpp
onecore\private\com\inc\combase\ComRegistryCatalogFunctions.hpp
onecore\private\com\inc\deployment\RegistrationStore.hpp
onecore\private\com\inc\deployment\RegistrationStoreApiTypes.hpp
onecore\shell\lib\userchoicehelpers\userchoicecore.cpp
Online
OOBEApp_cw5n1h2txyewy
OPCOx
OpenClassesRootKey(whichHive, KEY_READ, &classesRootKey)
OpenClsidKey(whichHive, clsid, KEY_READ, &clsidKey)
OpenIsSafe
OpenPrinterW
OpenProcess
OpenProcess() failed on %u of %u for %hs
OpenProcessToken
OpenSCManagerW
OpenSemaphoreW
OpenServiceW
OpenSetting: Subkey=%ls
OpenStateExplicit
OpenThreadToken
OpenWithProgids
Operation
Operational
operational
Optional
OptionalBundle
OptionalBundlePackage
OptionalBundleResource
OptionalPackageSubtype
Options
OriginalFilename
OriginalUser
originatingContextId
originatingContextMessage
originatingContextName
OrphanedAppDataVolume
OSIM_KEYWORD
OSIMListTypeEnumMap
OSIntegration.DEH.ActivationCatalogCollector
OSIntegration.DEH.ActivationCatalogCollectorForUser
OSIntegration.DEH.Collectors
OSIntegration.DEH.ComExeClassRegistration
OSIntegration.DEH.ComExeServerRegistration
OSIntegration.DEH.ComInprocHandlerClassDllRegistration
OSIntegration.DEH.ComInprocServerClassDllRegistration
OSIntegration.DEH.ComInterfaceRegistration
OSIntegration.DEH.ComManagedInprocServerClassRegistration
OSIntegration.DEH.ComProgIdRegistration
OSIntegration.DEH.ComProxyStubRegistration
OSIntegration.DEH.ComServiceClassRegistration
OSIntegration.DEH.ComServiceServerRegistration
OSIntegration.DEH.ComSurrogateClassRegistration
OSIntegration.DEH.ComSurrogateServerRegistration
OSIntegration.DEH.ComTreatAsClassRegistration
OSIntegration.DEH.ComTypeLibRegistration
OSIntegration.DEH.ExtensionCatalogCollector
OSIntegration.DEH.ExtensionRegistration
OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties
OSIntegration.DEH.PackagedComCatalogCollector
OSIntegration.DEH.PackagedComCatalogCollectorForUserOrSystemRegister
OSIntegration.DEH.RegistryCompatibilityCollector
OSIntegration.DEH.RegistryCompatibilityManager
OSIntegration::DEH::ActivationCatalogCollector::AddOutOfProcessActivatableClassRegistration
OSIntegration::DEH::ActivationCatalogCollector::AddServerRegistration
OSIntegration::DEH::ActivationCatalogCollector::PendingRemove
OSIntegration::DEH::ActivationCatalogCollector::PendingWrite
OSIntegration::DEH::ActivationCatalogCollector::PendingWrite::<lambda_e8da1d624f5a8bd4a8ff673fff0627a1>::operator ()
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteExeSevers
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteExeSevers::<lambda_1aa3892973072908dcbd7084db467598>::operator ()
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteInProcActivatableClasses
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteInProcActivatableClasses::<lambda_17e64c4b6c9e7cc51bb10fcfe94be8eb>::operator ()
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteInterfaces
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteInterfaces::<lambda_4322a56d354eb0685e0659bd47d7f47b>::operator ()
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteOutOfProcActivatableClasses
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteOutOfProcActivatableClasses::<lambda_20cd266dcdfb7323e024d33da7893824>::operator ()
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteProxyStubs
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteProxyStubs::<lambda_e82a56ad4bd550ceabcd0284a54fe13c>::operator ()
OSIntegration::DEH::ActivationCatalogCollector::RetrieveInProcessActivatableClassRegistration
OSIntegration::DEH::ActivationCatalogCollector::RetrieveOutOfProcessActivatableClassRegistration
OSIntegration::DEH::ActivationCatalogCollector::RetrieveServerRegistration
OSIntegration::DEH::ActivationCatalogCollectorForUser::PendingRemove
OSIntegration::DEH::Collectors::RuntimeClassInitialize
OSIntegration::DEH::ComClassRegistration::RuntimeClassInitialize
OSIntegration::DEH::ComExeServerRegistration::CreateClassRegistration
OSIntegration::DEH::ComExeServerRegistration::SetArguments
OSIntegration::DEH::ComExeServerRegistration::SetExecutable
OSIntegration::DEH::ComExeServerRegistration::SetSystemExecutableArchitecture
OSIntegration::DEH::ComInterfaceRegistration::CreateCompatibilityEntries
OSIntegration::DEH::ComInterfaceRegistration::PendingWriteRegistration
OSIntegration::DEH::ComInterfaceRegistration::SetAsynchronousInterface
OSIntegration::DEH::ComInterfaceRegistration::SetHasMachineScope
OSIntegration::DEH::ComInterfaceRegistration::SetProxyStubClsidWithSupportedArchitectures
OSIntegration::DEH::ComInterfaceRegistration::SetSynchronousInterface
OSIntegration::DEH::ComInterfaceRegistration::SetTypeLib
OSIntegration::DEH::ComInterfaceRegistration::SetUniversalMarshaler
OSIntegration::DEH::ComManagedInprocServerClassRegistration::SetAssembly
OSIntegration::DEH::ComManagedInprocServerClassRegistration::SetImplementationClass
OSIntegration::DEH::ComManagedInprocServerClassRegistration::SetRuntimeVersion
OSIntegration::DEH::ComOutofprocClassRegistration::RuntimeClassInitialize
OSIntegration::DEH::ComProgIdRegistration::CreateCompatibilityEntries
OSIntegration::DEH::ComProgIdRegistration::PendingWriteRegistration
OSIntegration::DEH::ComProgIdRegistration::SetClsidWithIsInsertableObject
OSIntegration::DEH::ComProgIdRegistration::SetCurrentVersion
OSIntegration::DEH::ComProgIdRegistration::SetDisplayName
OSIntegration::DEH::ComProgIdRegistration::SetHasMachineScope
OSIntegration::DEH::ComProxyStubRegistration::CreateCompatibilityEntries
OSIntegration::DEH::ComProxyStubRegistration::PendingCopyFiles
OSIntegration::DEH::ComProxyStubRegistration::PendingWriteRegistration
OSIntegration::DEH::ComProxyStubRegistration::SetDisplayName
OSIntegration::DEH::ComProxyStubRegistration::SetHasMachineScope
OSIntegration::DEH::ComProxyStubRegistration::SetPath
OSIntegration::DEH::ComProxyStubRegistration::SetPath_arm
OSIntegration::DEH::ComProxyStubRegistration::SetPath_arm64
OSIntegration::DEH::ComProxyStubRegistration::SetPath_x64
OSIntegration::DEH::ComProxyStubRegistration::SetPath_x86
OSIntegration::DEH::ComServerRegistration::CreateClassRegistration
OSIntegration::DEH::ComServerRegistration::CreateCompatibilityEntries
OSIntegration::DEH::ComServerRegistration::PendingWriteRegistration
OSIntegration::DEH::ComServerRegistration::SetApplicationDisplayName
OSIntegration::DEH::ComServerRegistration::SetApplicationId
OSIntegration::DEH::ComServerRegistration::SetArguments
OSIntegration::DEH::ComServerRegistration::SetCalculatedRegistrationProperties
OSIntegration::DEH::ComServerRegistration::SetDisplayName
OSIntegration::DEH::ComServerRegistration::SetExecutable
OSIntegration::DEH::ComServerRegistration::SetLaunchAndActivationPermission
OSIntegration::DEH::ComServerRegistration::SetServiceName
OSIntegration::DEH::ComServerRegistration::SetSurrogateAppId
OSIntegration::DEH::ComServerRegistration::SetSystemExecutableArchitecture
OSIntegration::DEH::ComServiceServerRegistration::CreateClassRegistration
OSIntegration::DEH::ComServiceServerRegistration::SetArguments
OSIntegration::DEH::ComServiceServerRegistration::SetServiceName
OSIntegration::DEH::ComSurrogateClassRegistration::RuntimeClassInitialize
OSIntegration::DEH::ComSurrogateServerRegistration::CreateClassRegistration
OSIntegration::DEH::ComSurrogateServerRegistration::SetAppId
OSIntegration::DEH::ComSurrogateServerRegistration::SetCustomSurrogateExecutable
OSIntegration::DEH::ComSurrogateServerRegistration::SetCustomSurrogateSystemExecutableArchitecture
OSIntegration::DEH::ComTreatAsClassRegistration::CreateCompatibilityEntries
OSIntegration::DEH::ComTreatAsClassRegistration::PendingWriteRegistration
OSIntegration::DEH::ComTreatAsClassRegistration::SetAutoConvertTo
OSIntegration::DEH::ComTreatAsClassRegistration::SetDisplayName
OSIntegration::DEH::ComTreatAsClassRegistration::SetHasMachineScope
OSIntegration::DEH::ComTypeLibRegistration::CreateCompatibilityEntries
OSIntegration::DEH::ComTypeLibRegistration::PendingWriteRegistration
OSIntegration::DEH::ComTypeLibRegistration::SetDisplayName
OSIntegration::DEH::ComTypeLibRegistration::SetFlags
OSIntegration::DEH::ComTypeLibRegistration::SetHasMachineScope
OSIntegration::DEH::ComTypeLibRegistration::SetHelpDirectory
OSIntegration::DEH::ComTypeLibRegistration::SetLocaleId
OSIntegration::DEH::ComTypeLibRegistration::SetWin32Path
OSIntegration::DEH::ComTypeLibRegistration::SetWin64Path
OSIntegration::DEH::CreateActivationCatalogCollector
OSIntegration::DEH::CreateActivationCatalogCollectorForUser
OSIntegration::DEH::CreateExtensionCatalogCollector
OSIntegration::DEH::CreatePackagedComCatalogCollector
OSIntegration::DEH::CreatePackagedComCatalogCollectorForUserOrSystemRegister
OSIntegration::DEH::ExeServerRegistration::Create
OSIntegration::DEH::ExeServerRegistration::Retrieve
OSIntegration::DEH::ExtensionCatalogCollector::CreateExtensionRegistration
OSIntegration::DEH::ExtensionCatalogCollector::PendingRemove
OSIntegration::DEH::ExtensionCatalogCollector::PendingWrite
OSIntegration::DEH::ExtensionCatalogCollector::PendingWrite::<lambda_876117454afcc4e850e10f8e1c8f984f>::operator ()
OSIntegration::DEH::ExtensionCatalogCollector::RetrieveExtensionRegistration
OSIntegration::DEH::ExtensionCatalogCollector::RuntimeClassInitialize
OSIntegration::DEH::ExtensionRegistration::Create
OSIntegration::DEH::ExtensionRegistration::Retrieve
OSIntegration::DEH::ForEachExtensionRegistration
OSIntegration::DEH::GetPackageFamilySystemRegisterTimestampForPackage
OSIntegration::DEH::Internal::ActivatableClassRegistration_Impl<struct OSIntegration::DEH::OutOfProcessActivatableClassRegistration>::get_ActivatableClassId
OSIntegration::DEH::Internal::ActivatableClassRegistration_Impl<struct OSIntegration::DEH::OutOfProcessActivatableClassRegistration>::get_Attributes
OSIntegration::DEH::Internal::ActivatableClassRegistration_Impl<struct OSIntegration::DEH::OutOfProcessActivatableClassRegistration>::Initialize
OSIntegration::DEH::Internal::AddDwordAttribute
OSIntegration::DEH::Internal::AddStringAttribute
OSIntegration::DEH::Internal::CExtensionRegistration::AddAttribute
OSIntegration::DEH::Internal::CExtensionRegistration::CheckAttributeNameDoesNotCollide
OSIntegration::DEH::Internal::CExtensionRegistration::get_ActivatableClassId
OSIntegration::DEH::Internal::CExtensionRegistration::get_Attributes
OSIntegration::DEH::Internal::CExtensionRegistration::get_ContractId
OSIntegration::DEH::Internal::CExtensionRegistration::get_Description
OSIntegration::DEH::Internal::CExtensionRegistration::get_DisplayName
OSIntegration::DEH::Internal::CExtensionRegistration::get_Icon
OSIntegration::DEH::Internal::CExtensionRegistration::get_Vendor
OSIntegration::DEH::Internal::CExtensionRegistration::PendingWriteToStore
OSIntegration::DEH::Internal::CExtensionRegistration::put_Description
OSIntegration::DEH::Internal::CExtensionRegistration::put_DisplayName
OSIntegration::DEH::Internal::CExtensionRegistration::put_Icon
OSIntegration::DEH::Internal::CExtensionRegistration::put_Vendor
OSIntegration::DEH::Internal::CheckAttributeNameDoesNotCollide
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddDataFormat
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddImplementedCategory
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddMiscStatusAspect
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddStringCustomAttribute
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddStringValueForInprocServer32CompatibilityKey
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddUint32CustomAttribute
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddVerb
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CalculateBinaryCompatibilityPropertiesIfNecessary
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CalculateSurrogateDllPath
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreateClsidKeyTemplateFromSharedProperties
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreateCompatibilityEntries
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreateInprocHandler32Subkey
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreateInprocServer32Subkey
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreatePropertyValueFactoryIfNecessary
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::PendingWriteRegistration
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetAppId
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetApplicationDisplayName
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetAutoConvertTo
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetCalculatedRegistrationProperties
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetConversionReadable
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetConversionReadWritable
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetDefaultFormatName
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetDefaultIcon
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetDisplayName
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetDllPath
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetEnableVirtualizationForInprocHandler
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetEnableVirtualizationForInprocServer
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetExeServerArguments
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetExeServerPath
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetHasMachineScope
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerDllPath_arm
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerDllPath_arm64
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerDllPath_x64
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerDllPath_x86
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerHasMachineScope
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerDllPath_arm
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerDllPath_arm64
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerDllPath_x64
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerDllPath_x86
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerHasMachineScope
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInsertableObject
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetIsSystemInprocServerDll
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetMiscStatusDefault
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetOleDefaultHandler
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetOutofprocClassHasMachineScope
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetProgId
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetServerId
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetShortDisplayName
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetThreadingModel
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetToolboxBitmap32
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetTypeLib
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetTypeLibWithVersion
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetVersionIndependentProgId
OSIntegration::DEH::Internal::ConstructCommandLine
OSIntegration::DEH::Internal::ContractIdActivatableClassIdPairLifetimeTraits::Construct
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::AddActivatableClass
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::CalculateServerPermissions
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::Create
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_AppUserModelId
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_CommandLine
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_ExePath
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_Permissions
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_ServerName
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::PendingWriteToStore
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_AppUserModelId
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_CommandLine
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_ExePath
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_ExplicitPsmActivationType
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_HostRuntimeId
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_IsPackageRelativePath
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_RuntimeBehavior
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_TrustLevel
OSIntegration::DEH::Internal::GetPackagedFileAbsolutePath
OSIntegration::DEH::Internal::GetSystemFileAbsolutePath
OSIntegration::DEH::Internal::GetVirtualizationManagerDllFilename
OSIntegration::DEH::Internal::OutOfProcessActivatableClassRegistration_Impl::Create
OSIntegration::DEH::Internal::OutOfProcessActivatableClassRegistration_Impl::get_ServerRegistration
OSIntegration::DEH::Internal::OutOfProcessActivatableClassRegistration_Impl::PendingWriteToStore
OSIntegration::DEH::MrtResourceHelperForIncomingPackage::Initialize
OSIntegration::DEH::MrtResourceHelperForIncomingPackage::ResolveStringReference
OSIntegration::DEH::MrtResourceHelperForStagedPackage::Initialize
OSIntegration::DEH::MrtResourceHelperForStagedPackage::ResolveStringReference
OSIntegration::DEH::OutOfProcessActivatableClassRegistration::Create
OSIntegration::DEH::OutOfProcessActivatableClassRegistration::Retrieve
OSIntegration::DEH::PackagedComCatalogCollector::CreateExeServerRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateInprocHandlerClassRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateInprocServerClassRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateInterfaceRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateManagedInprocServerClassRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateProgIdRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateProxyStubRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateServiceServerRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateSurrogateServerRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateTreatAsClassRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateTypeLibRegistration
OSIntegration::DEH::PackagedComCatalogCollector::GetHasAnyClasses
OSIntegration::DEH::PackagedComCatalogCollector::PendingRemove
OSIntegration::DEH::PackagedComCatalogCollector::PendingWrite
OSIntegration::DEH::PackagedComCatalogCollector::PendingWriteForEachRegistration
OSIntegration::DEH::PackagedComCatalogCollector::RuntimeClassInitialize
OSIntegration::DEH::PackagedComCatalogCollector::SetIsAdditiveMode
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::GetMaxInstallOrder
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PackageHasAnyRegistrationsOfTypeForScope
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PackageHasAnyTypeLibRegistrationsForScope
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PackageHasComRegistrationsForCurrentScope
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PendingRemove
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PendingWrite
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::SetIncomingPackageInstallOrder
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::SetMaxInstallOrder
OSIntegration::DEH::RegistryCompatibility::CreateKey
OSIntegration::DEH::RegistryCompatibility::DeleteKey
OSIntegration::DEH::RegistryCompatibility::DeleteTree
OSIntegration::DEH::RegistryCompatibility::DeleteValue
OSIntegration::DEH::RegistryCompatibility::Details::MultiString::MultiString
OSIntegration::DEH::RegistryCompatibility::Details::ToCommonBaseImpl<class OSIntegration::DEH::RegistryCompatibility::ValueData,class OSIntegration::DEH::RegistryCompatibility::Details::VariantWithCommonBase<class OSIntegration::DEH::RegistryCompatibility::ValueData,class OSIntegration::DEH::RegistryCompatibility::RegBinaryValueData,class OSIntegration::DEH::RegistryCompatibility::Details::IntegralTypeValueData<4,unsigned int>,class OSIntegration::DEH::RegistryCompatibility::Details::StringTypeValueData<2>,class OSIntegration::DEH::RegistryCompatibility::RegMultiSzValueData,class OSIntegration::DEH::RegistryCompatibility::Details::IntegralTypeValueData<11,unsigned __int64>,class OSIntegration::DEH::RegistryCompatibility::Details::StringTypeValueData<1>,class OSIntegration::DEH::RegistryCompatibility::GenericValueData> >::ToCommonBase
OSIntegration::DEH::RegistryCompatibility::EntryTree::AddEntry
OSIntegration::DEH::RegistryCompatibility::EntryTree::ExtractEntry
OSIntegration::DEH::RegistryCompatibility::EntryTree::MakeFromKeyContent
OSIntegration::DEH::RegistryCompatibility::GenericValueData::GenericValueData
OSIntegration::DEH::RegistryCompatibility::GetKeyName
OSIntegration::DEH::RegistryCompatibility::GetTokenUserStringSid
OSIntegration::DEH::RegistryCompatibility::IsKeyEmpty
OSIntegration::DEH::RegistryCompatibility::Key::AddOrMergeSubkey
OSIntegration::DEH::RegistryCompatibility::Key::AddSubkey
OSIntegration::DEH::RegistryCompatibility::Key::ExtractSubkey
OSIntegration::DEH::RegistryCompatibility::Key::ExtractValue
OSIntegration::DEH::RegistryCompatibility::Key::GetOrCreateSubkey
OSIntegration::DEH::RegistryCompatibility::KeyPath::KeyPath
OSIntegration::DEH::RegistryCompatibility::MakeValueData
OSIntegration::DEH::RegistryCompatibility::Name<0,16383,1>::Name
OSIntegration::DEH::RegistryCompatibility::Name<1,256,0>::Name
OSIntegration::DEH::RegistryCompatibility::OpenKey
OSIntegration::DEH::RegistryCompatibility::ReadKeyContentWithIgnoredValueName
OSIntegration::DEH::RegistryCompatibility::ReadKeyValuesWithIgnoredValueName
OSIntegration::DEH::RegistryCompatibility::ResolveResources
OSIntegration::DEH::RegistryCompatibility::TryOpenKey
OSIntegration::DEH::RegistryCompatibility::TryReadValue
OSIntegration::DEH::RegistryCompatibility::VisitKeys
OSIntegration::DEH::RegistryCompatibility::WriteValue
OSIntegration::DEH::RegistryCompatibilityCollector::AddKey
OSIntegration::DEH::RegistryCompatibilityCollector::GetEntryTree
OSIntegration::DEH::RegistryCompatibilityCollector::PendingRemove
OSIntegration::DEH::RegistryCompatibilityCollector::PendingWrite
OSIntegration::DEH::RegistryCompatibilityCollector::SetIsAdditiveMode
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::CalculateLastWriterEntries
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::GetPathsAndEntriesForChangedPackages
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::GetRelevantEntriesFromRegisteredPackagesWithTimestamps
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::GetUserSid
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::PendingRemove
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::PendingWrite
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::PendingWriteChanges
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::PendingWriteChanges::<lambda_c23cade4e9199fbe1e22663acc05e50e>::operator ()
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::PendingWriteChanges::<lambda_ef8daf212004ce5bf57bd51bdaac63b5>::operator ()
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::RemoveKeysForOutgoingPackage
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::WriteKeysForLastWriterEntries
OSIntegration::DEH::RegistryCompatibilityManager::AddOrReplaceActualKey
OSIntegration::DEH::RegistryCompatibilityManager::CommitChanges
OSIntegration::DEH::RegistryCompatibilityManager::FixAncestors
OSIntegration::DEH::RegistryCompatibilityManager::GetEntryPathAndPackageNamePairsRelevantToPath
OSIntegration::DEH::RegistryCompatibilityManager::GetKeyNameForScope
OSIntegration::DEH::RegistryCompatibilityManager::GetPathOfNearestExistingAncestorBeforeCommit
OSIntegration::DEH::RegistryCompatibilityManager::IsKnownInvalidDeletePath
OSIntegration::DEH::RegistryCompatibilityManager::OpenRootKey
OSIntegration::DEH::RegistryCompatibilityManager::ReadPackageEntry
OSIntegration::DEH::RegistryCompatibilityManager::RemoveActualKey
OSIntegration::DEH::RegistryCompatibilityManager::RemovePackageEntries
OSIntegration::DEH::RegistryCompatibilityManager::RevertChanges
OSIntegration::DEH::RegistryCompatibilityManager::TryReadPackageEntries
OSIntegration::DEH::RegistryCompatibilityManager::WriteKeyAction::Commit
OSIntegration::DEH::RegistryCompatibilityManager::WriteKeyAction::DeleteExistingKey
OSIntegration::DEH::RegistryCompatibilityManager::WriteKeyAction::DeleteTreeWithExtremePrejudice
OSIntegration::DEH::RegistryCompatibilityManager::WriteKeyAction::GetPredefinedKeyForScope
OSIntegration::DEH::RegistryCompatibilityManager::WriteKeyAction::Revert
OSIntegration::DEH::RegistryCompatibilityManager::WriteKeyAction::WriteContent
OSIntegration::DEH::RegistryCompatibilityManager::WritePackageEntries
OSIntegration::DEH::RegistryCompatibilityManager::WriteValueAction::Commit
OSIntegration::DEH::RegistryCompatibilityManager::WriteValueAction::DeleteValueNoThrow
OSIntegration::DEH::RegistryCompatibilityManager::WriteValueAction::Revert
OSIntegration::DEH::TryGetPackageAndPackageFamilyPrimaryKeysForPackage
OSIntegration::DEH::TryGetPackageFamilySystemRegisterTimestampForPackage
OSIntegration::DEH::TryGetPackageFamilyUserRegisterTimestampForPackage
OSPFIGP
OSVersionAppModel
OSVersionBuild
OSVersionMajor
OSVersionMinor
OSVersionRevision
oT$@f
OtherPackageName
OutgoingPackageName
OutOfProcessActivatableClassRegistration_Impl::Create(activatableClassId, serverRegistration.Get(), &classRegistration)
OutputDebugStringW
oversubscribed distance tree
oversubscribed dynamic bit lengths tree
oversubscribed literal/length tree
Overwritten
oXL9oPt4A
p AWH
p WATAUAVAWH
p WAVAWH
p WvA>
p![XT?
P&8(0*<,2.
p(Q6k7(
p(X|S
p*X3A
P:\WindowsApps
p:_0#
p@Q4K
p8V~{/q
PA^_]
PA^_^
pA^_^
PA^_^
pA^_^[]
pA^_^][
PA^A\_^]
pA^A]_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
PA_A^A\_^
PA_A^A\_^[]
PA_A^A]A\_^[
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
Package
package
Package
package
Package
Package rows w/no PackageUser references
Package.PackageType=Bundle and Package.SourceBundle=BundlePackage but no other Package rows from Bundle
Package::TryGetByPackageFullName(database, packageFullName, package, packageFound)
PackageAppInstaller
PackageArchitecture
PACKAGED_COM_DEH_KEYWORD
packageDacl
packagedClassicApp
PackagedCom_GetMaxInstallOrder
PackagedCom_SetIncomingPackageInstallOrder
PackagedCom_SetMaxInstallOrder
packagedComContext->GetComClassEntriesForPackage(packageMoniker.Get(), &classesHandle)
packagedComContext->ReadComClassEntry(packageMoniker.Get(), clsid, properties)
packagedComContext->TryGetComClassIdForPackageByIndex(classesHandle, classIndex, &hasEntryAtIndex, &clsid)
PackageDependency
PackageDisplayName
PackagedMail
PackagedServiceDEHCommitRequestActivity
PackagedServiceDEHEvaluateRequestActivity
PackagedServiceDEHPostOsUpgradeEvaluateRequestActivity
PackagedServiceDEHRemoveRequestActivity
PackagedServiceDEHRevertRequestActivity
PackagedServices_DiffentVersionInstallWhenServiceExists
PackageExtension
PackageExternalLocation
PackageFamily
PackageFamily::TryGetByPackageFamilyName(database, packageFamilyName, packageFamily, packageFamilyFound)
PackageFamilyName
PackageFamilyNameFromFullName
PackageFamilyNameFromFullName(packageFullName, &packageFamilyNameLength, packageFamilyName)
PackageFamilyNameOne
PackageFamilyNameTwo
PackageFamilyPolicy
PackageFamilyUser
PackageFamilyUser::TryGetByUserAndPackageFamily(*machineDatabase, user.Get_PrimaryKey(), packageFamilyKey, packageFamilyUser, packageFamilyUserFound)
PackageFamilyUserResource
PackageFlags
PackageFlags2
PackageFolder
PackageFolderOld
PackageFullName
PackageFullname
PackageFullName
PackageFullname
PackageFullName
PackageFullname
PackageFullName
PackageFullname
PackageFullName
PackageFullname
PackageFullName
PackageFullname
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
packageFullName
PackageFullName
PackageFullName: %ws
PackageFullNames
PackageId
packageId
PackageIdentity
PackageIndex
PackageKey
PackageLocation
PackageMachineStatus
PackageMoniker
packageMoniker
PackageMoniker
PackageMoniker2
PackageMoniker3
PackageMonikerNew
PackageMonikerOld
PackageName
PackageNameAndPublisherIdFromFamilyName
PackageNameOne
PackageNameTwo
PackageOrigin
PackagePolicy
PackageProperty
PackageRelativeApplicationId
PackageRelativeExecutable
PackageRepository.edb
PackageRepositoryAllocate
PackageRepositoryFree
PackageRepositoryRoot
PackageRootFolder
PackageRow was not initialized with lazy init info. Cannot query external location info.
Packages
PackageSID
PackageSid
PackageSidFromFamilyName
packageSidString.SetValueFromString(packageSid.GetRawBuffer(nullptr))
PackageSourceUri
PackageStatus
PackagesToBeInstalled
PackageSuperceded
PackageTableRowKey
PackageType
PackageUri
PackageUser
PackageUser rows for Bundle but no other Package(s) sourced from the bundle
PackageUser rows for Inbox packages cannot be DeploymentState=Paused
PackageUser.User has Package(s) with Package.Type!=Bundle but not Package.Type=Bundle
PackageUser::TryGetByUserAndPackage(*machineDatabase, user.Get_PrimaryKey(), packageKey, packageUser, packageUserFound)
PackageUserStatus
PackageVersion
PackageVersion2
packageWriteRedirectionCompatibilityShim
PageCacheOverflow
PageCacheOverflowPeak
PageCachePeak
PageCacheUsed
PageCacheUsedPeak
pair->get_Value(&spRegistration)
Parameters
PartA_PrivTags
Partition
Partition %d not supported by GC()
PathAllocCanonicalize
PathAllocCombine
PathAllocCombine(incomingPackage->GetPackageRoot(), relativePath, PATHCCH_ALLOW_LONG_PATHS, &absolutePath)
PathAllocCombine(systemDirectoryCharacters, relativePath, PATHCCH_ALLOW_LONG_PATHS, &absolutePath)
PathCchAppend
PathCchCombine
PathCchRemoveBackslash
PathCchRemoveFileSpec
PathCchSkipRoot
PathFileExistsW
PathFindExtensionW
PathFindFileNameW
PathIsPrefixW
PathName
PathOne
PathTwo
pAXxi
pBR:&
pbTT$
pC^4_
pcU24.0
PeekMessageW
PendingCopyFiles(packageMoniker, packageRoot.Get(), incomingPackage->GetSignatureOrigin(), fileManager.Get())
PendingWriteChanges(registryCompatibilityManager.get(), incomingPackage->GetMachineDatabase(), incomingPackage, outgoingPackageContext.PackageFullName)
PendingWriteChanges(registryCompatibilityManager.get(), outgoingPackage->GetMachineDatabase(), nullptr , outgoingPackageContext.PackageFullName)
PendingWriteExeSevers(incomingPackage, registrationStoreContext.Get())
PendingWriteForEachRegistration( _classes.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _interfaces.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _progIds.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _proxyStubs.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _servers.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _treatAsClasses.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _typeLibs.Get(), incomingPackage, resourcesManager)
PendingWriteInProcActivatableClasses(packageMoniker, registrationStoreContext.Get())
PendingWriteInterfaces(packageMoniker, registrationStoreContext.Get())
PendingWriteOutOfProcActivatableClasses(packageMoniker, registrationStoreContext.Get())
PendingWriteProxyStubs(packageMoniker, registrationStoreContext.Get())
PerceivedType
Percentage
PeriodicUpdateRecurrence
PerPackageEntries
PerPackageFamilyEntries
PerPackageIndexedDBEnabled
PERSIST
PerSystemEntries
pFileManager->CopyFileToManagedDirectory( packageMoniker, packageRoot, signatureOrigin, ManagedDirectory::PackagedComProgramData, _properties.DllPath.Value.Get())
pFileManager->CopyFileToManagedDirectory( packageMoniker, packageRoot, signatureOrigin, ManagedDirectory::PackagedComProgramData, GetDllPathForArchitecture(architecture).Get())
PhaseError
PHONECALLORIGIN_DEH_KEYWORD
pHT^I
pHW>8
PIAHelper
piffile
PinToStartMenu
pIterable->First(&spIterator)
piYZX
piZR46
pjSt=
pKY|[
PlatformPolicyBlockReasonMap
Policy.
Policy.Aggressive.ConnectionMaxAge
Policy.Aggressive.ConnectionMaxCount
Policy.Aggressive.ConnectionMinCount
Policy.Aggressive.GCInterval
Policy.Aggressive.StatementMaxAge
Policy.Aggressive.StatementMaxCount
Policy.Aggressive.StatementMinCount
Policy.Normal.ConnectionMaxAge
Policy.Normal.ConnectionMaxCount
Policy.Normal.ConnectionMinCount
Policy.Normal.GCInterval
Policy.Normal.StatementMaxAge
Policy.Normal.StatementMaxCount
Policy.Normal.StatementMinCount
PolicyReason
PortName
PostCheckAllCascadingInMachinePartition
PostDowngradeVersion
PostFixAllCascadingInMachinePartition
PRAGMA %s;
PRAGMA %s=%I64d;
PRAGMA %s=%s;
PRAGMA optimize;
PreDowngradeVersion
PREINSTALLED_CONFIG_TASK_DEH_KEYWORD
PreRegisterOptionsBitMap
PreviewDetails
PreviewTitle
PrimaryTile
PrimaryTileUser
PrimaryTileUserChangelog
print
PrinterName
PriPaths
private
Problem
ProcessCount
ProcessId
processId
ProcessId
ProcessIdToSessionId
ProcessIndex
ProcessInformation
ProcessingPackageFullName
ProcessingSQL
ProductName
ProductVersion
profapi.dll
Profile
ProgID
ProgId
progId
progIdString.Set(progId)
Program Files\ModifiableWindowsApps
Programmable
Programs
Property
property.Present
property.Present && (property.Value != value)
PropertyId
propertyValueFactory->CreateString(value, &propValue)
propertyValueFactory->CreateUInt32(value, &propValue)
PROPSYS.dll
PropVariantClear
PropVariantToStringVectorAlloc
Protocol
PROTOCOL_DEH_KEYWORD
Provider
provider
ProviderDisplayName
ProviderGuid
ProviderName
ProvisionedPackage
ProvisionedPackageDeleted
ProvisionedPackageExclude
ProxyStubClsid32
pRU>'
PRVAd
pRXt8
PSCreateMemoryPropertyStore
psVV%
pSX0@
public
PublicKey
Publisher
PublisherCacheFolder
PublisherName
publishing
Publishing
punct
pxZ0!
py\2F
pz\:(
q#Qz&
q)P47
q:_:C
q:_0#
q@^PZ
q@Q4K
q[]T?
q[Z~v
q`W|1/
q0R^G'
q1]Rz?L
q8V~{/q
qB^Xh
qbTT$
qBZVZ
qC\r4
qC^4_
qcU24.0
qcXV/
QH9_Hu
qIRtK
qiYVH
qiZR46
qjSt=
qKPV!
qP[\=
qqTt>
qrRPf/
qrTzz
qrU8q
qRXt8
qsQ~K6
qSY:w
QueryActiveSession
QueryApplicationCapabilities
QueryFullProcessImageNameW
queryPerformanceCounter
QueryPerformanceCounter
QueryUnbiasedInterruptTime
QueryUserToken
QueueLength
QuickTip
qy\2F
qZ\tW
QZ^&A
R$fA;Z*
r.D8k t#H
R]^F=
r}6Ic
RaiseException
RaiseFailFastException
Readable
ReadFile
readOnly
ReadSetting: Name=%ls
ReadWritable
Reason
reason
Reason
RedirectMrtResources
REG_BINARY
REG_DWORD
REG_EXPAND_SZ
REG_MULTI_SZ
REG_QWORD
REG_SZ
RegCloseKey
RegCopyTreeW
RegCreateKeyEx(ancestor, subkeyPath, 0, nullptr, 0, samDesired | KEY_WOW64_64KEY, nullptr, &handle, disposition)
RegCreateKeyExW
RegDeleteKeyExW
RegDeleteKeyW
RegDeleteTreeW
RegDeleteValueW
RegEnumKeyExW
regfile
RegGetKeySecurity
RegGetValueW
RegisteredApplications
registration
registration->_properties.Server.Value.Set(exeServer->get_ServerName().Get())
registration->_serverName.Set(serverName.Get())
registration->Initialize(activatableClassId)
registrationScope->SetHasMachineScope(true)
registrationStore->CheckComPackageExists(packageFullName, &packageHasComRegistrations)
registrationStore->CreateComClassEntry(packageMoniker, _id, _properties)
registrationStore->CreateComInterfaceEntry(packageMoniker, _id, _properties)
registrationStore->CreateComPackageInstallOrderEntry( packageFullName, IsUserRegister(), m_incomingPackageProperties)
registrationStore->CreateComPackageInstallOrderEntry( Wrappers::HStringReference(Internal::MaxInstallOrder).Get(), IsUserRegister(), m_maxInstallOrderProperties)
registrationStore->CreateComProgIdEntry(packageMoniker, _id.Get(), _properties)
registrationStore->CreateComProxyStubEntry(packageMoniker, _id, _properties)
registrationStore->CreateComServerEntry(packageMoniker, _id, _properties)
registrationStore->CreateComTreatAsClassEntry(packageMoniker, _id, _properties)
registrationStore->CreateComTypeLibEntry( packageMoniker, _id, _versionNumber.Get(), _properties)
registrationStore->GetComTypeLib(packageFullName, typeLibId, &typeLibHandle)
registrationStore->GetComTypeLibsForPackage(packageFullName, &typeLibsHandle)
registrationStore->ReadComTypeLibEntry(packageFullName, typeLibId, versionId.get(), properties)
registrationStore->TryGetComPackageInstallOrder( Wrappers::HStringReference(Internal::MaxInstallOrder).Get(), IsUserRegister(), maxInstallOrder)
registrationStore->TryGetComTypeLibIdForPackageByIndex(typeLibsHandle, typeLibIndex, &hasTypeLibAtIndex, &typeLibId)
registrationStore->TryGetComTypeLibVersionIdByIndex(typeLibHandle, versionIndex, &hasVersionAtIndex, &versionId)
registrationStoreContext.query_to(&packagedComContext)
registrationStoreContext->CreateActivatableClassEntry( packageMoniker, _activatableClassId.Get(), _properties)
registrationStoreContext->CreateInterfaceEntry( packageMoniker.Get(), iid.Get(), *static_cast<InterfaceRegistration_Impl*>(itf.Get()))
registrationStoreContext->CreatePackage(packageMoniker.Get(), packageIsFramework)
registrationStoreContext->CreateProxyStubEntry( packageMoniker.Get(), clsid.Get(), *static_cast<ProxyStubRegistration_Impl*>(proxyStub.Get()))
registrationStoreContext->CreateServerEntry( packageMoniker.Get(), _serverName.Get(), _properties)
registrationStoreContext->RemoveActivationEntriesForPackage( packageMoniker.Get(), deploymentOperation, outgoingPackage->GetIsFramework())
registryCompatibilityCollector.query_to(&registryCompatibilityCollectorTestHooks)
registryCompatibilityCollector->AddKey( (_hasMachineScope ? Scope::Machine : Scope::User), Internal::GetAppIdKeyPath(_appId.Value), std::move(appIdKey))
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetClsidKeyPathForArchitecture(_id, architecture), Key(clsidKey))
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetClsidKeyPathForArchitecture(_id, architecture), std::move(clsidKey))
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetInterfaceKeyPathForArchitecture(_id, architecture), Key(interfaceKey))
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetProgIdKeyPath(_id.GetRawBuffer(nullptr)), std::move(progIdKey))
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetTypeLibVersionKeyPath(_id, _versionNumber.GetRawBuffer(nullptr)), std::move(typeLibVersionKey))
registryCompatibilityCollector->AddKey( (isMachineScope ? Scope::Machine : Scope::User), GetClsidKeyPathForArchitecture(_id, architecture), std::move(clsidKey))
registryCompatibilityCollectorTestHooks->SetIsAdditiveMode(incomingPackage)
registryCompatibilityManager->AddOrReplaceActualKey(GetScope(), pathAndPackageNamePair.first, pathAndPackageNamePair.second.c_str(), std::move(keyContent))
registryCompatibilityManager->GetEntryPathAndPackageNamePairsRelevantToPath(GetScope(), pathToEvaluate, pairsRelevantToPath)
registryCompatibilityManager->ReadPackageEntry(packageName.c_str(), GetScope(), path, &mrtManager, key)
registryCompatibilityManager->RemoveActualKey(GetScope(), outgoingPackageEntryPath)
registryCompatibilityManager->RemovePackageEntries(outgoingPackage->GetPackageMoniker(), deploymentOperation)
registryCompatibilityManager->TryReadPackageEntries(incomingPackage->GetPackageMoniker(), GetScope(), &resourceManager, incomingPackageEntries)
registryCompatibilityManager->TryReadPackageEntries(incomingPackage->GetPackageMoniker(), Scope::Machine, nullptr , m_machineEntries)
registryCompatibilityManager->TryReadPackageEntries(incomingPackage->GetPackageMoniker(), Scope::User, nullptr , m_userEntries)
registryCompatibilityManager->TryReadPackageEntries(outgoingPackageFullName.value().c_str(), GetScope(), nullptr , outgoingPackageEntries)
registryCompatibilityManager->WritePackageEntries(incomingPackage->GetPackageMoniker(), std::move(m_machineEntries), std::move(m_userEntries))
RegistryKeyName
RegistryMapFactory< IExeServerActivatableClassRegistration * >::RegistryMap::Make(&_outOfProcessActivatableClasses)
RegistryMapFactory< IExeServerRegistration * >::RegistryMap::Make(&_exeServers)
RegistryMapFactory<ComProgIdRegistration*>::RegistryMap::Make(&_progIds)
RegistryMapFactory<ComTypeLibRegistration*>::RegistryMap::Make(&_typeLibs)
RegistryMapFactory<IInspectable*>::RegistryMap::Make(&_customAttributes)
RegistryMapFactory<IInspectable*>::RegistryMap::Make(&_implementedCategories)
RegistryMapFactory<IInspectable*>::RegistryMap::Make(&_miscStatusAspects)
RegistryMapFactory<IInspectable*>::RegistryMap::Make(&_verbs)
RegistrySubKeyName
RegOpenCurrentUser
RegOpenCurrentUser(samDesired | KEY_WOW64_64KEY, &handle)
RegOpenKeyEx(ancestor, subkeyPath, 0, samDesired | KEY_WOW64_64KEY, &handle)
RegOpenKeyEx(HKEY_LOCAL_MACHINE, L"", 0, samDesired | KEY_WOW64_64KEY, &handle)
RegOpenKeyExW
RegQueryInfoKey(handle, nullptr, nullptr, nullptr, &subkeyCount, nullptr, nullptr, &valueCount, nullptr, nullptr, nullptr, nullptr)
RegQueryInfoKeyW
RegQueryValueExW
RegSetKeyValueW
RegSetValueExW
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
ReleaseSRWLockShared
RemotePortMax
RemotePortMin
remove
remove_all
RemoveContextMenuShellExRegistry failed for outgoing package
RemoveDirectoryW
RemoveLookaside
RemoveLookasidePackage
RemovePIIfromPath
RemovePort
RepairGhostMinimumAgeForDeletion
replaced
Repository initialize
Repository.SetOptions.SetCacheSize
RequestCount
RequestedVersionAppModel
RequestedVersionBuild
RequestedVersionMajor
RequestedVersionMinor
RequestedVersionRevision
Required configuration data not found: %ws
reset
ResiliencyCurrentState
ResiliencyFilePath
ResolveDelayLoadedAPI
Resource
ResourceFile
ResourceGroup
ResourceId
resourceManager.Initialize(incomingPackage)
ResourceName
resourceReferenceHandler->GetStringForContext(nullptr , stringOrResourceReference, &allocatedResult, &found)
resourceReferenceHandler->IsFullyQualifiedResourceReference(stringOrResourceReference, &isReference)
Resources
resources.pri
resourcesManager->GetFileManager(&fileManager)
resourcesManager->GetRegistrationStoreContext(IID_PPV_ARGS(&extensionCatalogContext))
resourcesManager->GetRegistrationStoreContext(IID_PPV_ARGS(&registrationStore))
resourcesManager->GetRegistrationStoreContext(IID_PPV_ARGS(&registrationStoreContext))
resourcesManager->GetRegistrationStoreContext(IID_PPV_ARGS(&spRegistrationStore))
resourcesManager->GetRegistryCompatibilityManager(&registryCompatibilityManager)
RESTRICTED_LAUNCH_DEH_KEYWORD
result
Result
result
Result
Retention
retention
returnCode
ReturnHr
ReturnNt
ReturnResults
ReturnVal
ReturnValue
RevertToSelf
rHfD97w
Rich Text Format
rlH9K8vfH
RoActivateInstance
RoGetActivationFactory
RoGetRegistrationStoreContext(Windows::Foundation::RegistrationScope_PerUser, nullptr, 0, IID_PPV_ARGS(&registrationStoreContext))
ROLLBACK /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
RollbackDetailedMessageInfo
RollbackErrorFileInfo
RoOriginateError
RoOriginateErrorW
RoTransformError
RPCRT4.dll
RpcStringFreeW
RSDSV
RtlAcquireSRWLockExclusive
RtlAcquireSRWLockShared
RtlAddAce
RtlAllocateAndInitializeSid
RtlAllocateHeap
RtlCaptureContext
RtlCaptureStackBackTrace
RtlCompareUnicodeString
RtlConvertSidToUnicodeString
RtlCopySid
RtlDeleteCriticalSection
RtlDeleteElementGenericTableAvl
RtlDeriveCapabilitySidsFromName
RtlDetermineDosPathNameType_U
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlDosPathNameToNtPathName_U
RtlDosPathNameToNtPathName_U_WithStatus
RtlDosPathNameToRelativeNtPathName_U_WithStatus
RtlDowncaseUnicodeString
RtlEnterCriticalSection
RtlEnumerateGenericTableWithoutSplayingAvl
RtlEqualUnicodeString
RtlExpandEnvironmentStrings_U
RtlFreeHeap
RtlFreeSid
RtlFreeUnicodeString
RtlGetDeviceFamilyInfoEnum
RtlImpersonateSelf
RtlInitializeCriticalSection
RtlInitializeGenericTableAvl
RtlInitUnicodeString
RtlInitUnicodeStringEx
RtlInsertElementGenericTableAvl
RtlIsMultiSessionSku
RtlIsMultiUsersInSessionSku
RtlIsStateSeparationEnabled
RtlLeaveCriticalSection
RtlLengthSid
RtlLookupElementGenericTableAvl
RtlLookupFunctionEntry
RtlNotifyFeatureUsage
RtlNtPathNameToDosPathName
RtlNtStatusToDosError
RtlNtStatusToDosErrorNoTeb
RtlpEnsureBufferSize
RtlPublishWnfStateData
RtlQueryFeatureConfiguration
RtlRegisterFeatureConfigurationChangeNotification
RtlReleaseRelativeName
RtlReleaseSRWLockExclusive
RtlReleaseSRWLockShared
RtlReportException
RtlUnregisterFeatureConfigurationChangeNotification
RtlUpcaseUnicodeChar
RtlValidSid
RtlVirtualUnwind
RtlWow64IsWowGuestMachineSupported
RunAs
RunAsSystem
rundll32.exe AppXDeploymentExtensions.OneCore.dll,ShellRefresh
runningAppsList
RUNTIME_DEH_KEYWORD
RuntimeExceptionHelperModule
RuntimeType
RuntimeVersion
s WAVAWH
S:(ML;;NX;;;LW)
S0H9j
S-1-15-3-1024-1086922356-207614091-3724853071-841836187-4018695103-34218837-3164163255-155871754
S-1-5-11
S-1-5-80-1949724575-2387902436-65106593-1201171665-3967308604
S-1-5-80-410965207-2550896871-1717734767-2321332215-3755966139
sA8v tPI
SaferCloseLevel
SaferComputeTokenFromLevel
SaferCreateLevel
SafeSearchMode
SCCDFreeParsedElements
SCCDParseFile
SCCDValidateAppxFile
SCCDValidateCatalogFile
SchemaUsed
Scope
scope != GetScope()
ScratchOverflow
ScratchOverflowPeak
ScratchSizePeak
ScratchUsed
ScratchUsedPeak
scrfile
scriptletfile
SEARCHINDEXER_EXTENSION_KEYWORD
SearchString
SecondaryTile
SecondaryTileUser
SecondaryTileUser.SecondaryTile->SecondaryTile.rowid
SecondaryTileUserChangelog
Section
securityDescriptorString.Concat(packageDaclString, &securityDescriptorString)
securityDescriptorString.Concat(saclString, &securityDescriptorString)
securityDescriptorString.Initialize(defaultAAAPermissionsBase)
securityDescriptorString.Initialize(permissions)
seD8oPt
SELECT _ActivationID, _Revision, ActivationKey, Flags, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, _Dictionary FROM Activation WHERE ActivationKey IS ?;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Category=? AND KeyString IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Category=? AND KeyString IS ? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND RegistrationInformation=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND RegistrationInformation=? AND _WorkId=0;
SELECT _AppxManifestID, _Revision, _WorkId, Package, uncompress(Xml), _Dictionary FROM AppxManifest WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _AppxManifestID, _Revision, _WorkId, Package, uncompress(Xml), _Dictionary FROM AppxManifest WHERE Package=? AND _WorkId=0;
SELECT _CustomInstallWorkID, _Revision, _WorkId, User, Package, Name, "Index", Flags, Status, File, Arguments, _Dictionary FROM CustomInstallWork WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _CustomInstallWorkID, _Revision, _WorkId, User, Package, Name, "Index", Flags, Status, File, Arguments, _Dictionary FROM CustomInstallWork WHERE User=? AND Package=? AND _WorkId=0;
SELECT _CustomInstallWorkID, _Revision, _WorkId, User, Package, Name, "Index", Flags, Status, File, Arguments, _Dictionary FROM CustomInstallWork WHERE User=? AND Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT _CustomInstallWorkID, _Revision, _WorkId, User, Package, Name, "Index", Flags, Status, File, Arguments, _Dictionary FROM CustomInstallWork WHERE User=? AND Package=? AND Name=? AND _WorkId=0;
SELECT _DependencyGraphID FROM DependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
SELECT _DependencyGraphID FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND "User"=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND "User"=?3 AND _WorkId=?4)
SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=?3)
SELECT _DependencyGraphID, _Revision, _ShadowId FROM DependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
SELECT _DependencyGraphID, _Revision, _ShadowId, _IsMarkedForDeletion FROM DependencyGraph WHERE User=? AND DependentPackage=? AND SupplierPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=?1) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependencyType=4 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependencyType=4 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependencyType=4 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 ORDER BY "Index";
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependencyType=4 AND SupplierPackage=?2 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 ORDER BY "Index";
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC, "Index";
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND _WorkId=0 ORDER BY "Index";
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Category=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Category=? AND _WorkId=0;
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Package=? AND Category=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Package=? AND Category=? AND _WorkId=0;
SELECT _PackageExternalLocationID, _Revision, _WorkId, User, Package, Path, _Dictionary FROM PackageExternalLocation WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageExternalLocationID, _Revision, _WorkId, User, Package, Path, _Dictionary FROM PackageExternalLocation WHERE User=? AND Package=? AND _WorkId=0;
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE Name=? AND PublisherId=?;
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE PackageFamilyName=?;
SELECT _PackageFamilyUserID, _Revision, PackageFamily, User, WhenInstalled, _Dictionary FROM PackageFamilyUser WHERE User=? AND PackageFamily=?;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=?
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFullName=? AND _WorkId=0;
SELECT _PackageIdentityID, _Revision, PackageFamily, PackageFullName, _Dictionary FROM PackageIdentity WHERE PackageFullName=?;
SELECT _PackageLocationID, _Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary FROM PackageLocation WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageLocationID, _Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary FROM PackageLocation WHERE Package=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE AppDataVolume=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE AppDataVolume=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE Package=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0;
SELECT _Revision, _WorkId, Id, Name, User, Status, _Dictionary FROM SharedPackageContainer WHERE _SharedPackageContainerID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, Id, Name, User, Status, _Dictionary FROM SharedPackageContainer WHERE _SharedPackageContainerID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE _PackageExtensionID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE _PackageExtensionID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary FROM TargetDeviceFamily WHERE _TargetDeviceFamilyID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary FROM TargetDeviceFamily WHERE _TargetDeviceFamilyID=? AND _WorkId=0;
SELECT _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=? AND _WorkId=0;
SELECT _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE _PackageFamilyID=?;
SELECT _Revision, UserSid, _Dictionary FROM User WHERE _UserID=?;
SELECT _SharedPackageContainerPackageFamilyID, _Revision, _WorkId, SharedPackageContainer, PackageFamilyName, "Index", _Dictionary FROM SharedPackageContainerPackageFamily WHERE (_WorkId=0 OR _WorkId=?);
SELECT _SharedPackageContainerPackageFamilyID, _Revision, _WorkId, SharedPackageContainer, PackageFamilyName, "Index", _Dictionary FROM SharedPackageContainerPackageFamily WHERE _WorkId=0;
SELECT _UserID FROM User WHERE UserSid=?;
SELECT _UserID, _Revision, UserSid, _Dictionary FROM User WHERE UserSid=?;
SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=?3)
SELECT _WowDependencyGraphID, _Revision, _ShadowId FROM WowDependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
SELECT _WowDependencyGraphID, _Revision, _ShadowId, _IsMarkedForDeletion FROM WowDependencyGraph WHERE User=? AND DependentPackage=? AND SupplierPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=?1) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE SupplierPackage IN (SELECT DISTINCT SupplierPackage FROM WowDependencyGraph WHERE User=? AND DependentPackage=? AND DependencyType=?) and _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT COUNT(*) FROM AppxExtension WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM AppxExtension WHERE _WorkId=0;
SELECT COUNT(*) FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=?1) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM DependencyGraph WHERE _WorkId=0;
SELECT COUNT(*) FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT COUNT(*) FROM Package WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM Package WHERE _WorkId=0;
SELECT COUNT(*) FROM PackageUser WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM PackageUser WHERE _WorkId=0;
SELECT COUNT(*) FROM PackageUser WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM PackageUser WHERE Package=? AND _WorkId=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=?1) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE _WorkId=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT COUNT(*), GROUP_CONCAT(pu.rowid) FROM PackageUser AS pu INNER JOIN Package AS p on p._PackageID=pu.Package WHERE p.PackageOrigin=2 AND pu.DeploymentState=6;
SELECT COUNT(*), GROUP_CONCAT(pus.rowid) FROM PackageUserStatus as pus WHERE pus.PackageIdentity NOT IN ( SELECT _PackageIdentityID FROM PackageIdentity AS pi INNER JOIN Package AS p ON pi.PackageFullName=p.PackageFullName);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExecutionAlias WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExecutionAliasUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExecutionAliasUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExtension WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExtensionHost WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppInstaller WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppInstallerUri WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Application WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Application WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationBackgroundTask WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationContentUriRule WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationExtension WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationProperty WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppService WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppUriHandler WHERE (AppUriHandlerGroup>0) AND (AppUriHandlerGroup NOT IN (SELECT _AppUriHandlerGroupID FROM AppUriHandlerGroup));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppUriHandler WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppUriHandlerGroup WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppxExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppxExtension WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppxManifest WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AutoUpdatePackage WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AutoUpdatePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Bundle WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM BundlePackage WHERE (Bundle>0) AND (Bundle NOT IN (SELECT _BundleID FROM Bundle));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM BundleResource WHERE (BundlePackage>0) AND (BundlePackage NOT IN (SELECT _BundlePackageID FROM BundlePackage));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ConnectedSetPackageFamily WHERE (ConnectedSet>0) AND (ConnectedSet NOT IN (SELECT _ConnectedSetID FROM ConnectedSet));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ConnectedSetPackageFamily WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ContentGroup WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ContentGroupFile WHERE (ContentGroup>0) AND (ContentGroup NOT IN (SELECT _ContentGroupID FROM ContentGroup));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ContentGroupFile WHERE (File>0) AND (File NOT IN (SELECT _FileID FROM File));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM CustomInstallWork WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM CustomInstallWork WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DefaultTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Dependency WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DeploymentHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DeploymentHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DynamicAppUriHandler WHERE (DynamicAppUriHandlerGroup>0) AND (DynamicAppUriHandlerGroup NOT IN (SELECT _DynamicAppUriHandlerGroupID FROM DynamicAppUriHandlerGroup));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DynamicAppUriHandlerGroup WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DynamicAppUriHandlerGroup WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM EndOfLifePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM File WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM FileTypeAssociation WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM HostRuntime WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtApplication WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtDefaultTile WHERE (DefaultTile>0) AND (DefaultTile NOT IN (SELECT _DefaultTileID FROM DefaultTile));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtSharedPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtUserPri WHERE (MrtSharedPri>0) AND (MrtSharedPri NOT IN (SELECT _MrtSharedPriID FROM MrtSharedPri));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtUserPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtUserPri WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM NamedDependency WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM OptionalBundle WHERE (MainBundle>0) AND (MainBundle NOT IN (SELECT _BundleID FROM Bundle));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM OptionalBundlePackage WHERE (OptionalBundle>0) AND (OptionalBundle NOT IN (SELECT _OptionalBundleID FROM OptionalBundle));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM OptionalBundleResource WHERE (OptionalBundlePackage>0) AND (OptionalBundlePackage NOT IN (SELECT _OptionalBundlePackageID FROM OptionalBundlePackage));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (Enterprise>0) AND (Enterprise NOT IN (SELECT _EnterpriseID FROM Enterprise));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (SourceBundle>0) AND (SourceBundle NOT IN (SELECT _BundleID FROM Bundle));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (TargetDeviceFamily>0) AND (TargetDeviceFamily NOT IN (SELECT _TargetDeviceFamilyID FROM TargetDeviceFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE _PackageID IN (SELECT p_PackageID FROM (SELECT p_PackageID, EXISTS(SELECT 1 FROM BundlePackage AS bp INNER JOIN Package AS p ON bp.Version=p.Version AND bp.Architecture=p.Architecture AND ((bp.ResourceId=p.ResourceId) OR (bp.ResourceId IS NULL AND p.ResourceId IS NULL)) WHERE bp.PackageType=0 AND bp.Bundle=p_SourceBundle AND p.PackageFamily=p_PackageFamily AND bp._WorkId=0 AND p._WorkId=0 LIMIT 1) AS hasPackages FROM (SELECT p._PackageID AS p_PackageID, p.PackageFamily AS p_PackageFamily, p.SourceBundle AS p_SourceBundle FROM Package AS p WHERE p.PackageType & 8 != 0 AND p.SourceBundle <> 0 AND p._WorkId=0)) WHERE hasPackages=0);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE _PackageID NOT IN (SELECT Package FROM PackageUser);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageAppInstaller WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageAppInstaller WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageDependency WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageDependency WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExternalLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExternalLocation WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyPolicy WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyPolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyUser WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyUserResource WHERE (PackageFamilyUser>0) AND (PackageFamilyUser NOT IN (SELECT _PackageFamilyUserID FROM PackageFamilyUser));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageIdentity WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageMachineStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackagePolicy WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackagePolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageProperty WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageSourceUri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageSuperceded WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageSuperceded WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUserStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUserStatus WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTile WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Protocol WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackage WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackageDeleted WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackageExclude WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackageExclude WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PublisherCacheFolder WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Resource WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTile WHERE SecondaryTile._SecondaryTileID NOT IN (SELECT SecondaryTile FROM SecondaryTileUser);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUser WHERE (SecondaryTile>0) AND (SecondaryTile NOT IN (SELECT _SecondaryTileID FROM SecondaryTile));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SharedPackageContainer WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SharedPackageContainerPackageFamily WHERE (SharedPackageContainer>0) AND (SharedPackageContainer NOT IN (SELECT _SharedPackageContainerID FROM SharedPackageContainer));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM TargetDeviceFamily WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM WowDependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM WowDependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM WowDependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM XboxPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT EXISTS(SELECT 1 FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p._PackageID=?1 AND ae.Category=?2 AND (ae._WorkId=0 OR ae._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p._PackageID=?1 AND ae.Category=?2 AND ae._WorkId=0 AND a._WorkId=0 AND p._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE _AppxManifestID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE _AppxManifestID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM CustomInstallWork WHERE _CustomInstallWorkID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM CustomInstallWork WHERE _CustomInstallWorkID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE _DependencyGraphID=?1 AND (_WorkId=?2 OR (_WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?2))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE _DependencyGraphID=?1 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageLocation WHERE _PackageLocationID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageLocation WHERE _PackageLocationID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE _PackageUserID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND _WorkId=? LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUserStatus AS pus INNER JOIN User AS u ON u._UserID=pus.User INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=pus.PackageIdentity WHERE u.UserSid=? AND pi.PackageFullName=? LIMIT 1);
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND (_WorkId=?2 OR (_WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?2))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND _WorkId=0 LIMIT 1);
SELECT hr._HostRuntimeID, hr._Revision, hr._WorkId, hr.HostId, hr.PackageExtension, hr._Dictionary FROM HostRuntime AS hr INNER JOIN PackageExtension AS pe ON pe._PackageExtensionID=hr.PackageExtension INNER JOIN DependencyGraph AS dg ON dg.SupplierPackage=pe.Package WHERE dg.User=?1 AND hr.HostId=?2 AND dg.DependencyType=0x8 AND dg.DependentPackage IN (SELECT _PackageID FROM Package WHERE PackageFullName=?3 AND (_WorkId=0 OR _WorkId=?4)) AND (hr._WorkId=0 OR hr._WorkId=?4) AND (pe._WorkId=0 OR pe._WorkId=?4) AND (dg._WorkId=0 OR dg._WorkId=?4);
SELECT hr._HostRuntimeID, hr._Revision, hr._WorkId, hr.HostId, hr.PackageExtension, hr._Dictionary FROM HostRuntime AS hr INNER JOIN PackageExtension AS pe ON pe._PackageExtensionID=hr.PackageExtension INNER JOIN DependencyGraph AS dg ON dg.SupplierPackage=pe.Package WHERE dg.User=?1 AND hr.HostId=?2 AND dg.DependencyType=0x8 AND dg.DependentPackage IN (SELECT _PackageID FROM Package WHERE PackageFullName=?3 AND _WorkId=0) AND hr._WorkId=0 AND pe._WorkId=0 AND dg._WorkId=0;
SELECT LastValue FROM Sequence WHERE Id=?;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageFamily=?1 AND p.PackageType & ?2 !=0 AND (p._WorkId=0 OR p._WorkId=?3)  ORDER BY pf.Name, pf.PublisherId, p.ResourceId, p.Version;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageFamily=?1 AND p.PackageType & ?2 !=0 AND p._WorkId=0  ORDER BY pf.Name, pf.PublisherId, p.ResourceId, p.Version;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND (p._WorkId=0 OR p._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND p._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PublisherId=?1 AND (p._WorkId=0 OR p._WorkId=?3);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PublisherId=?1 AND p._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.InstalledLocation=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (pl._WorkId=0 OR pl._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.InstalledLocation=?1 AND p._WorkId=0 AND pl._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.Volume=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (pl._WorkId=0 OR pl._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.Volume=?1 AND p._WorkId=0 AND pl._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User INNER JOIN Application AS a ON a.Package=p._PackageID INNER JOIN ApplicationExtension AS ae ON ae.Application=a._ApplicationID INNER JOIN FileTypeAssociation AS fta ON fta.Extension=ae._ApplicationExtensionID WHERE u.UserSid=?1 AND fta.ContentType=?2 AND p.PackageFullName<>?3 AND (p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkID=0 OR pu._WorkId=?4) AND (a._WorkID=0 OR a._WorkId=?4) AND (ae._WorkID=0 OR ae._WorkId=?4) AND (fta._WorkID=0 OR fta._WorkId=?4) ORDER BY pu.InstallTime DESC;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User INNER JOIN Application AS a ON a.Package=p._PackageID INNER JOIN ApplicationExtension AS ae ON ae.Application=a._ApplicationID INNER JOIN FileTypeAssociation AS fta ON fta.Extension=ae._ApplicationExtensionID WHERE u.UserSid=?1 AND fta.ContentType=?2 AND p.PackageFullName<>?3 AND p._WorkId=0 AND pu._WorkID=0 AND a._WorkID=0 AND ae._WorkID=0 AND fta._WorkId=0 ORDER BY pu.InstallTime DESC;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p._PackageID=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p._PackageID=?2 AND pu.User=?1 AND p._WorkId=0 AND pu._WorkId=0;
SELECT p._PackageID, pf.PackageFamilyName FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageOrigin=?1 AND (p._WorkId=0 OR p._WorkId=?2);
SELECT p._PackageID, pf.PackageFamilyName FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageOrigin=?1 AND p._WorkId=0;
SELECT Path FROM PackageExternalLocation WHERE User=?1 AND Package=?2 AND _WorkId=?3 UNION ALL SELECT Path FROM PackageExternalLocation WHERE User=?1 AND Package=?2 AND _WorkId=0 UNION ALL SELECT Path FROM PackageExternalLocation WHERE User=0 AND Package=?2 AND _WorkId=?3 UNION ALL SELECT Path FROM PackageExternalLocation WHERE User=0 AND Package=?2 AND _WorkId=0 UNION ALL SELECT IFNULL(MutableLink, InstalledLocation) FROM PackageLocation WHERE Package=?2 AND _WorkId=?3 UNION ALL SELECT IFNULL(MutableLink, InstalledLocation) FROM PackageLocation WHERE Package=?2 AND _WorkId=0 LIMIT 1;
SELECT Path FROM PackageExternalLocation WHERE User=?1 AND Package=?2 AND _WorkId=0 UNION ALL SELECT Path FROM PackageExternalLocation WHERE User=0 AND Package=?2 AND _WorkId=0 UNION ALL SELECT IFNULL(MutableLink, InstalledLocation) FROM PackageLocation WHERE Package=?2 AND _WorkId=0 LIMIT 1;
SELECT pus.Status FROM PackageUserStatus AS pus INNER JOIN User AS u ON u._UserID=pus.User INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=pus.PackageIdentity WHERE u.UserSid=? AND pi.PackageFullName=?;
SELECT UserSid FROM User AS u WHERE u._UserID IN (SELECT ptu.User FROM PrimaryTileUser AS ptu WHERE _WorkId=?1 UNION ALL SELECT stu.User FROM SecondaryTileUser AS stu WHERE _WorkId=?1 LIMIT 1) LIMIT 1;
SELECT UserSid FROM User AS u WHERE u._UserID IN (SELECT ptuc.User FROM PrimaryTileUserChangelog AS ptuc WHERE _WorkId=?1 UNION ALL SELECT stuc.User FROM SecondaryTileUserChangelog AS stuc WHERE _WorkId=?1 LIMIT 1) LIMIT 1;
server
SERVER_EXTENSION_KEYWORD
ServerCore
ServerExecutable
Server-Gui-Shell
ServerName
serverName.Initialize(server->get_ServerName())
serverRegistration
ServiceIdleTimeout
ServiceParameters
ServiceStatus
ServiceWaitHintInterval
SessionId
sessionId
SessionId
SessionKey
SetCalculatedRegistrationProperties(incomingPackage)
SetDefault: Association=%ls, ProgId=%ls
SetDefault-Info: Association=%ls, ProgId=%ls, U=%ls, T=%02d:%02d:%02d:%02d:%02d:%02d, H=%ls
SetDefault-Mismatch: Association=%ls, ProgId=%ls, U=%ls, T1=%02d:%02d:%02d:%02d:%02d:%02d, T2=%02d:%02d:%02d:%02d:%02d:%02d
SetDefault-Modern: Association=%ls, ProgId=%ls
SetDeploymentError
SetEntriesInAclW
SetEvent
SetFileAttributesW
SetFileInformationByHandle
SetLastError
SetNamedSecurityInfoW
SetPrinterW
SetRegistrationProperty
SetRegistrationProperty( _properties.ExecutionPackageFamily, executionPackageFamily)
SetRegistrationProperty( _properties.LaunchAndActivationPermission, launchAndActivationPermission)
SetRegistrationProperty(_appId, appId)
SetRegistrationProperty(_appId, classId)
SetRegistrationProperty(_applicationDisplayName, applicationName)
SetRegistrationProperty(_displayName, displayName)
SetRegistrationProperty(_exeServerArguments, arguments)
SetRegistrationProperty(_exeServerPath, path)
SetRegistrationProperty(_properties.ApplicationDisplayName, applicationDisplayName)
SetRegistrationProperty(_properties.ApplicationId, applicationId)
SetRegistrationProperty(_properties.Arguments, arguments)
SetRegistrationProperty(_properties.AsynchronousInterface, asynchronousInterface)
SetRegistrationProperty(_properties.AutoConvertTo, autoConvertTo)
SetRegistrationProperty(_properties.CLSID, clsid)
SetRegistrationProperty(_properties.CurrentVersion, currentVersion)
SetRegistrationProperty(_properties.DataFormats, _dataFormats.Get())
SetRegistrationProperty(_properties.DisplayName, displayName)
SetRegistrationProperty(_properties.DllPath, path)
SetRegistrationProperty(_properties.DllPath_arm, path)
SetRegistrationProperty(_properties.DllPath_arm64, path)
SetRegistrationProperty(_properties.DllPath_x64, path)
SetRegistrationProperty(_properties.DllPath_x86, path)
SetRegistrationProperty(_properties.EnableOleDefaultHandler, true)
SetRegistrationProperty(_properties.EnableVirtualizationForInprocHandler, true)
SetRegistrationProperty(_properties.EnableVirtualizationForInprocServer, true)
SetRegistrationProperty(_properties.Executable, executable)
SetRegistrationProperty(_properties.ExplicitPsmActivationType, explicitPsmActivationType)
SetRegistrationProperty(_properties.Flags, flags)
SetRegistrationProperty(_properties.HasMachineScope, (hasMachineScope != FALSE))
SetRegistrationProperty(_properties.HelpDirectory, helpDirectory)
SetRegistrationProperty(_properties.HostRuntimeId, hostRuntimeId.Get())
SetRegistrationProperty(_properties.InprocHandlerDllPath_arm, path)
SetRegistrationProperty(_properties.InprocHandlerDllPath_arm64, path)
SetRegistrationProperty(_properties.InprocHandlerDllPath_x64, path)
SetRegistrationProperty(_properties.InprocHandlerDllPath_x86, path)
SetRegistrationProperty(_properties.InprocHandlerHasMachineScope, true)
SetRegistrationProperty(_properties.InprocServerDllPath_arm, path)
SetRegistrationProperty(_properties.InprocServerDllPath_arm64, path)
SetRegistrationProperty(_properties.InprocServerDllPath_x64, path)
SetRegistrationProperty(_properties.InprocServerDllPath_x86, path)
SetRegistrationProperty(_properties.InprocServerHasMachineScope, true)
SetRegistrationProperty(_properties.IsPackageRelativePath, isPackageRelativePath)
SetRegistrationProperty(_properties.IsSystemExecutable, isSystemExecutable != FALSE)
SetRegistrationProperty(_properties.IsSystemInprocServerDll, true)
SetRegistrationProperty(_properties.LocaleId, localeId)
SetRegistrationProperty(_properties.OutofprocClassHasMachineScope, true)
SetRegistrationProperty(_properties.Permissions, securityDescriptorString.Get())
SetRegistrationProperty(_properties.ProxyStubCLSID, proxyStubClsid)
SetRegistrationProperty(_properties.RuntimeBehavior, runtimeBehavior)
SetRegistrationProperty(_properties.ServerId, serverId)
SetRegistrationProperty(_properties.ServiceName, serviceName)
SetRegistrationProperty(_properties.SurrogateAppId, appId)
SetRegistrationProperty(_properties.SynchronousInterface, synchronousInterface)
SetRegistrationProperty(_properties.SystemExecutableArchitecture, architecture)
SetRegistrationProperty(_properties.TrustLevel, trustLevel)
SetRegistrationProperty(_properties.TypeLibId, typeLibId)
SetRegistrationProperty(_properties.TypeLibVersionNumber, typeLibVersionNumber)
SetRegistrationProperty(_properties.UseUniversalMarshaler, true)
SetRegistrationProperty(_properties.Win32Path, win32Path)
SetRegistrationProperty(_properties.Win64Path, win64Path)
SetRegistrationProperty(property.Value, value)
SetRegistrationPropertyAllowMultipleIfConsistent
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.ConversionReadWritable, readWritable)
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.InprocHandlerHasMachineScope, true)
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.InprocServerHasMachineScope, true)
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.OutofprocClassHasMachineScope, true)
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.VersionIndependentProgId, versionIndependentProgId)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.AutoConvertTo, autoConvertTo)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.ConversionReadable, readable)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.DefaultFormatName, defaultFormatName)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.DefaultIcon, defaultIcon)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.DisplayName, displayName)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.InsertableObject, true)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.MiscStatusDefault, miscStatusDefault)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.ProgId, progId)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.ShortDisplayName, shortDisplayName)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.Threading, static_cast<ThreadingModel>(threadingModel))
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.ToolboxBitmap32, toolboxBitmap32)
SetSecurityDescriptorDacl
SetSecurityInfo
SetServiceObjectSecurity
SetThreadpoolTimer
SetThreadToken
SettingName
Settings
SettingsApp_cw5n1h2txyewy
SettingSyncEnabled
SettingValue
SetUnhandledExceptionFilter
SHA256
SharedPackageContainer
SharedPackageContainerPackageFamily
shbfile
SHChangeNotify
shcmdfile
SHCreateMemStream
SHCreateThreadWithHandle
Shell
shell
Shell IDList Array
shellex\ContextMenuHandlers
shellex\DragDropHandlers
ShellRefresh
SHGetKnownFolderPath
ShouldValidateSignature
SHSetValueW
shsfile
SidType
sidType
SigCheck
sigcheckPassed
SignatureOrigin
SimilarPackageFullName
Simple
-simple
SimpleMapiLibrary
SisPath
SizeInPages
SizeKB
SizeTAdd(commandLineLength, 1, &commandLineLength)
SizeTAdd(commandLineLength, 2, &commandLineLength)
SizeTAdd(commandLineLength, wcslen(arguments), &commandLineLength)
Sleep
SleepConditionVariableCS
SmallLogo
Software
SOFTWARE
SOFTWARE\Classes
Software\Classes
SOFTWARE\Classes
SOFTWARE\Classes\CLSID\
SOFTWARE\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\Appmodel
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages\
SOFTWARE\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\Appmodel\ShellRefresh
Software\Classes\MIME\Database\Content Type
SOFTWARE\Clients\Mail
SOFTWARE\Clients\Mail\PackagedMail
SOFTWARE\Microsoft\MsixRegistryCompatibility
SOFTWARE\Microsoft\Windows NT\CurrentVersion\Fonts
SOFTWARE\Microsoft\Windows NT\CurrentVersion\Server\ServerLevels
SOFTWARE\Microsoft\Windows Search\UninstalledStoreApps
SOFTWARE\Microsoft\Windows\CurrentVersion\AppHost\IndexedDB\
SOFTWARE\Microsoft\Windows\CurrentVersion\AppModel\StateRepository
SOFTWARE\Microsoft\Windows\CurrentVersion\AppModel\StateRepositoryStatus
Software\Microsoft\Windows\CurrentVersion\Appx
SOFTWARE\Microsoft\Windows\CurrentVersion\Appx
Software\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore
Software\Microsoft\Windows\CurrentVersion\Appx\PackageVolumes
Software\Microsoft\Windows\CurrentVersion\Appx\PurgeList
Software\Microsoft\Windows\CurrentVersion\Authentication\LogonUI\Notifications\Alarm
Software\Microsoft\Windows\CurrentVersion\Explorer\AppContract
Software\Microsoft\Windows\CurrentVersion\Explorer\AutoPlayHandlers\EventHandlers
Software\Microsoft\Windows\CurrentVersion\Explorer\AutoPlayHandlers\Handlers
SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\ControlPanel\Namespace\
Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\%s
Software\Microsoft\Windows\CurrentVersion\Explorer\KindMap\
Software\Microsoft\Windows\CurrentVersion\Explorer\SharingMFU
Software\Microsoft\Windows\CurrentVersion\SearchSettings
Software\Microsoft\Windows\CurrentVersion\Shell Extensions\Approved
Software\Microsoft\Windows\Shell\Associations\UrlAssociations
Software\Microsoft\Windows\Shell\Associations\UrlAssociations\%s
Software\Microsoft\Windows\Windows Error Reporting\RuntimeExceptionHelperModules
Software\Policies\Microsoft\Windows\Appx
SOFTWARE\RegisteredApplications
'Sonecore\private\base\inc\appmodel\staterepository\dal/Database.hpp
SonicWALL.MobileConnect_cw5n1h2txyewy
source
Source Path
Source setting does not exist!
SourceBundle
SourceFilePath
SourceFolderPath
SourceMediaID
SourcePath
space
spIterator->get_Current(spKeyValuePair.GetAddressOf())
spIterator->get_HasCurrent(&bHasCurrent)
spIterator->MoveNext(&bHasCurrent)
spKeyValuePair->get_Value(&spExtensionRegistration)
spPackagedComRegistration->PendingWriteRegistration( packageMoniker.Get(), incomingPackage, resourcesManager, spRegistrationStore.Get())
spRegistration
spRegistration.As(&spPackagedComRegistration)
spRegistrationStore->RemoveComPackageInstallOrderEntry( packageMoniker.Get(), IsUserRegister(), deploymentOperation)
spRegistrationStore->TryGetComPackageInstallOrder( packageMoniker.Get(), IsUserRegister(), outgoingPackageInstallOrder)
spRegistrationStore->TryGetComPackageInstallOrder(packageMoniker.Get(), false , installOrder)
SQLite.AutoIndexWarning
sqlite3_bind_blob
sqlite3_bind_int
sqlite3_bind_int64
sqlite3_bind_null
sqlite3_bind_text16
sqlite3_busy_timeout
sqlite3_changes
sqlite3_clear_bindings
sqlite3_close
sqlite3_column_blob
sqlite3_column_bytes
sqlite3_column_int
sqlite3_column_int64
sqlite3_column_text
sqlite3_column_text16
sqlite3_column_type
sqlite3_config
sqlite3_create_function_v2
sqlite3_db_config
sqlite3_db_filename
sqlite3_db_handle
sqlite3_db_status
sqlite3_errcode
sqlite3_errmsg
sqlite3_exec
sqlite3_expanded_sql
sqlite3_extended_errcode
sqlite3_extended_result_codes
sqlite3_file_control
sqlite3_finalize
sqlite3_free
sqlite3_get_autocommit
sqlite3_last_insert_rowid
sqlite3_log
sqlite3_malloc
sqlite3_next_stmt
sqlite3_open_v2
sqlite3_prepare_v2
sqlite3_profile
sqlite3_reset
sqlite3_result_blob
sqlite3_result_error_code
sqlite3_result_error_nomem
sqlite3_result_error16
sqlite3_result_int
sqlite3_result_int64
sqlite3_result_text16
sqlite3_snprintf
sqlite3_sql
sqlite3_status
sqlite3_step
sqlite3_stmt_busy
sqlite3_total_changes
sqlite3_trace
sqlite3_user_data
sqlite3_value_blob
sqlite3_value_bytes
sqlite3_value_int
sqlite3_value_int64
sqlite3_value_text
sqlite3_value_text16
sqlite3_value_type
sqlite3_wal_autocheckpoint
sqlite3_wal_checkpoint_v2
sqlite3_wal_checkpoint_v2(): Mode:%d EffectiveMode:%d Size:%d Pages:%d
Square150x150Logo
Square30x30Logo
Square44x44Logo
SRD1t
SRHistory
SRJournal
SRJournalArchive
sroptions
sSH;_
StageForInPlace
StartAccount
StartPage
startswith
StartsWith(*string*,prefix) error: Invalid type (%d)
StartsWith(string,*prefix*) error: Invalid type (%d)
StartupType
State
STATE_DEH_KEYWORD
StatementCache.Count
StatementCache.Hits
StatementCache.Lifespan
StatementCache.Misses
StatementCount
StatementPtr
StatementUsed
staterepository
StateRepository.Core.dll
StateRepository.Database.Statistics
StateRepository.DatabaseCache.Statistics
StateRepository.FailFastBusySnapshot
StateRepository.FailFastBusySnapshot.BusyCount
StateRepository.FailFastBusySnapshot.DatabasePtr
StateRepository.FailFastBusySnapshot.FirstBusySQL
StateRepository.FailFastBusySnapshot.Statement#%u.ExpandedSQL
StateRepository.FailFastBusySnapshot.Statement#%u.Ptr
StateRepository.FailFastBusySnapshot.Statement#%u.SQL
StateRepository.FailFastBusySnapshot.StatementCount
StateRepository.FailFastBusySnapshot.StatementInProgress
StateRepository.log
StateRepository.ResourcePriority.Inadequate
StateRepositoryStatus
static_cast< InProcessActivatableClassRegistration_Impl* >(classInterface.Get())-> PendingWriteToStore(packageMoniker, registrationStoreContext)
static_cast<ExeServerRegistration_Impl*>(exeServer)->AddActivatableClass(activatableClassId)
static_cast<ExeServerRegistration_Impl*>(serverInterface.Get())-> PendingWriteToStore(incomingPackage, registrationStoreContext)
status
StatusToClear
StatusToSet
stoi argument out of range
stoll argument out of range
StorageId
StorageItems
StoreName
stoull argument out of range
strchr
strcmp
stream end
stream error
StreamingDataSourcePrefetchCanceled
String
string too long
string.Set(static_cast<const WCHAR*>(data), (dataSize / sizeof(WCHAR)) - 1)
String1
String2
String3
StringCchCopy(collectedCharacters + collectedCharacterOffset, collectedCharacterCount - collectedCharacterOffset, GetStringPointer(string))
StringCchCopy(collectedCharacters + collectedCharaterOffset, collectedCharacterCount - collectedCharaterOffset, sourceCharacters)
StringCchPrintf(commandLine.get(), commandLineLength + 1, L"\"%ls\" %ls", executableAbsolutePath, arguments)
StringCchPrintf(commandLine.get(), commandLineLength + 1, L"\"%ls\"", executableAbsolutePath)
StringCchPrintf(m_string, ARRAYSIZE(m_string), L"%u", value)
StringCchPrintf(m_string, ARRAYSIZE(m_string), L"%x", value)
StringCchPrintfW(packageDacl, length, comDACLFormat, packageSidString.GetChars())
StringFileInfo
StringFromGUID2
StringHasEmbeddedNull(value)
stringOrResourceReference:%ls
Subsystem
Subtype
sUI;_
Summary
SummaryError
SupplierPackage
SupplierPackageName
SupportedDataFormats
SupportedFileTypes
SupportsMultipleInstances
SUVWATAUAVAWH
SUVWAVH
SUVWH
SUWAVAWH
SVWATAUAVAWH
SVWAVAWH
SVWAVH
symbol
synchronous
SynchronousInterface
sysfile
system
SYSTEM
System
system
System.ApplicationName
System.ControlPanel.Category
System.Software.TasksFileUrl
System\CurrentControlSet\Control\BackupRestore\FilesNotToSnapshot
System\CurrentControlSet\Services
SYSTEM\CurrentControlSet\Services\EventLog\Application\
SystemApplicationName
SystemControlPanelCategory
systemDirectoryLength == 0
SystemFileAssociations
SystemSoftwareTasksFileUrl
SystemTime
systemTime
SystemTimeToFileTime
SystemVolume
t"@8=
t"f9Q
t#H;;r
t$ E2
t$ E3
T$ E3
t$ E3
t$ H;\$0s=I
t$ UH
t$ UWATAUAWH
t$ UWATAVAWH
t$ UWAUAVAWH
t$ UWAVH
t$ UWAWH
t$ WATAUAVAWH
t$ WATAVH
t$ WAVAWH
t$ WH
t$$fD
T$(E3
t$(H;
T$(H+
T$@A*
T$@E3
t$@I;
t$0E3
T$0E3
t$0H;
T$0L+
t$8fD
t$8L;
T$HE3
t$HE3
T$P@8
t$P9T$0A
t$pE3
t$PH;
t$pI;
T$PM;
T$X@8
t$X@8u
T$XE3
t$xE3
T$xHc
t%E9(t M
t&@8l$8u
t(@85
t,D8=
T,VXX
t@L;P
t[H;^
t+=D{
t+H;_
t<H!x
t<Lc@
t=D9+t8L
t09q u
t0H;s
t0L9g
t1fD9Q
t2H;H
t2H;n
t4H;;r
t4H;_
t5fA9(t/I
t5I;_
t7@8u
t7f9+t2H
t7f9Q
t99K u
tAfA9+t;L
Target
target
TargetClrVersion
TargetDeviceFamily
TargetFilePath
TargetFileSize
targetId
TargetPackageFullName
targetPackageFullNameForRepair
TargetPlatform
TargetPlatformEnumMap
TASKH$
tdh.dll
TdhEnumerateProviderFieldInformation
TdhFormatProperty
TdhGetEventInformation
TdhGetEventMapInformation
TEMP 
TEMP$
TEMP(
TEMP,
TEMP.xml
TEMP@
TEMP\
temp_store
TEMP`
TEMP|
TEMP<
TEMP0
TEMP4
TEMP8
TEMPd
TEMPD
TEMPH
TEMPh
TEMPH
TEMPh
TEMPH
TEMPh
TEMPH
TEMPh
TEMPL
TEMPl
TEMPL
TEMPP
TEMPp
TEMPP
TEMPp
TEMPP
TEMPp
TEMPP
TEMPT
TEMPt
TEMPT
TEMPt
TEMPT
TEMPt
TEMPT
TEMPX
TEMPx
TEMPX
TerminateProcess
text()
tFf9.tAL
This should never occur
threadId
ThreadingModel
TileInfo
TileStore
Title
tLJNk
TlsAlloc
TlsGetValue
TlsSetValue
tO9_HtJH
tOH;{
tOI;~
too many length or distance symbols
ToolBoxBitmap32
Tools::GetUserSID(m_userToken, &m_userSid)
topic
tpE9w0t9A
tQD9*tLH
tQfD93tKH;
Trace
TransactionCallerID
TranslateMessage
Translation
TreatAs
TreeResetNamedSecurityInfoW
trfD92tlH
TriggerType
TRUNCATE
TRUST_DEH_KEYWORD
TryGetPackageAndPackageFamilyPrimaryKeysForPackage(*machineDatabase, packageFullName, allowUnregisteredPackage, packageKey, packageFound, packageFamilyKey, packageFamilyFound)
TryGetPackageAndPackageFamilyPrimaryKeysForPackage(*machineDatabase, packageFullName, allowUnregisteredPackage, packageKey, packageFound, packageFamilyKey, packageFamilyFound, &packageIsSystemRegistered)
TryGetPackageFamilySystemRegisterTimestampForPackage(machineDatabase, packageFullName, optionalTimestamp, allowUnregisteredPackage)
TryGetPackageFamilySystemRegisterTimestampForPackage(machineDatabase, packageName.c_str(), timestamp, isIncomingPackage )
TryGetPackageFamilyUserRegisterTimestampForPackage(machineDatabase, GetUserSid(), packageName.c_str(), timestamp, isIncomingPackage )
tSfA9+tML
ttffile
twA8FAt8A
ty@8=
tYD8t$`t
tyH!t$ E3
TypeLib
TypeOverlay
TypesSupported
tZf97tUH
u%H!\$8H
u)fD9Q
u,!]0H
u,D8oP
u.@8}
U^='Y
u_H;{ uY
u3H;z
U8H!}
uap4:SupportsMultipleInstances
UATAUAVAWH
UATAUH
UATAVH
UATAWH
UAVAWH
ug@89t`H
uGH98uBH
UInt32Add(collectedCharacterCount, GetStringLengthIncludingTerminator(string), &collectedCharacterCount)
UInt32Add(collectedCharacterCount, lengthIncludingNullTerminator, &collectedCharacterCount)
UInt32Add(collectedCharacterOffset, sourceLength, &collectedCharacterOffset)
UInt32Add(collectedCharaterOffset, sourceLength + 1, &collectedCharaterOffset)
UInt32Add(lengthIncludingNullTerminator, 1, &lengthIncludingNullTerminator)
Uint32HexString::Uint32HexString
Uint32String::Uint32String
UInt32Value
UiOrder
UMgrEnumerateSessionUsers
UMgrFreeSessionUsers
UMgrQueryUserContext
UMgrQueryUserToken
Unable to stage pending writes to activation catalog.
uncompress
UncompressedSizeKB
UnhandledExceptionFilter
UniformResourceLocatorW
Uninstall
UninstallAppMonPrinter
uninstall-manifest
UniqueKey
unknown
unknown compression method
Unknown error
Unknown exception
Unknown RuntimeBehavior
Unknown SQLite datatype %d
Unknown TrustLevel
UnmapViewOfFile
unordered_map/set too long
uP;uH
UPDATE %s SET _Created=changeid_next_value() WHERE _Created=-2 AND _WorkId=?;
UPDATE %s SET _Deleted=changeid_next_value() WHERE _WorkId=?;
UPDATE %s SET _Modified=changeid_next_value() WHERE _Modified=-2 AND _WorkId=?;
UPDATE %s SET _WorkId=0 WHERE _WorkId=? AND _WorkId<>0;
UPDATE %s SET _WorkId=0, _ShadowId=0 WHERE _WorkId=? AND _WorkId<>0;
UPDATE AppxManifest SET _Revision=?, _WorkId=?, Package=?, Xml=compress(?), _Dictionary=? WHERE _AppxManifestID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE AppxManifest SET _Revision=?, _WorkId=?, Package=?, Xml=compress(?), _Dictionary=? WHERE _AppxManifestID=? AND _Revision=? AND _WorkId=0;
UPDATE CustomInstallWork SET _Revision=?, _WorkId=?, User=?, Package=?, Name=?, "Index"=?, Flags=?, Status=?, File=?, Arguments=?, _Dictionary=? WHERE _CustomInstallWorkID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE CustomInstallWork SET _Revision=?, _WorkId=?, User=?, Package=?, Name=?, "Index"=?, Flags=?, Status=?, File=?, Arguments=?, _Dictionary=? WHERE _CustomInstallWorkID=? AND _Revision=? AND _WorkId=0;
UPDATE DependencyGraph SET _IsMarkedForDeletion=0 WHERE _DependencyGraphID=? AND _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
UPDATE DependencyGraph SET _IsMarkedForDeletion=1 WHERE _DependencyGraphID=? AND _IsMarkedForDeletion=0 AND _WorkId=?;
UPDATE DependencyGraph SET _Revision=?1, _WorkId=?2, _ShadowId=?3, _IsMarkedForDeletion=?4, User=?5, DependentPackage=?6, "Index"=?7, SupplierPackage=?8, DependencyType=?9, _Dictionary=?10 WHERE (_DependencyGraphID=?11 AND _Revision=?12) AND _IsMarkedForDeletion=0 AND _WorkId=?13;
UPDATE DependencyGraph SET DependentPackage=? WHERE DependentPackage=? AND DependencyType=? AND "User"=? AND _WorkId=?;
UPDATE DependencyGraph SET SupplierPackage=? WHERE SupplierPackage=? AND "User"=? AND _WorkId=?;
UPDATE Package SET Flags=Flags&~0x400 WHERE (PackageType & 0x29!=0) AND _PackageID IN (SELECT _PackageID FROM PACKAGE WHERE PackageFamily IN (SELECT PackageFamily FROM Package WHERE (PackageType & 0x29!=0) AND _PackageID IN (SELECT Package FROM PackageUser WHERE _WorkId=?1 AND DeploymentState!=6 AND DeploymentState!=5)) AND _WorkId=0);
UPDATE Package SET Flags=Flags&~0x400 WHERE (PackageType&0x29!= 0) AND PackageFamily=? AND _WorkId=0;
UPDATE Package SET Flags2=((Flags2 & ~?) | ?) WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags2=((Flags2 & ~?) | ?) WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET SourceBundle=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET TargetDeviceFamily=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageLocation SET _Revision=?, _WorkId=?, Package=?, Volume=?, InstalledLocation=?, MutableLink=?, MutableLocation=?, ProjectionId=?, _Dictionary=? WHERE _PackageLocationID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageLocation SET _Revision=?, _WorkId=?, Package=?, Volume=?, InstalledLocation=?, MutableLink=?, MutableLocation=?, ProjectionId=?, _Dictionary=? WHERE _PackageLocationID=? AND _Revision=? AND _WorkId=0;
UPDATE PackageUser SET _Revision=?, _WorkId=?, Package=?, User=?, InstallTime=?, OSVersionWhenInstalled=?, WhenRestored=?, IsExplicitlyInstalled=?, DeploymentState=?, AppDataVolume=?, _Dictionary=? WHERE _PackageUserID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageUser SET _Revision=?, _WorkId=?, Package=?, User=?, InstallTime=?, OSVersionWhenInstalled=?, WhenRestored=?, IsExplicitlyInstalled=?, DeploymentState=?, AppDataVolume=?, _Dictionary=? WHERE _PackageUserID=? AND _Revision=? AND _WorkId=0;
UPDATE PackageUser SET DeploymentState=1 WHERE DeploymentState=6 AND Package IN (     SELECT _PackageID FROM Package      WHERE PackageOrigin =2);
UPDATE PackageUserStatus SET Status=?3 WHERE PackageIdentity IN (SELECT _PackageIdentityID FROM PackageIdentity WHERE PackageFullName=?2) AND User IN (SELECT _UserID FROM User WHERE UserSid=?1);
UPDATE Sequence SET LastValue=? WHERE Id=?;
UPDATE WowDependencyGraph SET _IsMarkedForDeletion=0 WHERE _WowDependencyGraphID=? AND _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
UPDATE WowDependencyGraph SET _IsMarkedForDeletion=1 WHERE _WowDependencyGraphID=? AND _IsMarkedForDeletion=0 AND _WorkId=?;
UPDATE WowDependencyGraph SET _Revision=?1, _WorkId=?2, _ShadowId=?3, _IsMarkedForDeletion=?4, User=?5, DependentPackage=?6, "Index"=?7, SupplierPackage=?8, DependencyType=?9, _Dictionary=?10 WHERE (_WowDependencyGraphID=?11 AND _Revision=?12) AND _IsMarkedForDeletion=0 AND _WorkId=?13;
UPDATE WowDependencyGraph SET SupplierPackage=? WHERE SupplierPackage=? AND "User"=? AND _WorkId=?;
UPDATE_MIGRATION_TASK_DEH_KEYWORD
UpdateActions
UpdatePackageStatus
UpdateStatistics
uPH9i
upper
UpstreamDependentPackageFullName
UpstreamDependentPackageKey
uRH9K
URL Protocol
URLAssociations
useHalf
useLess
useMinimum
useMore
User Choice set via Windows User Experience {D18B6DD5-6124-4341-9318-804003BAFA0B}
User::TryGetByUserSid(*machineDatabase, userSid, user, userFound)
User\
UserChoice
USERDATAACCESS_EXTENSION_KEYWORD
UserDatabaseStatisticsLastUpdated
UserDomain
USERENV.dll
UserName
USERS\
userSid
UserSid
userSid
UserSid
userSid
UserSid
UserSID
UserSid
UserSID
UserSid
USVWATAUAVAWH
USVWATAVAWH
USVWAUAVAWH
USVWAVAWH
USVWAVH
USVWH
UuidCreate
UuidFromStringW
UuidToStringW
UUUUUUU
UVAVH
uVHc^$H
UVWATAUAVAWH
UVWATAVH
UVWAUAVH
UVWAVAWH
UWATAUAVH
UWATAVAWH
UWAUAVAWH
UWAVH
UWAWH
uXI96t
uXL9g
v D8h
v;H;~(r
v4.0_
vaH;Z
VailProxy
Value
value
value != existingValue
ValueName
ValueType
ValueValue
VarFileInfo
VAVAWH
vbefile
vbsfile
vb'vb'v
vector too long
vector<bool> too long
Vector<HSTRING>::Make(&_dataFormats)
verb != existingVerb
verbKeyValuePair->get_Key(&verbId)
verbKeyValuePair->get_Value(&verbInspectable)
Verbose
verbPropertyValue->GetString(&verb)
VerifyPackageFullName
Version
version="1.0" encoding="UTF-16"
VersionIndependentProgID
versionNumberString.Set(versionNumber)
VetoReason
vHD+p
VISUALELEMENTS_EXTENSION_KEYWORD
VMAP$
VMAP,
VMAP|
VMAP<
VMAP4
VMAPd
VMAPD
VMAPL
VolumeID
VolumeKey
VolumeMediaID
VolumeMountPoint
VolumeName
VS_VERSION_INFO
VWATAUAVH
VWATAVAWH
VWAUAVAWH
VWAVH
VWAWH
W H;S
W H+W
w(;w(v
w\I;H
w=rNH
w0M9&
W2a')
W3^+`x
Wait For Custom Install Worker Process failed!
WaitForRequestsInUseTimeout
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
waitResult
WakeAllConditionVariable
Warning
WATAUAVAWH
WATAVH
WATAWH
WAUAVH
WAVAWH
wcifs
wcifs Outer Instance
wcschr
wcscmp
wcsncmp
wcsrchr
WEB_ACCOUNT_PROVIDER_DEH_KEYWORD
WebLink
WerRegisterCustomMetadata
WEVT_TEMPLATE
wevtutil.exe
WideCharToMultiByte
wil::make_hstring_from_buffer_nothrow(wistd::move(multiStringBuffer), GetAddressOf())
wilActivity
WilError_03
WilFailureNotifyWatchers
wilResult
WilStaging_02
win:Error
win:Info
win:Informational
win:ResponseTime
win:Start
win:Stop
win:Verbose
win:Warning
win32
win32App
win64
windows
windows.
windows.accountPictureProvider
windows.activatableClass
windows.alarm
windows.appExecutionAlias
windows.appExtension
windows.applicationRegistration
Windows.AppointmentDataProvider
windows.appointmentsProvider
Windows.AppointmentsProvider.AddAppointment
Windows.AppointmentsProvider.RemoveAppointment
Windows.AppointmentsProvider.ReplaceAppointment
Windows.AppointmentsProvider.ShowTimeFrame
Windows.AppPrinter
windows.appPrinter
windows.approvedShellExtension
Windows.AppService
windows.appUriHandler
windows.autoPlayContent
Windows.AutoPlayContent
Windows.AutoPlayDesktopAppX.Content
Windows.AutoPlayDesktopAppX.Device
windows.autoPlayDevice
Windows.AutoPlayDevice
windows.autoPlayHandler
Windows.AutoPlayHandler
Windows.BackgroundTasks
Windows.BarcodeScannerProvider
windows.cachedFileUpdater
Windows.CachedFileUpdater
windows.cameraSettings
Windows.CameraSettings
windows.capability
windows.classicAppCompatKeys
windows.comInterface
windows.comServer
Windows.ContactDataProvider
windows.contentType
windows.controlPanelItem
windows.customInstall
windows.defaultPrograms
windows.desktopEventLogging
Windows.Device
windows.DeviceSetupManager
windows.devicesflow_cw5n1h2txyewy
Windows.DockingController_cw5n1h2txyewy
Windows.EmailDataProvider
windows.errorReporting
windows.eventTracing
Windows.File
windows.fileExplorerClassicContextMenuHandler
windows.fileExplorerClassicDragDropContextMenuHandler
windows.fileExplorerContextMenus
windows.fileOpenPicker
Windows.FileOpenPicker
windows.fileSavePicker
Windows.FileSavePicker
windows.fileTypeAssociation
windows.firewallRules
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComProgIdRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComTypeLibRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>>
Windows.Foundation.Collections.IIterator`1<String>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComProgIdRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComTypeLibRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>
Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
Windows.Foundation.Collections.IKeyValuePair`2<String, Object>
Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComProgIdRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComTypeLibRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<String, String>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>
Windows.Foundation.Collections.IMap`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
Windows.Foundation.Collections.IMap`2<String, Object>
Windows.Foundation.Collections.IMap`2<String, OSIntegration.DEH.ComProgIdRegistration>
Windows.Foundation.Collections.IMap`2<String, OSIntegration.DEH.ComTypeLibRegistration>
Windows.Foundation.Collections.IMap`2<String, String>
Windows.Foundation.Collections.IMap`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>
Windows.Foundation.Collections.IMap`2<String, Windows.Foundation.IExeServerRegistration>
Windows.Foundation.Collections.IMap`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>
Windows.Foundation.Collections.IMapView`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
Windows.Foundation.Collections.IMapView`2<String, Object>
Windows.Foundation.Collections.IMapView`2<String, OSIntegration.DEH.ComProgIdRegistration>
Windows.Foundation.Collections.IMapView`2<String, OSIntegration.DEH.ComTypeLibRegistration>
Windows.Foundation.Collections.IMapView`2<String, String>
Windows.Foundation.Collections.IMapView`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>
Windows.Foundation.Collections.IMapView`2<String, Windows.Foundation.IExeServerRegistration>
Windows.Foundation.Collections.IMapView`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IVector`1<String>
Windows.Foundation.Collections.IVectorView`1<String>
Windows.Foundation.Collections.PropertySet
Windows.Foundation.ExeServerActivatableClassRegistration
Windows.Foundation.ExeServerRegistration
Windows.Foundation.PropertyValue
Windows.FullTrustApplication
windows.gadget
Windows.GameBarUIExtension
windows.hostRuntime
windows.immersivecontrolpanel_cw5n1h2txyewy
windows.indexedDB
windows.installedLocationVirtualization
windows.integrityExtension
Windows.Internal.ApplicationDefaults.AppDefaultHelpers
Windows.Internal.Security.WebAuthentication.AuthenticationManager
windows.internal.shadowCopyExclude
Windows.Internal.StateRepository.Management.RepositoryManager
Windows.Internal.StateRepository.PrimaryTileUserNotificationChannel
Windows.Launch
windows.licensing
windows.localExperiencePack
windows.lockScreenCall
windows.LockScreenCall
windows.mailProvider
Windows.Management.Core.ApplicationDataManager
windows.MicrosoftAccountClient.SignOut
Windows.MiracastView_cw5n1h2txyewy
windows.MMGA
Windows.MtcUvc_cw5n1h2txyewy
windows.mutablePackageDirectories
Windows.PartialTrustApplication
Windows.PosPaymentConnector
Windows.PreInstalledConfigTask
windows.primaryInteropAssemblies
windows.print3DWorkflow
Windows.Print3DWorkflow
Windows.PrintDialog_cw5n1h2txyewy
Windows.PrintDialog3D_cw5n1h2txyewy
Windows.PrintSupportExtension
Windows.PrintSupportWorkflow
Windows.PrintTaskSettings
windows.printTaskSettings
Windows.PrintWorkflowBackgroundTask
windows.protocol
Windows.Protocol
windows.publisherCacheFolders
windows.repositoryExtension
windows.scopeCompatEnforcer
windows.search.Migration
windows.searchIndexer
windows.service
windows.sharedFonts
Windows.ShareTarget
windows.shareTarget
windows.shortcut
windows.stateExtension
windows.systemFileAssociation
Windows.UpdateTask
Windows.UserDataTaskDataProvider
windows.userMutablePackageDirectories
windows.wcosAdapterApp
Windows::Foundation::Collections::Internal::Vector<HSTRING>::Make(&classNames)
windowsApp
WindowsCompareStringOrdinal
WindowsConcatString
WindowsConcatString( Wrappers::HStringReference(typeLibIdString).Get(), versionNumber, typeLibKey.GetAddressOf())
WindowsCreateString
WindowsCreateString(firstNullTerminator, 1, GetAddressOf())
WindowsCreateStringReference
WindowsDeleteString
WindowsDeleteString(initializedElement->activatableClassId)
WindowsDeleteString(initializedElement->contractId)
WindowsDeleteString(uninitializedElement->contractId)
WindowsDeleteStringBuffer
WindowsDuplicateString
WindowsDuplicateString(source.contractId, &uninitializedElement->contractId)
WindowsGetStringLen
WindowsGetStringRawBuffer
WindowsIsStringEmpty
WindowsPreallocateStringBuffer
WindowsPreallocateStringBuffer(collectedCharacterCount, &collectedCharacters, &multiStringBuffer)
WindowsPromoteStringBuffer
WindowsStringHasEmbeddedNull
WINSPOOL.DRV
WITH BundleInfo(_PackageID, PackageType, BundleId, _PackageUserID, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)INSERT OR IGNORE INTO PackageUser  (_Revision, _WorkId, Package, User, InstallTime, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary)SELECT 1, 0, p._PackageID, UserId, now(), 0, 1, DeploymentState, 0, NULL  FROM Package AS p INNER JOIN (   SELECT BundleId, UserId, DeploymentState FROM BundleInfo AS t    WHERE BundleId NOT IN (        SELECT b.BundleId FROM BundleInfo AS b         WHERE b.PackageType=8           AND b.UserId=t.UserId       )   ) AS b ON b.BundleId=p.SourceBundle AND p.PackageType=8;
WITH BundleInfo(_PackageID, PackageType, BundleId, PackageUserId, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)DELETE FROM PackageUser WHERE _PackageUserID IN (    SELECT PackageUserId FROM BundleInfo AS t     WHERE t.PackageType=8       AND NOT EXISTS(            SELECT 1 FROM Package AS p             INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID             WHERE pu.User=t.UserId AND p.SourceBundle=t.BundleId AND p.PackageType<>8           ));
WITH BundleInfo(_PackageID, PackageType, BundleId, PackageUserId, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)SELECT COUNT(*), GROUP_CONCAT(t.PackageUserID) FROM BundleInfo AS t WHERE t.PackageType=8   AND NOT EXISTS(        SELECT 1 FROM Package AS p         INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID         WHERE pu.User=t.UserId AND p.SourceBundle=t.BundleId AND p.PackageType<>8       );
WMIPROVIDER_EXTENSION_KEYWORD
wOI9V
WorkId
workid
WorkId
workId
WowDependencyGraph
WriteContent(root, m_newContent.value())
WriteContent(root, m_oldContent.value())
WriteContextMenuShellExRegistry failed for incoming package
WriteFile
WriteSetting: Name=%ls
Writesize
wsffile
wsfile
wshfile
WTSEnumerateSessionsW
WTSFreeMemory
WTSQueryUserToken
wVA97s
wwahost.exe
x ATAUAVAWD
x ATAUAVH
x ATAVAWH
x ATH
x AUAVAWH
x AVH
x UATAUAVAWH
x UAVAWH
X~zjg
x0D8n
x86a64
XA_A^_^[]
xA_A^A]A\_^[]
XapState
xBL9eHt<A
Xbox.DisplayTroubleshooter_cw5n1h2txyewy
Xbox.KinectTuner_cw5n1h2txyewy
Xbox.NetworkTroubleshooter_cw5n1h2txyewy
Xbox.Oobe_cw5n1h2txyewy
Xbox.SystemUpdate_cw5n1h2txyewy
XboxPackage
XbVS>
XcvDataW
xD8t$xtn
xdigit
xI;o(r
xID9m0u
XJZb\N^L`0b
xKI;w
xs@8u
y uDL
y&D9O
Y;\$8tQ
y<FQ1
YD8}gu
YXW>9
yxxxxxxxI
Z2b/8
