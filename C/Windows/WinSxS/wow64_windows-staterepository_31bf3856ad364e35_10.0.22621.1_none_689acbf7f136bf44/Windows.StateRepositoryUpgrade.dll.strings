                                     Callstack: %p %p %p %p %p %p %p %p %p %p %p %p
 0'0U0d0
 Microsoft Corporation. All rights reserved.
 Operating System
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p._WorkId=0 AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1) AND (p.PackageFamily NOT IN (SELECT PackageFamily FROM Package WHERE Flags&0x400!=0 GROUP BY PackageFamily)) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
 Windows
!MachineDatabase_PagesCheckpointed
!This program cannot be run in DOS mode.
"PackageDependency.LifetimeArtifact
#Deleted
#Found
#PackageDependency.PackageFamilyName
$DeploymentDatabase_PagesCheckpointed
$onecore\base\appmodel\staterepository\dataaccesslayer\text.cpp
%02u%02u%02u %02u%02u%02u.%03u [%s 0x%08X] P%x T%x: %s
%02u%02u%02u %02u%02u%02u.%03u [Profile %ums] P%x T%x: %s
%02u%02u%02u %02u%02u%02u.%03u [Trace] P%x T%x: %s
%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X
%AppRepository%
%AppRepository%\Downlevel\StateRepository-Machine.srd
%AppRepository%\StateRepository-Deployment.srd
%AppRepository%\StateRepository-Machine.srd
%AppRepository%\StateRepository-User-%UserSid%.srd
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
%s.%s
%s.%s%s
%USERPROFILE%
&PWSV
(caller: %p) 
,00040<0d0
.![AM
.00cfg
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.data
.data$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gfids
.giats
.idata
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.rdata
.rdata$brc
.rdata$sxdata
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$x
.text$yd
.xdata$x
:!:/:
:!;5;c;i;
:$:1:8:E:L:S:h:
:%:/:
:&:5:<:a:e:j:p:v:|:
:):@:
:):a:g:s:z:
:':9:_:
:]N2Y
:0e0t0
:4:n:
:8:?:F:
:B:6;h;
:B:N;s;
:R;W;m;y;
:S:k:}:
:W;];
;#<G<
;%;3;S;o;
;&;I;d;{;
;(;m;
;*<;<D<K<R<f<m<t<
;,<N<x<
;.;G;X;^;h;n;t;
;-;D;m;
;+<6<K<}<
;0<c<
;2;9;j;
;3;?;W;u;
;4;>;O;Y;h;
;5;?;E;U;|;
;6<=<C<P<Y<n<w<
;F;S;^;d;};
;G;M;k;~;
?!?,?A?G?S?a?g?s?
?&?:?
?(?z?
?.?6?Q?Y?t?~?
?:?U?p?
?'?1?N?Y?v?
?-?5?H?Q?`?n?v?
?>?K?S?[?a?|?
?0?w?~?
?6?J?b?{?
?A?g?
?B?P?b?
@.didat
@.reloc
@tQhX
[%hs(%hs)]
[%hs]
[checkstatements] #%u Database %p: Statement %p: %s SQL %s
[post-sqlite3_exec] #%u Database %p: Try %u (%llums) {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X} TID:%u : SQL %s
[post-sqlite3_finalize] #%u Database %p: Statement %p: --
[post-sqlite3_prepare] #%u Database %p: Statement -------- --: Try %u (%llums) : SQL %s
[post-sqlite3_prepare] #%u Database %p: Statement %p %s: Try %u (%llums) : SQL %s
[post-sqlite3_reset] #%u Database %p: Statement %p: %s
[post-sqlite3_step] #%u Database %p: Statement %p %s: Tries %u
[pre-sqlite3_exec] #%u Database %p {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X} TID:%u : SQL %s
[pre-sqlite3_finalize] #%u Database %p: Statement %p: %s
[pre-sqlite3_prepare] #%u Database %p : SQL %s
[pre-sqlite3_reset] #%u Database %p: Statement %p: %s
[pre-sqlite3_step] #%u Database %p: Statement %p %s
[pre-StatementCache.Get] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[sqlite3_close] #%u Database %p: %s
[sqlite3_exec] #%u Database %p: Try %u (%llums) {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}%s%s TID:%u %s : SQL %s
[sqlite3_finalize] #%u Database %p: Statement %p: --: %s
[sqlite3_prepare] #%u Database %p: Try %u (%llums) %s : SQL %s
[sqlite3_prepare] #%u Database %p: Try %u (%llums)%s%s %s : SQL %s
[sqlite3_reset] #%u Database %p: Statement %p: %s: %s
[sqlite3_step] #%u Database %p: Statement %p %s: Try %u (%llums)%s%s %s : SQL %s
[StatementCache.Add] #%u Database %p: StatementCache %p: Statement %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
[StatementCache.Get(Hit)] #%u Database %p: StatementCache %p: Statement %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
[StatementCache.Get(Miss)] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
\$ PQQ
\$,PQh
\$,WWhP}
\$8WVRP
_^[Y]
__CxxFrameHandler3
__dllonexit
_amsg_exit
_callnewh
_except_handler4_common
_initterm
_lock
_onexit
_purecall
_stricmp
_unlock
_vsnprintf
_vsnwprintf
_XcptFilter
`.data
|$$@hP
<!<4<^<
<!<Q<
<"=m=
<$<8<
<%<@<~<
<%<><X<
<*<3<:<]<
<,<Q<
</<A<
<@=G=M=R=i=
<1=U=
<5=F=R=^=
<A<[<u<
<B=f=
<Error 0x%X converting the user's SID to a string>
<Error 0x%X getting the user's SID from the process' token>
<Error 0x%X in GetApplicationUserModelIdFromToken>
<Error 0x%X in GetPackageFullName>
<Error 0x%X in NtQueryInformationProcess>
<Error 0x%X in OpenProcessToken>
<Error 0x%X in QueryFullProcessImageNameW>
<Error 0x%X moving command line>
<Error allocating memory>
<No commandline present>
<no-error-message>
<None>
<null>
<onecore\base\appmodel\staterepository\upgrade\lib\migrator-deployment.activation.cpp
<Q=V=k=
<Unknown>
= =%=*=;=`=n=y=~=
= =I=
=#=*=2=I=d=s>{>
=#=V=
=%=J=
=(=3=L=W=f=o=u=z=
=,=L=
=.>n>
=3>?>K>W>u>
=5>Q>
=7>C>Q>Y>
=a=s=x=
=E=x=
=J>R>Y>r>
=O>^>x>
>"?Z?j?w?
>">7>=>B>I>`>
>#?V?
>#>0>5>E>K>h>r>
>(>1>=>E>W>
>)>5>=>_>A?H?
>*?F?j?
>->6>k>
>->r>
>0>J>
>0>V>y>
>2>M>
>5>E>L>Z>
>P>t>
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0!0>0H0n0x0
0"0J0
0#0G0r0
0$1(10181P1
0%050U0e0
0)0:0
0,060P0V0u0
0@1u1~1
0]1d2
0>0`0x0
0>0L0
004080
0123456789abcdefghjkmnpqrstvwxyz
02181x1
040904B0
0A0s0
0I0l0
0L1y1
0N0^0e0
0W0}0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1$1,1?1H1\1g1o1
1&2_2
1.2:2B2R2Z2o2w2
1;1l1
1+2[2
10.0.22621.1
10.0.22621.1 (WinBuild.160101.0800)
101L1P1`1
121P1
161Z1u1
171<1A1n1~1
1l1v1
1P1Z1
1r1y1
1T2a4
1U1g1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2 262G2k2z2
2 2W2~2
2%262}2
2&2o2
2&3V3|3
2)2A2|2
2=2E2K2Y2
203\3j3q3x3
222I2x2
2'2Z3
242L2q2
252s2
272?2F2L2R2
282{2
283r3
2C2M2d2j2n2s2y2}2
2D2p2y2
2e3q3
2f3l3r3x3
2I2d2m2
2N3]3i3
3 3(3;3D3X3c3k3
3 3,343
3 4&494A4P4a4g4z4
3"4e4
3$3.3@3]3i3r3~3
3(3=3O3g3r3
3,535C5a5
3:3G3
3_3l3
304Z4a4l4~4
3-353<3B3L3V3d3
343=3I3Q3r3$4-494A4X4x4
3'4M4\4d4
383<3`3d3
384z4
393k3
393T3m3
3l5q5w5
4"4X4~4
4#5J5\5c5
4$4-464@4R4q4w4
4(4,4P4T4
4?5v5
404b4r4z4
415I5
4'4D4f4
4F4X4l4
4R5j5
4SVWQQ
4W4s4
4Yj%V
5!616l6
5"5/555X5r5x5
5#6n6}6
5$696S6
5%505Y5r5
5&6Z6
5*555;5@5E5J5O5T5Y5^5c5h5
5.5@5T5t5
5/6J6}6
5:5[5d5s5
5:9^9{9
5;6K6R6r6
5^6w6
506^6
535A5w5
545@5G5V5
545s5
565Q5r5v5|5
575h5
5d5j5
5D5Y5
6!6&6G6P6V6_6r6|6
6"6C6
6#6*6b6t6
6&6R6
6(6z6
6*606?6F6M6[6b6j6u6
6>6a6
606C6`6{6
60787f7
616Q6q6
637A7
6A7g7
6b6(7~7
6C6]6~6
6L6R6h6t6z6
6Y7|7
7!7(7/7=7D7L7W7u7~7
7!7)71797E7N7S7Y7c7m7}7
7$7-797F7]7g7{7
7*7K7Y7k7
7:8E8R8\8
7_8d8i8n8s8x8
7=7_7~7
70@0K0r1
717+9
767N7X7v7
7F7Q7c7j7r7z7
7K7q7x7
7M7R7X7c7h7n7
8"8F8O8
8(9-9?9]9q9w9+:F:d:s:|:
8)939=9V9s9
8@9I9d9v9
8+9G9
8<8V8b8t8
808H8X8a8f8o8|8
819C9
828T8z8
83898U8
858I8
8-8Z8
8A9b9i9
8G8f8
8g9q9
8Y9l9
9"969N9
9):6:]:
9):O:
9.:z:
9;:E:R:~:
9\$ t
9\$,t
919A9K9^9
93uHWV
96:@:H:O:b:l:t:{:
969%:
969Y9
97s/j
9-9A9Q9e9
9E9L9S9
9Q9x9
9R:k:
9r\sE
AccessControlFlags
AcquireSRWLockExclusive
AcquireSRWLockShared
Action
ActivityError
ActivityFailure
ActivityIntermediateStop
ActivityStoppedAutomatically
AddExtensionProgId
api-ms-win-appmodel-runtime-internal-l1-1-1.dll
api-ms-win-appmodel-runtime-internal-l1-1-4.dll
api-ms-win-appmodel-runtime-l1-1-1.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-psapi-l1-1-0.dll
api-ms-win-core-realtime-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-windowserrorreporting-l1-1-1.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-lsalookup-l1-1-0.dll
api-ms-win-security-lsalookup-l2-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
ApplicationUserModelId
AppModelPackageRepository
AppUriHandler::AddExtensionProgId
AppXdbszz9cysstkgdz6xk17sywkqb7gjj0v
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs
AppxRoot
ATTACH DATABASE '%s' AS '%s';
automatic index on PackageIdByAll(_PackageID)
AWSRV
Bcrypt.dll
BCryptCloseAlgorithmProvider
BCryptCreateHash
BCryptDestroyHash
BCryptFinishHash
BCryptGetProperty
BCryptHashData
BCryptOpenAlgorithmProvider
BEGIN -> COMMIT;
BEGIN -> ROLLBACK;
BEGIN EXCLUSIVE /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
BPQRhl
BusyCount
BusyDelayBetweenRetries
BusyMaxTimeout
BusyTimeout
Cache.Count
Cache.Hits
Cache.Misses
CacheHit
CacheMiss
CacheSpill
CacheUsed
CacheWrite
callContext
CallContext:[%hs] 
cannot start a transaction within a transaction
Category
ChannelName
Checkpoint
CheckpointInterval
CheckpointMaxClockDelta
Clear
ClientId
CloseHandle
CloseThreadpoolTimer
CommandLine
Commit
COMMIT /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
CompanyName
CompareStringOrdinal
Context
context.RecordPatchIsApplied
ConvertSidToStringSidW
CopySid
Count
count
Count
countApplication
countApplicationExtension
countPackageExtension
Cpu:%d%s Mem:%d%s Io:%d%s
CpuPriority
CreatedSchemaVersion
CreateFileW
CreateMutexExW
CreateSemaphoreExW
CreateSetting: Subkey=%ls
CreateThreadpoolTimer
CreateWellKnownSid
CRIM,
Critical
currentContextId
currentContextMessage
currentContextName
D$ 9G
D$ Pj
D$ PQ
D$$Pj
D$(Pj
D$(PQ
D$@Pj
D$\9D$
D$^WP
D$`9D$
D$`SVWQQj
D$0Pj
D$4PQQ
D$4PQQW
D$8Pj
D$djd_
D$hjd_
D$HPj
D$HSV
D$HWP
D$ljd_
D$PSPj
D$TSP
D$tVW
D$xPj
D$XPj
DAL.Initialize
Database
DatabaseCache.Lifespan
DatabaseCorruption.Detected
DatabaseCorruptionFirstDetectedUptime
DatabaseCorruptionFirstDetectedWhen
DatabaseCorruptionLastReported
DatabasePtr
DatabaseStatisticsUpdateInterval
DatabaseStatisticsUpdateMaintenanceTaskInterval
DatabaseStatisticsUpdateMaxClockDelta
DebugBreak
DelayLoadFailureHook
DELETE FROM ApplicationUser;
DELETE FROM PackageAppInstaller WHERE _PackageAppInstallerID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageAppInstaller WHERE _PackageAppInstallerID=? AND _WorkId=0;
DELETE FROM PrimaryTileUser WHERE ApplicationIdentity IN ( SELECT _ApplicationIdentityID FROM ApplicationIdentity WHERE (ApplicationUserModelId LIKE ?1 || '!%')) AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PrimaryTileUser WHERE ApplicationIdentity IN ( SELECT _ApplicationIdentityID FROM ApplicationIdentity WHERE (ApplicationUserModelId LIKE ?1 || '!%')) AND _WorkId=0;
DeleteCriticalSection
Deleted
Deployment
Deployment.Activation
Deployment.Extensions.FixProgId
Deployment.OptionalPackage.FixDependencyType
Deployment.Package.PopulateMostRecentlyStaged
Deployment.SetSchemaVersion.Open
Deployment.SetSchemaVersion.SetSchemaVersion
DeploymentDatabase
DeploymentDatabase_Pages
DeploymentDatabase_PagesCheckpointed
DeploymentDatabaseAutoCheckpoint
DeploymentDatabaseCacheSize
DeploymentDatabaseCheckpointThreshold
DeploymentDatabaseFileChunkSize
DeploymentDatabaseJournalSizeLimit
DeploymentDatabaseOptions
DeploymentDatabasePageSize
DeploymentDisposition
DeploymentJournalSize_After
DeploymentJournalSize_Before
DeploymentSize_After
DeploymentSize_Before
DETACH DATABASE '%s';
Disposition
DownlevelMachineDatabase
DownlevelMachineDatabaseAutoCheckpoint
DownlevelMachineDatabaseCacheSize
DownlevelMachineDatabaseCheckpointThreshold
DownlevelMachineDatabaseFileChunkSize
DownlevelMachineDatabaseJournalSizeLimit
DownlevelMachineDatabaseOptions
DownlevelMachineDatabasePageSize
Elapsed
ElapsedTime
ElapsedTimeMSec
EnterCriticalSection
Entity
en-US
EqualSid
Error
Error 0x%X in BeginTransaction recording StateRepository migration patches
Error 0x%X opening the Deployment partition to record StateRepository schema version
Error 0x%X opening the Machine partition to record StateRepository migration patches
Error 0x%X opening the Machine partition to record StateRepository schema version
Error 0x%X setting the Deployment partition StateRepository schema version
Error 0x%X setting the Machine partition StateRepository schema version
ErrorCode
ErrorCount
EventActivityIdControl
EventData
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
Exception
ExecutableName
ExpandedSQL
ExpandedSQL=%hs
Extensions
ext-ms-onecore-appmodel-staterepository-cache-l1-1-4.dll
ext-ms-win-security-capauthz-l1-1-1.dll
FailFast
FailFastBusySnapshot.StatementInProgress: #%u Index=%u Database=%p Statement=%p SQL=%s
FailFastBusySnapshot: Statements Total=%u Busy=%u Database=%p FirstBusySQL=%hs
Failure
FailureCount
failureCount
FailureCount
failureId
failureType
FallbackError
Field
Fields
FileDescription
fileName
Filename
fileName
Filename
fileName
Filename
fileName
Filename
fileName
Filename
fileName
Filename:%s, SQL:%s, TxCallerId:%hs %ls
FileTypeAssociation::AddExtensionProgId
FileVersion
FirstBusySQL
FirstReportedUptime
FirstReportedWhen
FixAppUriHandlerProgId
FixCount
FixFileTypeAssociationProgId
FixNullString() hr=0x%08X SQL='%hs'
FixProtocolProgId
FormatMessageW
Found
FoundSchemaVersion
FreeLibrary
function
FxVh0
G;~0r
GCChangelogsInterval
GCTimeToLiveExpiredInterval
GetApplicationUserModelIdFromToken
GetChanges() called but !db.IsOpen()
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetFileAttributesW
GetLastError
GetLastInsertRowID() called but !db.IsOpen()
GetLengthSid
GetLocalTime
GetModuleFileNameA
GetModuleHandleExA
GetModuleHandleExW
GetModuleHandleW
GetPackageFullNameFromToken
GetPersistedRegistryLocationW
GetProcAddress
GetProcessHeap
GetSystemTimeAsFileTime
GetTempPath2W
GetTempPathW
GetTickCount
GetTokenInformation
HashDigestLength
HeapAlloc
HeapFree
hrApplication
hrApplicationExtension
hrBeginTx
hrCommit
hrDeployment
hresult
HResult
hresult
hrExecute
hrFullTrustProcess
hrMachine
hrPackageExtension
Index
Information
InitializeCriticalSectionEx
InitOnceBeginInitialize
InitOnceComplete
INSERT INTO Activation (_Revision, ActivationKey, Flags, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?);
INSERT INTO ApplicationUser (_Revision, _WorkId, User, ApplicationIdentity, Application, Package, PackageUser)SELECT 1, 0, pu.User, ai._ApplicationIdentityID, a._ApplicationID, pu.Package, pu._PackageUserID FROM PackageUser AS pu INNER JOIN Application AS a ON a.Package=pu.Package INNER JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId WHERE pu._WorkId=0;
INSERT INTO MigratorPatch (_Revision, _WorkId, PatchId, HResult, StateRepositoryVersion, "When", _Dictionary) VALUES(?,?,?,?,?,?,?);
InternalName
IoPriority
IsDebuggerPresent
IsInAutoCommitMode() called but !db.IsOpen()
Issue
kernelbase.dll
KEYWp
L$ VW3
L$ WWh
L$$SVW
L$\Sh
L$4^3
L$l_^[3
L$lt!S
L$T_^[3
LastKnownStatus
LeaveCriticalSection
LegalCopyright
lineNumber
LineNumber
lineNumber
LoadLibraryExW
Local AppData
Local\SM0:%lu:%lu:%hs
LocalAlloc
LocalFree
LogHr
LogNt
LogStagedFeatureUsage
LookasideHitPeak
LookasideMissFullPeak
LookasideMissSizePeak
LookasideUsed
LookasideUsedPeak
LookupAccountSidW
LsaLookupClose
LsaLookupFreeMemory
LsaLookupGetDomainInfo
LsaLookupOpenLocalPolicy
Machine
Machine.SetSchemaVersion.Open
Machine.SetSchemaVersion.SetSchemaVersion
MachineDatabase
MachineDatabase_Pages
MachineDatabase_PagesCheckpointed
MachineDatabaseAutoCheckpoint
MachineDatabaseCacheSize
MachineDatabaseCheckpointThreshold
MachineDatabaseFileChunkSize
MachineDatabaseJournalSizeLimit
MachineDatabaseOptions
MachineDatabasePageSize
MachineDisposition
MachineJournalSize_After
MachineJournalSize_Before
MachineSize_After
MachineSize_Before
MaintenanceInterval
MaintenanceMaxClockDelta
MaintenancePerformed
malloc
MallocCount
MallocCountPeak
MallocSizePeak
memcmp
memcpy
memcpy_s
memmove
memmove_s
MemoryPriority
MemoryUsed
MemoryUsedPeak
memset
Message
message
Method
Microsoft
Microsoft Corporation
Microsoft.deployFullTrustOnHost_8wekyb3d8bbwe
Microsoft.Windows.SecondaryTileExperience_cw5n1h2txyewy
Microsoft.Windows.StateRepository.Service
Microsoft.Windows.StateRepository.Upgrade
MicrosoftTelemetryAssertTriggeredUM
Microsoft-Windows-StateRepository
Microsoft-Windows-StateRepository/Debug
Microsoft-Windows-StateRepository/Diagnostic
Microsoft-Windows-StateRepository/Operational
Microsoft-Windows-StateRepository/Restricted
Migrator.Deployment.Activation
Migrator.StateRepository.Activation
Migrator.StateRepository.ApplicationUser
Migrator.StateRepository.HasRunFullTrustCapability
Migrator.StateRepository.NeedsContainerRegistration
Migrator.StateRepository.NullString
MigratorErrors
module
ms:CriticalData
ms:Measures
ms:ReservedKeyword44
ms:Telemetry
Msg:[%ws] 
msvcrt.dll
MultiByteToWideChar
ntdll.dll
NtQueryInformationFile
NtQueryInformationProcess
NtQueryInformationThread
NtQueryWnfStateData
NtSetInformationThread
NtUpdateWnfStateData
ObjectLength
onecore\base\appmodel\common\base32encoding.cpp
onecore\base\appmodel\common\bytebuffer.cpp
onecore\base\appmodel\common\cryptoprovider.cpp
onecore\base\appmodel\common\pathhelpers.cpp
onecore\base\appmodel\common\registrykey.cpp
onecore\base\appmodel\common\sidhelper.cpp
onecore\base\appmodel\common\stateseparation.cpp
onecore\base\appmodel\common\stringbuilder.cpp
onecore\base\appmodel\common\userprofile.cpp
onecore\base\appmodel\common\widestring.cpp
onecore\base\appmodel\staterepository\common\inc\Security.hpp
onecore\base\appmodel\StateRepository\Common\Inc\Security.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\blob.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\database.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\databasecachesingleton.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\datatype-hasher.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\datatype-progid.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-activation.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-activation-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appinstaller.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-application.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-application-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationextension.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationextension-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationuser-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandler.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependency-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-filetypeassociation.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-migrator-deployment-fixprogidinfo.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-migratorpatch.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-package.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageappinstaller.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-package-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageextension.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageextension-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuser-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-protocol.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\globals.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\logging.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\repository.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\resourcepriority.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\ResourcePriority.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\statement.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\Statement.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\statementcache.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\StatementCache.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\statementexecution.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\Utf16String.hpp
onecore\base\appmodel\staterepository\upgrade\inc\Context.hpp
onecore\base\appmodel\staterepository\upgrade\lib\migrate.cpp
onecore\base\appmodel\staterepository\upgrade\lib\migrator-deployment.extensions.fixprogid.cpp
onecore\base\appmodel\staterepository\upgrade\lib\migrator-deployment.optionalpackage.fixdependencytype.cpp
onecore\base\appmodel\staterepository\upgrade\lib\migrator-deployment.package.populatemostrecentlystaged.cpp
onecore\base\appmodel\staterepository\upgrade\lib\migrator-staterepository.activation.fulltrustprocess.cpp
onecore\base\appmodel\staterepository\upgrade\lib\migrator-staterepository.appinstaller.cpp
onecore\base\appmodel\staterepository\upgrade\lib\migrator-staterepository.applicationuser.cpp
onecore\base\appmodel\staterepository\upgrade\lib\migrator-staterepository.hasrunfulltrustcapability.cpp
onecore\base\appmodel\staterepository\upgrade\lib\migrator-staterepository.needscontainerregistration.cpp
onecore\base\appmodel\staterepository\upgrade\lib\migrator-staterepository.nullstring.cpp
onecore\base\appmodel\staterepository\upgrade\lib\migrator-staterepository.primarytileuser.deleteendoflifetiles.cpp
onecore\base\appmodel\staterepository\upgrade\lib\migrator-tdr.tdl.import.cpp
onecore\internal\sdk\inc\wil\opensource/wil/result.h
onecore\internal\sdk\inc\wil\opensource/wil/token_helpers.h
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\internal\sdk\inc\wil\Staging.h
onecore\private\base\inc\AppModel\Common\FileInUse.hpp
onecore\private\base\inc\appmodel\staterepository\dal/Database.hpp
onecore\private\base\inc\appmodel\staterepository\dal/Repository.hpp
OpenProcess
OpenProcess() failed on %u of %u for %hs
OpenProcessToken
OpenSemaphoreW
OpenSetting: Subkey=%ls
OpenThreadToken
Options
OriginalFilename
originatingContextId
originatingContextMessage
originatingContextName
OutputDebugStringW
Package %ls has FullTrust content
Package %ls has IsVailPackaged set
PackageDependency.Architectures
PackageDependency.Flags
PackageDependency.LifetimeArtifact
PackageDependency.LifetimeKind
PackageDependency.MinVersion
PackageDependency.PackageFamilyName
PackageDependency.PrimaryKey
PackageDependency.User
PackageFamilyName
PackageFullName
PackageRepositoryRoot
PageCacheOverflow
PageCacheOverflowPeak
PageCachePeak
PageCacheUsed
PageCacheUsedPeak
PartA_PrivTags
Partition
PathCchCombine
PersistedCount
Phase
Pj&h(
Policy.Aggressive.ConnectionMaxAge
Policy.Aggressive.ConnectionMaxCount
Policy.Aggressive.ConnectionMinCount
Policy.Aggressive.GCInterval
Policy.Aggressive.StatementMaxAge
Policy.Aggressive.StatementMaxCount
Policy.Aggressive.StatementMinCount
Policy.Normal.ConnectionMaxAge
Policy.Normal.ConnectionMaxCount
Policy.Normal.ConnectionMinCount
Policy.Normal.GCInterval
Policy.Normal.StatementMaxAge
Policy.Normal.StatementMaxCount
Policy.Normal.StatementMinCount
PQQSVW
PRAGMA %s=%I64d;
PreviousDeploymentVersion
PreviousMachineVersion
Priorities
ProcessCount
ProcessId
ProcessIdToSessionId
ProcessIndex
ProcessingSQL
ProductName
ProductVersion
Profile
ProfileImagePath
Protocol::AddExtensionProgId
PRVAX
PRWWh
PSj4Z
PSj7Z
PSjBZ
PSjGZ
PSjOZ
PVj$Z
PVj%Z
PVj&Z
PVj(Z
PVj3Z
PVj4Z
PVjGZ
PVjKZ
PVjLZ
PVjMZ
PVjNZ
PVjOZ
PVjPZ
PVjQZ
PVjRZ
PVjSZ
PVj-Z
PVQhp
PVQWRSh
PWj4Z
QQSVW
QRPVWh@
QSVWh
QueryApplicationCapabilitiesEx
QueryFullProcessImageNameW
QueryPerformanceCounter
QueryUnbiasedInterruptTime
RaiseException
RaiseFailFastException
ReadSetting: Name=%ls
realloc
RecordPatchIsApplied.BeginTransaction
RecordPatchIsApplied.Open
RegCloseKey
RegCreateKeyExW
RegDeleteTreeW
RegOpenKeyExW
RegQueryValueExW
RegSetValueExW
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
ReleaseSRWLockShared
RepairGhostMinimumAgeForDeletion
Required configuration data not found: %ws
ResolvedCount
ResolveDelayLoadedAPI
ReturnHr
ReturnNt
Revision
RoGetActivationFactory
ROLLBACK /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
RPQhp
RRRPQ
RtlAcquireSRWLockExclusive
RtlAcquireSRWLockShared
RtlAllocateHeap
RtlCaptureStackBackTrace
RtlCompareUnicodeString
RtlConvertSidToUnicodeString
RtlDeleteElementGenericTableAvl
RtlDeriveCapabilitySidsFromName
RtlDetermineDosPathNameType_U
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlEnumerateGenericTableWithoutSplayingAvl
RtlExpandEnvironmentStrings
RtlFreeHeap
RtlFreeUnicodeString
RtlGetDeviceFamilyInfoEnum
RtlInitializeGenericTableAvl
RtlInitUnicodeString
RtlInsertElementGenericTableAvl
RtlIsStateSeparationEnabled
RtlLookupElementGenericTableAvl
RtlNotifyFeatureUsage
RtlNtStatusToDosErrorNoTeb
RtlRegisterFeatureConfigurationChangeNotification
RtlReleaseSRWLockExclusive
RtlReleaseSRWLockShared
RtlUnregisterFeatureConfigurationChangeNotification
runFullTrust
SchemaUsed
SchemaVersion
Scope
ScratchOverflow
ScratchOverflowPeak
ScratchSizePeak
ScratchUsed
ScratchUsedPeak
SELECT _ActivationID, _Revision, ActivationKey, Flags, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, _Dictionary FROM Activation WHERE ActivationKey IS ?;
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE (_WorkId=0 OR _WorkId=?);
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE _WorkId=0;
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE Category=?1 AND (Flags & ?2 = 0 OR Flags & ?3 = 0) AND (_WorkId=0 OR _WorkId=?4);
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE Category=?1 AND (Flags & ?2 = 0 OR Flags & ?3 = 0) AND _WorkId=0;
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE (_WorkId=0 OR _WorkId=?);
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE _WorkId=0;
SELECT _PackageAppInstallerID, _Revision, _WorkId, Package, AppInstaller, _Dictionary FROM PackageAppInstaller WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageAppInstallerID, _Revision, _WorkId, Package, AppInstaller, _Dictionary FROM PackageAppInstaller WHERE _WorkId=0;
SELECT _PackageAppInstallerID, _Revision, _WorkId, Package, AppInstaller, _Dictionary FROM PackageAppInstaller WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageAppInstallerID, _Revision, _WorkId, Package, AppInstaller, _Dictionary FROM PackageAppInstaller WHERE Package=? AND _WorkId=0;
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageType & ? !=0 AND Flags & ? =0 AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageType & ? !=0 AND Flags & ? =0 AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageType & ? !=0 AND Flags2 & ? !=0 AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageType & ? !=0 AND Flags2 & ? !=0 AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageType & ? !=0 AND Flags2 & ? =0 AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageType & ? !=0 AND Flags2 & ? =0 AND _WorkId=0;
SELECT _Revision, _WorkId, FileType, ContentType, Extension, "Index", ProgID, _Dictionary FROM FileTypeAssociation WHERE _FileTypeAssociationID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, FileType, ContentType, Extension, "Index", ProgID, _Dictionary FROM FileTypeAssociation WHERE _FileTypeAssociationID=? AND _WorkId=0;
SELECT _Revision, _WorkId, HostName, Path, Extension, ProgID, AppUriHandlerGroup, _Dictionary FROM AppUriHandler WHERE _AppUriHandlerID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, HostName, Path, Extension, ProgID, AppUriHandlerGroup, _Dictionary FROM AppUriHandler WHERE _AppUriHandlerID=? AND _WorkId=0;
SELECT _Revision, _WorkId, ProtocolName, ReturnResults, Extension, "Index", ProgID, _Dictionary FROM Protocol WHERE _ProtocolID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, ProtocolName, ReturnResults, Extension, "Index", ProgID, _Dictionary FROM Protocol WHERE _ProtocolID=? AND _WorkId=0;
SELECT _Revision, ActivationKey, Flags, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, _Dictionary FROM Activation WHERE _ActivationID=?;
SELECT _Revision, PackageFamily, Uri, Version, LastChecked, CheckUpdateInterval, Flags, PauseUntil, _Dictionary FROM AppInstaller WHERE _AppInstallerID=?;
SELECT auh._AppUriHandlerID, auh.HostName, p.PackageFullName, pf.PackageFamilyName, a.PackageRelativeApplicationId, a.ApplicationUserModelId, ae.Activation FROM ApplicationExtension AS ae INNER JOIN AppUriHandler AS auh ON auh.Extension=ae._ApplicationExtensionID INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE ae.category='windows.appUriHandler';
SELECT EXISTS(SELECT 1 FROM AppInstaller WHERE _AppInstallerID=? LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE _ApplicationExtensionID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE _ApplicationExtensionID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppUriHandler WHERE _AppUriHandlerID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppUriHandler WHERE _AppUriHandlerID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM FileTypeAssociation WHERE _FileTypeAssociationID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM FileTypeAssociation WHERE _FileTypeAssociationID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Protocol WHERE _ProtocolID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Protocol WHERE _ProtocolID=? AND _WorkId=0 LIMIT 1);
SELECT Flags, Subsystem, HostId, Executable, Entrypoint, StartPage, ResourceGroup FROM Application WHERE _ApplicationID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT Flags, Subsystem, HostId, Executable, Entrypoint, StartPage, ResourceGroup FROM Application WHERE _ApplicationID=? AND _WorkId=0;
SELECT fta._FileTypeAssociationID, fta.FileType, p.PackageFullName, pf.PackageFamilyName, a.PackageRelativeApplicationId, a.ApplicationUserModelId, ae.Activation FROM ApplicationExtension AS ae INNER JOIN FileTypeAssociation AS fta ON fta.Extension=ae._ApplicationExtensionID INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE ae.category='windows.fileTypeAssociation';
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p WHERE (p.PackageFamily, p.Version, p.PackageType) IN ( SELECT PackageFamily, MAX(Version), PackageType FROM Package WHERE _PackageID IN (SELECT Package FROM PackageAppInstaller) AND PackageType & ? != 0 AND (_WorkId=0 OR _WorkId=?) GROUP BY PackageFamily);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p WHERE (p.PackageFamily, p.Version, p.PackageType) IN ( SELECT PackageFamily, MAX(Version), PackageType FROM Package WHERE _PackageID IN (SELECT Package FROM PackageAppInstaller) AND PackageType & ? != 0 AND _WorkId=0 GROUP BY PackageFamily);
SELECT pr._ProtocolID, pr.ProtocolName, p.PackageFullName, pf.PackageFamilyName, a.PackageRelativeApplicationId, a.ApplicationUserModelId, ae.Activation FROM ApplicationExtension AS ae INNER JOIN Protocol AS pr ON pr.Extension=ae._ApplicationExtensionID INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE ae.category='windows.protocol';
ServiceIdleTimeout
ServiceWaitHintInterval
SessionId
SetLastError
SetProtocolProperty
SetThreadpoolTimer
SetThreadToken
SetUnhandledExceptionFilter
SHA256
Sleep
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\PackageRepository
Software\Microsoft\Windows NT\CurrentVersion\ProfileList
SOFTWARE\Microsoft\Windows\CurrentVersion\AppModel\StateRepository
SOFTWARE\Microsoft\Windows\CurrentVersion\AppModel\StateRepositoryStatus
SOFTWARE\Microsoft\Windows\CurrentVersion\Appx
Software\Microsoft\Windows\CurrentVersion\Appx
Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders
SQLite.AutoIndexWarning
sqlite3_bind_blob
sqlite3_bind_int
sqlite3_bind_int64
sqlite3_bind_text16
sqlite3_changes
sqlite3_clear_bindings
sqlite3_close
sqlite3_column_blob
sqlite3_column_bytes
sqlite3_column_int
sqlite3_column_int64
sqlite3_column_text16
sqlite3_config
sqlite3_db_filename
sqlite3_db_handle
sqlite3_db_status
sqlite3_errcode
sqlite3_errmsg
sqlite3_exec
sqlite3_expanded_sql
sqlite3_finalize
sqlite3_free
sqlite3_get_autocommit
sqlite3_last_insert_rowid
sqlite3_log
sqlite3_next_stmt
sqlite3_prepare_v2
sqlite3_reset
sqlite3_shutdown
sqlite3_snprintf
sqlite3_sql
sqlite3_status
sqlite3_step
sqlite3_stmt_busy
sqlite3_vfs_unregister
SQQPQQPh
SRCacheContext_CacheShutdown
SSSSh
SSSSSSSS
SSSWh
StatementCache.Count
StatementCache.Hits
StatementCache.Lifespan
StatementCache.Misses
StatementCount
StatementPtr
StatementUsed
StateRepository.Activation.FullTrustProcess
StateRepository.AppInstaller
StateRepository.ApplicationUser
StateRepository.Core.dll
StateRepository.Database.Statistics
StateRepository.DatabaseCache.Statistics
StateRepository.FailFastBusySnapshot
StateRepository.FailFastBusySnapshot.BusyCount
StateRepository.FailFastBusySnapshot.DatabasePtr
StateRepository.FailFastBusySnapshot.FirstBusySQL
StateRepository.FailFastBusySnapshot.Statement#%u.ExpandedSQL
StateRepository.FailFastBusySnapshot.Statement#%u.Ptr
StateRepository.FailFastBusySnapshot.Statement#%u.SQL
StateRepository.FailFastBusySnapshot.StatementCount
StateRepository.FailFastBusySnapshot.StatementInProgress
StateRepository.HasRunFullTrustCapability
StateRepository.log
StateRepository.NeedsContainerRegistration
StateRepository.NullString
StateRepository.PrimaryTileUser.DeleteEndOFLifeTiles
StateRepository.ResourcePriority.Inadequate
StateRepository.Task.DataAccessLayer
StateRepository.Task.Migrate
StateRepository.Task.WinRTAPI
StateRepository_DataAccessLayer_DatabaseCache_Add
StateRepository_DataAccessLayer_DatabaseCache_Get
STATEREPOSITORY_KEYWORD
StateRepository_Migrate
STATEREPOSITORY_PERF_KEYWORD
StateRepository_Service_UpdateStatus
StateRepositoryStatus
StringFileInfo
Subkey
SuccessCount
SVj$Z
SVj;Z
SVj0Z
SVWj83
t$\Qhh
t$|SW
T$0QQV
t$HRQV
t$hSW
t$HSWVQP
t$Ph 
T$pRQ
t$TRQ
t.Ph0
t>9\$
TASK0
TDR.TDL.Import
TEMP 
TEMP$
TEMP(
TEMP,
TEMP`
TEMP|
TEMP<
TEMP4
TEMP8
TEMPD
TEMPH
TEMPh
TEMPH
TEMPl
TEMPP
TEMPp
TEMPX
TerminateProcess
tFh<%
threadId
ThreadId
threadId
ThreadId
threadId
ThreadId
threadId
TimeoutMSec
Trace
TransactionCallerId
TransactionCallerID
TransactionCallerId
TransientCount
Translation
TTBLh
u$WSQ
u;9GHt3j
u19GHt)j
u4RPj
u6QPj
UnhandledExceptionFilter
UPDATE AppInstaller SET _Revision=?, PackageFamily=?, Uri=?, Version=?, LastChecked=?, CheckUpdateInterval=?, Flags=?, PauseUntil=?, _Dictionary=? WHERE _AppInstallerID=? AND _Revision=?;
UPDATE Application SET Activation=? WHERE _ApplicationID=? AND _WorkId=?;
UPDATE Application SET Activation=0 WHERE Entrypoint IN ('Windows.FullTrustApplication', 'Windows.PartialTrustApplication');
UPDATE Application SET Flags=((Flags | 0x14) & ~0x1A0) WHERE Entrypoint='Windows.FullTrustApplication';
UPDATE Application SET Flags=((Flags | 0x90) & ~0x124) WHERE Entrypoint='Windows.PartialTrustApplication';
UPDATE ApplicationExtension SET _Revision=?, _WorkId=?, Application=?, "Index"=?, Category=?, Activation=?, HostId=?, Executable=?, Entrypoint=?, RuntimeType=?, StartPage=?, ResourceGroup=?, Flags=?, Subsystem=?, Parameters=?, CurrentDirectoryPath=?, Id=?, _LocalizedDictionary=?, _Dictionary=? WHERE _ApplicationExtensionID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE ApplicationExtension SET _Revision=?, _WorkId=?, Application=?, "Index"=?, Category=?, Activation=?, HostId=?, Executable=?, Entrypoint=?, RuntimeType=?, StartPage=?, ResourceGroup=?, Flags=?, Subsystem=?, Parameters=?, CurrentDirectoryPath=?, Id=?, _LocalizedDictionary=?, _Dictionary=? WHERE _ApplicationExtensionID=? AND _Revision=? AND _WorkId=0;
UPDATE ApplicationExtension SET Activation=? WHERE _ApplicationExtensionID=? AND _WorkId=?;
UPDATE ApplicationExtension SET Activation=0;
UPDATE ApplicationExtension SET Flags=((Flags | 0x14) & ~0x1A0) WHERE Entrypoint='Windows.FullTrustApplication';
UPDATE ApplicationExtension SET Flags=((Flags | 0x90) & ~0x124) WHERE Entrypoint='Windows.PartialTrustApplication';
UPDATE AppUriHandler SET _Revision=?, _WorkId=?, HostName=?, Path=?, Extension=?, ProgID=?, AppUriHandlerGroup=?, _Dictionary=? WHERE _AppUriHandlerID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE AppUriHandler SET _Revision=?, _WorkId=?, HostName=?, Path=?, Extension=?, ProgID=?, AppUriHandlerGroup=?, _Dictionary=? WHERE _AppUriHandlerID=? AND _Revision=? AND _WorkId=0;
UPDATE Dependency SET DependencyType=? WHERE _DependencyID IN(SELECT d._DependencyID FROM Dependency AS d INNER JOIN PackageFamily AS pf ON pf.Name=d.Name INNER JOIN Package AS p ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType=?);
UPDATE FileTypeAssociation SET _Revision=?, _WorkId=?, FileType=?, ContentType=?, Extension=?, "Index"=?, ProgID=?, _Dictionary=? WHERE _FileTypeAssociationID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE FileTypeAssociation SET _Revision=?, _WorkId=?, FileType=?, ContentType=?, Extension=?, "Index"=?, ProgID=?, _Dictionary=? WHERE _FileTypeAssociationID=? AND _Revision=? AND _WorkId=0;
UPDATE OR IGNORE Activation SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Activation' LIMIT 1);
UPDATE OR IGNORE Activation SET Entrypoint=NULL WHERE Entrypoint='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Activation' LIMIT 1);
UPDATE OR IGNORE Activation SET Executable=NULL WHERE Executable='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Activation' LIMIT 1);
UPDATE OR IGNORE Activation SET ResourceGroup=NULL WHERE ResourceGroup='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Activation' LIMIT 1);
UPDATE OR IGNORE Activation SET RuntimeType=NULL WHERE RuntimeType='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Activation' LIMIT 1);
UPDATE OR IGNORE Activation SET StartPage=NULL WHERE StartPage='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Activation' LIMIT 1);
UPDATE OR IGNORE AppExecutionAlias SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='AppExecutionAlias' LIMIT 1);
UPDATE OR IGNORE AppExecutionAliasUser SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='AppExecutionAliasUser' LIMIT 1);
UPDATE OR IGNORE AppExtension SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='AppExtension' LIMIT 1);
UPDATE OR IGNORE AppExtensionHost SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='AppExtensionHost' LIMIT 1);
UPDATE OR IGNORE AppInstaller SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='AppInstaller' LIMIT 1);
UPDATE OR IGNORE Application SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Application' LIMIT 1);
UPDATE OR IGNORE Application SET EditionId=NULL WHERE EditionId='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Application' LIMIT 1);
UPDATE OR IGNORE Application SET Entrypoint=NULL WHERE Entrypoint='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Application' LIMIT 1);
UPDATE OR IGNORE Application SET Executable=NULL WHERE Executable='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Application' LIMIT 1);
UPDATE OR IGNORE Application SET ForegroundText=NULL WHERE ForegroundText='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Application' LIMIT 1);
UPDATE OR IGNORE Application SET HostId=NULL WHERE HostId='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Application' LIMIT 1);
UPDATE OR IGNORE Application SET Parameters=NULL WHERE Parameters='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Application' LIMIT 1);
UPDATE OR IGNORE Application SET ResourceGroup=NULL WHERE ResourceGroup='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Application' LIMIT 1);
UPDATE OR IGNORE Application SET SplashScreenImage=NULL WHERE SplashScreenImage='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Application' LIMIT 1);
UPDATE OR IGNORE Application SET Square150x150Logo=NULL WHERE Square150x150Logo='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Application' LIMIT 1);
UPDATE OR IGNORE Application SET Square310x310Logo=NULL WHERE Square310x310Logo='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Application' LIMIT 1);
UPDATE OR IGNORE Application SET Square71x71Logo=NULL WHERE Square71x71Logo='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Application' LIMIT 1);
UPDATE OR IGNORE Application SET StartPage=NULL WHERE StartPage='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Application' LIMIT 1);
UPDATE OR IGNORE Application SET VisualGroup=NULL WHERE VisualGroup='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Application' LIMIT 1);
UPDATE OR IGNORE Application SET Wide310x150Logo=NULL WHERE Wide310x150Logo='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Application' LIMIT 1);
UPDATE OR IGNORE ApplicationBackgroundTask SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ApplicationBackgroundTask' LIMIT 1);
UPDATE OR IGNORE ApplicationContentUriRule SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ApplicationContentUriRule' LIMIT 1);
UPDATE OR IGNORE ApplicationExtension SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ApplicationExtension' LIMIT 1);
UPDATE OR IGNORE ApplicationExtension SET _LocalizedDictionary=NULL WHERE _LocalizedDictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ApplicationExtension' LIMIT 1);
UPDATE OR IGNORE ApplicationExtension SET Entrypoint=NULL WHERE Entrypoint='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ApplicationExtension' LIMIT 1);
UPDATE OR IGNORE ApplicationExtension SET Executable=NULL WHERE Executable='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ApplicationExtension' LIMIT 1);
UPDATE OR IGNORE ApplicationExtension SET HostId=NULL WHERE HostId='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ApplicationExtension' LIMIT 1);
UPDATE OR IGNORE ApplicationExtension SET Parameters=NULL WHERE Parameters='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ApplicationExtension' LIMIT 1);
UPDATE OR IGNORE ApplicationExtension SET ResourceGroup=NULL WHERE ResourceGroup='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ApplicationExtension' LIMIT 1);
UPDATE OR IGNORE ApplicationExtension SET RuntimeType=NULL WHERE RuntimeType='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ApplicationExtension' LIMIT 1);
UPDATE OR IGNORE ApplicationExtension SET StartPage=NULL WHERE StartPage='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ApplicationExtension' LIMIT 1);
UPDATE OR IGNORE ApplicationIdentity SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ApplicationIdentity' LIMIT 1);
UPDATE OR IGNORE ApplicationProperty SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ApplicationProperty' LIMIT 1);
UPDATE OR IGNORE AppService SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='AppService' LIMIT 1);
UPDATE OR IGNORE AppUriHandler SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='AppUriHandler' LIMIT 1);
UPDATE OR IGNORE AppUriHandler SET ProgID=NULL WHERE ProgID='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='AppUriHandler' LIMIT 1);
UPDATE OR IGNORE AppUriHandlerGroup SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='AppUriHandlerGroup' LIMIT 1);
UPDATE OR IGNORE AppxExtension SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='AppxExtension' LIMIT 1);
UPDATE OR IGNORE AppxManifest SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='AppxManifest' LIMIT 1);
UPDATE OR IGNORE Bundle SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Bundle' LIMIT 1);
UPDATE OR IGNORE BundlePackage SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='BundlePackage' LIMIT 1);
UPDATE OR IGNORE BundleResource SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='BundleResource' LIMIT 1);
UPDATE OR IGNORE ConnectedSet SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ConnectedSet' LIMIT 1);
UPDATE OR IGNORE ConnectedSetPackageFamily SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ConnectedSetPackageFamily' LIMIT 1);
UPDATE OR IGNORE ContentGroup SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ContentGroup' LIMIT 1);
UPDATE OR IGNORE ContentGroupFile SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ContentGroupFile' LIMIT 1);
UPDATE OR IGNORE CustomInstallWork SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='CustomInstallWork' LIMIT 1);
UPDATE OR IGNORE CustomInstallWork SET Arguments=NULL WHERE Arguments='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='CustomInstallWork' LIMIT 1);
UPDATE OR IGNORE DefaultTile SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='DefaultTile' LIMIT 1);
UPDATE OR IGNORE DefaultTile SET HoloContentChoice=NULL WHERE HoloContentChoice='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='DefaultTile' LIMIT 1);
UPDATE OR IGNORE DefaultTile SET MixedRealityModel=NULL WHERE MixedRealityModel='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='DefaultTile' LIMIT 1);
UPDATE OR IGNORE DefaultTile SET ShortName=NULL WHERE ShortName='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='DefaultTile' LIMIT 1);
UPDATE OR IGNORE DefaultTile SET UpdateUriTemplate=NULL WHERE UpdateUriTemplate='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='DefaultTile' LIMIT 1);
UPDATE OR IGNORE Dependency SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Dependency' LIMIT 1);
UPDATE OR IGNORE DependencyGraph SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='DependencyGraph' LIMIT 1);
UPDATE OR IGNORE DeploymentHistory SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='DeploymentHistory' LIMIT 1);
UPDATE OR IGNORE DynamicAppUriHandler SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='DynamicAppUriHandler' LIMIT 1);
UPDATE OR IGNORE DynamicAppUriHandler SET ProgID=NULL WHERE ProgID='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='DynamicAppUriHandler' LIMIT 1);
UPDATE OR IGNORE DynamicAppUriHandlerGroup SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='DynamicAppUriHandlerGroup' LIMIT 1);
UPDATE OR IGNORE EndOfLifePackage SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='EndOfLifePackage' LIMIT 1);
UPDATE OR IGNORE Enterprise SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Enterprise' LIMIT 1);
UPDATE OR IGNORE File SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='File' LIMIT 1);
UPDATE OR IGNORE FileTypeAssociation SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='FileTypeAssociation' LIMIT 1);
UPDATE OR IGNORE FileTypeAssociation SET ProgID=NULL WHERE ProgID='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='FileTypeAssociation' LIMIT 1);
UPDATE OR IGNORE MigratorPatch SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='MigratorPatch' LIMIT 1);
UPDATE OR IGNORE MrtApplication SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='MrtApplication' LIMIT 1);
UPDATE OR IGNORE MrtApplication SET SplashScreenImageReference=NULL WHERE SplashScreenImageReference='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='MrtApplication' LIMIT 1);
UPDATE OR IGNORE MrtApplication SET VisualGroupReference=NULL WHERE VisualGroupReference='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='MrtApplication' LIMIT 1);
UPDATE OR IGNORE MrtDefaultTile SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='MrtDefaultTile' LIMIT 1);
UPDATE OR IGNORE MrtPackage SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='MrtPackage' LIMIT 1);
UPDATE OR IGNORE MrtSharedPri SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='MrtSharedPri' LIMIT 1);
UPDATE OR IGNORE MrtUserPri SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='MrtUserPri' LIMIT 1);
UPDATE OR IGNORE NamedDependency SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='NamedDependency' LIMIT 1);
UPDATE OR IGNORE OptionalBundle SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='OptionalBundle' LIMIT 1);
UPDATE OR IGNORE OptionalBundlePackage SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='OptionalBundlePackage' LIMIT 1);
UPDATE OR IGNORE OptionalBundleResource SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='OptionalBundleResource' LIMIT 1);
UPDATE OR IGNORE Package SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Package' LIMIT 1);
UPDATE OR IGNORE Package SET EditionId=NULL WHERE EditionId='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Package' LIMIT 1);
UPDATE OR IGNORE PackageAppInstaller SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageAppInstaller' LIMIT 1);
UPDATE OR IGNORE PackageExtension SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageExtension' LIMIT 1);
UPDATE OR IGNORE PackageExtension SET Entrypoint=NULL WHERE Entrypoint='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageExtension' LIMIT 1);
UPDATE OR IGNORE PackageExtension SET Executable=NULL WHERE Executable='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageExtension' LIMIT 1);
UPDATE OR IGNORE PackageExtension SET HostId=NULL WHERE HostId='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageExtension' LIMIT 1);
UPDATE OR IGNORE PackageExtension SET Parameters=NULL WHERE Parameters='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageExtension' LIMIT 1);
UPDATE OR IGNORE PackageExtension SET RuntimeType=NULL WHERE RuntimeType='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageExtension' LIMIT 1);
UPDATE OR IGNORE PackageExtension SET StartPage=NULL WHERE StartPage='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageExtension' LIMIT 1);
UPDATE OR IGNORE PackageFamily SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageFamily' LIMIT 1);
UPDATE OR IGNORE PackageFamilyPolicy SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageFamilyPolicy' LIMIT 1);
UPDATE OR IGNORE PackageFamilyPolicy SET ValueString=NULL WHERE ValueString='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageFamilyPolicy' LIMIT 1);
UPDATE OR IGNORE PackageFamilyUser SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageFamilyUser' LIMIT 1);
UPDATE OR IGNORE PackageFamilyUserResource SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageFamilyUserResource' LIMIT 1);
UPDATE OR IGNORE PackageIdentity SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageIdentity' LIMIT 1);
UPDATE OR IGNORE PackageLocation SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageLocation' LIMIT 1);
UPDATE OR IGNORE PackageMachineStatus SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageMachineStatus' LIMIT 1);
UPDATE OR IGNORE PackagePolicy SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackagePolicy' LIMIT 1);
UPDATE OR IGNORE PackagePolicy SET ValueString=NULL WHERE ValueString='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackagePolicy' LIMIT 1);
UPDATE OR IGNORE PackageProperty SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageProperty' LIMIT 1);
UPDATE OR IGNORE PackageSourceUri SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageSourceUri' LIMIT 1);
UPDATE OR IGNORE PackageSuperceded SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageSuperceded' LIMIT 1);
UPDATE OR IGNORE PackageUser SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageUser' LIMIT 1);
UPDATE OR IGNORE PackageUserStatus SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PackageUserStatus' LIMIT 1);
UPDATE OR IGNORE PrimaryTile SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PrimaryTile' LIMIT 1);
UPDATE OR IGNORE PrimaryTile SET EditionId=NULL WHERE EditionId='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PrimaryTile' LIMIT 1);
UPDATE OR IGNORE PrimaryTileUser SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PrimaryTileUser' LIMIT 1);
UPDATE OR IGNORE PrimaryTileUserChangelog SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PrimaryTileUserChangelog' LIMIT 1);
UPDATE OR IGNORE Protocol SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Protocol' LIMIT 1);
UPDATE OR IGNORE Protocol SET ProgID=NULL WHERE ProgID='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Protocol' LIMIT 1);
UPDATE OR IGNORE ProvisionedPackage SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ProvisionedPackage' LIMIT 1);
UPDATE OR IGNORE ProvisionedPackageDeleted SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ProvisionedPackageDeleted' LIMIT 1);
UPDATE OR IGNORE ProvisionedPackageExclude SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='ProvisionedPackageExclude' LIMIT 1);
UPDATE OR IGNORE PublisherCacheFolder SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PublisherCacheFolder' LIMIT 1);
UPDATE OR IGNORE PublisherCacheFolder SET FolderName=NULL WHERE FolderName='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='PublisherCacheFolder' LIMIT 1);
UPDATE OR IGNORE Resource SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='Resource' LIMIT 1);
UPDATE OR IGNORE SecondaryTile SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='SecondaryTile' LIMIT 1);
UPDATE OR IGNORE SecondaryTile SET EditionId=NULL WHERE EditionId='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='SecondaryTile' LIMIT 1);
UPDATE OR IGNORE SecondaryTileUser SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='SecondaryTileUser' LIMIT 1);
UPDATE OR IGNORE SecondaryTileUserChangelog SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='SecondaryTileUserChangelog' LIMIT 1);
UPDATE OR IGNORE SRJournal SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='SRJournal' LIMIT 1);
UPDATE OR IGNORE SRJournalArchive SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='SRJournalArchive' LIMIT 1);
UPDATE OR IGNORE TargetDeviceFamily SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='TargetDeviceFamily' LIMIT 1);
UPDATE OR IGNORE User SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='User' LIMIT 1);
UPDATE OR IGNORE WorkInProgress SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='WorkInProgress' LIMIT 1);
UPDATE OR IGNORE WowDependencyGraph SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='WowDependencyGraph' LIMIT 1);
UPDATE OR IGNORE XboxPackage SET _Dictionary=NULL WHERE _Dictionary='NULL' AND EXISTS(SELECT 1 FROM sqlite_master WHERE type='table' AND name='XboxPackage' LIMIT 1);
UPDATE Package SET Flags=((Flags & ~?) | ?) WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags=((Flags & ~?) | ?) WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET Flags2=((Flags2 & ~?) | ?) WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags2=((Flags2 & ~?) | ?) WHERE _PackageID=? AND _WorkId=0;
UPDATE PackageExtension SET Activation=? WHERE _PackageExtensionID=? AND _WorkId=?;
UPDATE PackageExtension SET Activation=0 WHERE Entrypoint IN ('Windows.FullTrustApplication', 'Windows.PartialTrustApplication');
UPDATE PackageExtension SET Flags=((Flags | 0x14) & ~0x1A0) WHERE Entrypoint='Windows.FullTrustApplication';
UPDATE PackageExtension SET Flags=((Flags | 0x90) & ~0x124) WHERE Entrypoint='Windows.PartialTrustApplication';
UPDATE Protocol SET _Revision=?, _WorkId=?, ProtocolName=?, ReturnResults=?, Extension=?, "Index"=?, ProgID=?, _Dictionary=? WHERE _ProtocolID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Protocol SET _Revision=?, _WorkId=?, ProtocolName=?, ReturnResults=?, Extension=?, "Index"=?, ProgID=?, _Dictionary=? WHERE _ProtocolID=? AND _Revision=? AND _WorkId=0;
uRtlQueryFeatureConfiguration
user_version
UserDomain
UserName
UserSID
UserSid
UserSID
UserSid
UserSID
VarFileInfo
Verbose
VS_VERSION_INFO
VSjDZ
VWj:Z
VWj03
VWjbZ
VWjkZ
vWShH
WaitForRequestsInUseTimeout
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
Warning
wcschr
WerRegisterCustomMetadata
WEVT_TEMPLATE
wilActivity
WilError_03
WilFailureNotifyWatchers
wilResult
WilStaging_02
win:Critical
win:Error
win:Informational
win:Verbose
win:Warning
Windows StateRepository Upgrade
windows.appUriHandler
Windows.ContactSupport_cw5n1h2txyewy
windows.fileTypeAssociation
Windows.FullTrustApplication
windows.fullTrustProcess
Windows.Internal.Tiles.MigrationHelper
Windows.MiracastView_cw5n1h2txyewy
Windows.PartialTrustApplication
windows.protocol
Windows.StateRepository.dll
Windows.StateRepositoryUpgrade.dll
Windows.StateRepositoryUpgrade.pdb
WindowsCreateStringReference
WorkId
WriteFile
WriteSetting: Name=%ls
WSj:Z
WSj]Z
WVj)Z
WVj8Z
XL93uIW
y"Vhx
y,Vhx
Y__^[
y=Vh8
y>Phh
y5VhH
y5Vhx
y6Phl
yAWh0
yis^9
yOPhl
YY_^[
