 ;GHv
 DisableStripFVF
 Microsoft Corporation. All rights reserved.
 Operating System
 t*VW
 Windows
!040Y0
!This program cannot be run in DOS mode.
"""""""
"""""""""""""""""""""""""""""""
"050v0
#t/=DXT1t
$0:0r0
%d different constant registers (c#) read by instruction.  Max. different constant registers readable per instruction is %d.
%d different constant registers (c#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different input registers (v#) read by instruction.  Max. different input registers readable per instruction is %d.
%d different input registers (v#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different temp registers (r#) read by instruction.  Max. different temp registers readable per instruction is %d.
%d different temp registers (r#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different texture coordinate registers (t#) read by instruction.  Max. different texture registers readable per instruction is %d.
%d different texture coordinate registers (t#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different texture registers (t#) read by instruction.  Max. different texture registers readable per instruction is %d.
%d different texture registers (t#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%s specified twice in the declaration
%s(%d) : 
%sInput registers (v#) are not available in phase 1 of the shader.
%sInvalid register number: %d.  Max allowed for this type is %d.
%sInvalid register number: %d. Max allowed for this type is %d.
%sInvalid register type.
%sInvalid source modifier for tex* instruction.
%sInvalid source modifier.
%sInvalid source selector for tex* instruction.
%sInvalid source selector.
%sSource register type must be temp (r#) or texture coordinate input (t#) for tex* instruction.
%sSource register type must be texture coordinate input (t#) for texcrd instruction.
%sTexture coordinate registers (t#) are not available to arithmetic instructions.
(;GHv
(First source param) 
(Global Validation Error) 
(Global Validation Warning) 
(Second source param) 
(Source param) 
(Statement %d) 
(Third source param) 
(Validation Error) 
(Validation Warning) 
)SWhP
, texm3x2depth
,040<0H0P0
,0L0W0
,0P0}0
,0T0}0
,A;L$(r
,SVWh
.00cfg
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.data
.data$brc
.data$r$brc
.edata
.gfids
.giats
.idata
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.rdata
.rdata$brc
.rdata$sxdata
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.xdata$x
/k@Z>
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
:";6;
:$:0:T:\:d:l:t:|:
:$:9:
:$:z:
:%:?:
:%:+:q:x:
:&;a;z;
:(:0:H:l:t:|:
:(:Q:
:(;:;N;
:(;8;A<
:):[:
:)=1=8=?=D=M=e=
:,:2:8:>:q:w:
:.;5;F;T;
:/:K:g:{:
:/;B;
:';];
:';>;I;y;(<x<
:?;i;(<4<@<X<
:@:X:s:
:[:{:
:[;b;
:+:::L:
:>;c;
:0:F:
:1;j;
:3:8:D:U:]:p:|:
:3;G;~;
:5:>:J:i:
:5:M:e:}:
:6:A:R:b:g:m:t:
:6:d:h:l:p:t:
:6;_;x;
:7<s<
:8:J:{:
:8:X:t:x:
:8;J;
:8;X;
:9:U:x:
:B;b;q;x;
:C;|;
:C;K;t;
:D;v;
:H:Z:
:N:{:
:O:x:
:v: ;7;
:V:n:
:w:|:
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
; <$=
;!;+;1;7;I;X;h;
;!;<;W;r;
;!<:<e<
;";N;V;];u;
;"<(<
;#;.;<;@;D;H;L;P;T;
;$;,;4;@;H;`;
;$;,;8;@;t;|;
;$<o<v<
;&;+;1;;;E;O;Y;c;m;w;
;&<S<`<j<'=
;(<:<
;(<:<^<
;*;?;j;
;*;[;
;*;Y;
;,;j;~;6<
;,;u;
;.;9;T;o;
;.<5<
;/;B;Q;h;u;
;/=X=
;:=M>[>x>
;-;=;
;?;j<q=
;?<G<v<
;^<i<t<
;_<|<
;~$v;
;~(vN
;+;C;x;
;+;I;T;s;
;<<e<t<
;-<Z=
;0;<;\;h;
;1;H;];
;1;l;
;1<K<P<m<
;2<U<
;3<X<
;8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<
;A;];
;A;q;
;B(u&
;B;k;
;B;V;
;C8u&91u"
;CHv>
;CHv6
;CHvG
;CHw+
;D$0s
;D<W<
;F;h;
;G,s/Q
;G,s@
;g;m;s;
;G<V<p<
;Gdu(9_<u#
;GHw-
;GHw#
;GHw*
;GHw~
;GHw=f
;GHw0
;GHw2
;GHw6
;GHw7
;GHwIf
;H;Z;
;K;s;
;N$s+
;O;k;
;rtu(;Bxu#
;rxu(;B|u#
;T$0u
;t$8u
;V,sY
;zpu.;rtu);Bxu$
? ?$?(?
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?|?
? ?*?4?>?H?R?\?f?p?z?
?"?0?E?L?Y?|?
?$?,?8?@?t?|?
?$?0?8?l?t?|?
?&?@?Z?t?
?*?\?{?
?.?_?
??1type_info@@UAE@XZ
?-?B?b?n?|?
?\?p?
?+?0?5?s?
?+?g?
?+?y?
?<?D?L?X?`?
?>?|?
?>?p?
?>?r?
?0?6?<?B?H?N?U?\?c?j?q?x?
?7?e?|?
?7?i?{?
?A?d?
?C?s?
?j?t?
?M?_?
?N?w?
?O?[?j?
?Q?\?|?
?Q?}?
?T?b?
?terminate@@YAXXZ
?Y?c?j?w?
@( u@
@(9D$
@.reloc
@.rsrc
@0h0z0
@H@u?
@P=DXT3wot
@SVWj
@VSWQ
\$ tg
\$<9^
\$L;B
] VWSj
_[;FHv
__CxxFrameHandler3
__dllonexit
_amsg_exit
_bx2 is a valid src mod for texM* instructions only (%s source param).
_CIcos
_CIexp
_CIlog
_CIlog10
_CIpow
_CIsqrt
_CxxThrowException
_dw(=_da) modifier on source param for texld only allowed if source is a texture coordinate register (t#).
_dw(=_da) modifier on source param must be paired with source selector .xyw(=.rga).
_dz(=_db) modifier cannot be used on source parameter for texcrd. It is only available to texld instruction, when source parameter is temp register (r#).
_dz(=_db) modifier may only be used at most 2 times in a shader.
_dz(=_db) modifier on source param for texld must be paired with source selector .xyz(=.rgb). Note: Using no selector is treated same as .xyz here.
_dz(=_db) modifier on source param for texld only allowed if source is a temp register (r#).
_dz(=_db) modifier on source param for texld only allowed in second phase of a shader.
_except_handler4_common
_ftol2_sse
_initterm
_L_^[]
_lock
_onexit
_purecall
_stricmp
_unlock
_vsnprintf
_wcslwr
_XcptFilter
`.data
{H_^[
|$$9t$
|$$t?;\$Du9;|$Hu3
|$(;|$8
|$(;D$8
|$,;|$ 
|$,t]
|$\;L$`u&
+O +G
+T$4+
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
< <(<4<<<T<x<
< <(<4<T<`<
< =A=b=
<!<*<7<^<
<!=f=
<"<]<
<"<H<Z<
<"=0=]=
<"=J=
<"=Q=l=
<"=S=_=
<$<)<.<3<:<?<Z<}<
<$=7=B=l=(>;>
<$=T=
<%<,<3<:<A<G<R<^<
<%<.<s<+=Z=
<%<6<C<K<Q<W<]<c<i<o<w<}<
<&===X=
<(=:=r=
<)<6<;<H<X<_<o<v<
<*<><M<R<W<\<a<f<p<
<,<h<
<,=U=
</<p<
</<q<
</<V<s<
<+=8=x=
<'<9<o<
<'<g<v<
<'=l=
<><\<|<
<0<4<8<<<@<D<
<0<h<
<0=8=@=L=T=l=
<2=R=
<4<<<D<P<X<p<
<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<P=W=
<4<d<
<4=;=@=W=^=c=
<5=;>y>
<5=2>
<6=W=
<8=J=_=p=
<8=J=~=
<9<h<
<9=O=l=|=
<F=M=
<G=Y=d=
<J=k=
<M=`=
<O<x<
<Q<t<
<Q=p=
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
= =$=(=,=0=4=8=<=\=`=d=h=l=p=t=x=|=
= =,=L=X=`=
= >H>Z>
=!=+=5=?=I=S=]=g=q={=
="=,=6=@=}=
=#=)=.=3=9=>=E=K=T=]=
=#=)=/=;=@=U=d=p=
=#>d>w>
=&>@>Z?c?o?
=(=@=
=(=K=
=(=Y=
=(>G>x>
=)=h=z=
=/=A=s=
=/=G=b=h=t=z=
=/>R>n>
=?>R>
=+=5=:=M=W=\=
=<={=
=<>b?
=<>M>
=-=B=H>
='=c>
=>>[>
=->V>
=0P0c0
=2>N>
=3>u>
=5>m>
=6>R>l>
=8=J=~=
=8=S=n=
=8>^>
=8>G>
=9=N=
=A>W>
=A>Y>g>r>}>
=C=I=O=U=
=D=c=
=D=K=o=v=
=D>H>L>P>i>x>
=DXT1tW=DXT2um
=DXT1u
=DXT2t!
=DXT2u
=DXT3
=DXT3u
=DXT4t
=DXT4u
=DXT5t
=DXT5u
=FILEt
=G=x=
=G>\>
=H>N>
=H>Z>
=J>e>
=L=P=T=X=\=`=d=h=l=l>p>t>x>
=L=T=\=h=p=
=LINEu
=N>\?
=Q>`>o>~>
=U>\>h>
=UYVYu
=V>d>
=X=\=
=X>g>
=Y>`?g?
=Y>u>
=YUY2u
=Z=t=
=Z>I?
> >$>(>,>0>
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>8???
>"?8?
>">(>.>4>:>@>G>N>U>\>c>j>q>y>
>$?T?
>$>*>4>>>H>R>\>d>l>s>}>
>%?8?
>%>[>g>
>%>1>;>E>O>Y>c>m>w>
>&>0>:>D>N>X>b>l>v>
>(?:?n?
>(>_>
>(>->?>
>(>1><>A>L>R>Z>`>
>(>H>T>t>
>.?G?
>.?H?L?
>.>7>E>S>f>p>
>/?z?
>'???w?
>@>G>t>
>\>4?}?
>+?V?
>=>^>f>n>}>
>>>F>L>a>
>'>J>m>
>0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?
>1>j>
>2>M>
>8>@>L>l>t>
>8>I>z>
>8>O>f>!?Q?l?
>9?Z?c?j?
>A?[?
>A?T?
>B>V>g>
>H>P>X>d>l>
>K?R?
>o?v?
>p>t>x>|>
>S?f?
>U>v>
>X>j>
>Z?m?
>Z?u?
0 0$0(0,0
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0 0$0(0,040X0d0
0 0t0
0 0T0h8
0 1C1
0 1I1g1
0!0J0o0
0!0m0~0
0"0.0B0O0v0
0"010B0M0S0Y0_0i0o0u0
0$0.080B0L0V0`0j0t0~0
0%1,131
0%xh 
0(1:1n1
0)0J0
0)1`1
0)1`1s1
0*0;0T0h0n0
0*0^0
0*0E0`0{0
0/1:1l1
0;0/1\1`1d1h1l1p1t1x1|1
0@1g1
0@3D3H3L3P3T3X3m4t4
0^0e0
0+0_0
0<0T0
000T0\0d0p0x0
00181d1
0-0h0z0
010a0
011H1L1z1
020F0i0x0
030I0_0p0u0{0
031q1
031V1
04080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
040904B0
040g0
040i0
041y1
060m0
071@1I1
081J1|1
081K1
0c1#2c2
0c1}1
0D0s0
0D0t0
0K1Z1s1
0M0o0
0N0f0
0O1v1
0S1`1
0watL
0X0j0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1 1$1(1,1014181X1f1{1
1 1$1m1
1 1(141<1p1x1
1 2(202<2D2x2
1 2E2J2
1 2H2Z2
1!1+151q1{1
1!121q1
1!1P1[1b1
1$10181l1t1|1
1$2(2,20242
1&1@1Q1
1&2c2
1(101H1l1t1|1
1(1Q1_1k1
1)2f2
1*1^1
1,10141h1z1
1,172r273
1,1d1
1,2=2
1.262@2H2
1;2Z2
1_1o1
1<1f1
1=1F1K1Q1h1
1>1W1
1>1Z1
1>2V2
10.0.22621.1
10.0.22621.1 (WinBuild.160101.0800)
10@0M0p0~0
1'1@1c1
111=1l1x1
112a2
1-2@2@3
1'2F2Q2y2
141d1
142[2|2
161l1
181b1
181J1~1
181S1
182G2q2
182J2d2
1B1[1
1d1w1
1D2S2j2{2
1F1M1a1n1
1H1T1j1
1I2\2
1I2b2
1L1%2]2
1M1]1
1z1O4
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2 2(2@2d2l2t2
2 3L3
2 3M3s3
2!3[3
2#3<3
2%2/292C2M2W2a2k2u2
2(2}2
2(2-2M2{2
2(30383D3d3p3
2(353
2)2f2
2)3z4
2*424j4
2,242<2H2P2h2
2,2E2
2.2.3;3
2:2T2j2
2:3p3
2;3C3O3
2+232W2`2
2+262M2|2
2+3U3
2<2*3
2<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3
2=2D2)3L3P3T3p3t3
2>2h2
2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
202r2
203L3x4
2-2_2
222o2
2'3?3j3
232_2
2-3F3|3
252?2J2V2g2
252m2
252U2p2
282J2
292D2
2A2d2
2a3q3w4
2B2G2L2Q2V2[2`2e2j2o2t2y2~2
2F2$3D3
2G2b2z2
2H2U2i2
2h3z3
2M2f2~2
2Q3s3
2R2t2
2T5X5\5`5d5h5l5p5t5x5
2X3]3o3
2Y4m4
2Z2l2s2
3 3$3(3,3
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3 3%3*3/3U3
3 4F4g4
3!3_3y3d4w4
3!3B3I3j3
3#3(3-32373<3A3F3K3P3V3\3a3f3k3p3u3z3
3$3,343@3H3`3
3$3.383B3L3V3`3j3t3~3
3$4T4
3%4?4
3&373Y3
3(3^3
3(3-373<3F3K3U3Z3d3i3s3x3
3(3b3~3
3(3L3T3\3h3p3
3)8?8
3*3[3
3,4\4
3,4k5
3/4Q4
3?3V3j3
3?3w3
3?4M4
3@3\3c3o3
3@4S4
3<4V4e4k4q4w4[5
3=3I3q3
303V3y3
3044484<4@4D4H4L4P4T4X4
313`3r3
314a4
314m4
323Y3
333K3
343n3
344;4
354H4
363T3
373R3
383G3
383W3c3
3A3P3
3A4e4
3F3s3
3S3}3
3S4Z4l4
3U3m3v3
3U3T4!535t5
3X3|3
4 4$4(4,4\4i4s4
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
4 4(4\4d4l4x4
4 4)4h4z4
4 4J4V4w4}4
4!4&4+40454:4?4D4I4N4S4X4]4b4g4l4q4v4{4
4!4I4_4
4$5y5
4&4>4V4n4
4&4-464
4(424<4F4P4Z4d4n4x4
4,4?4J4h4q4
4,4J4h4
4.4L4
4/494\4f4q4
4/5A5
4/5n5
4:5D5g50696M6
4:5M5
4;CHv
4@4b4|4
4@4H4P4\4|4
4]4t4
4^4v4
4+4F4y4
4+5M5o5
4<4D4L4X4`4x4
4=4Z4
4>4m4~4
404x4
40H0w0
424T4r4
425Y5#6
43494?4E4
435J5
4'5U5^5
4-5X5
475C5
484E4_4
484I4z4
484J4~4
495)666
4C4V4
4C5m5
4D5m5
4f516C6
4J5]5
4L4o4
4p5X6z6
4Q4}4
4t5L6?7
4V5]5
4Y4k4
4Z5{5
4Z5y5
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
5 5b5|5
5 5h5w5
5!666X6
5"5`5
5"5e5q5}5
5"5e5x5
5"6J6]6c6
5#5)5F5y5
5&6064686<6@6D6H6
5(505d5l5t5
5)535=5G5Q5
5)6<6}6
5*5^5
5*5=5N5v5`6
5*5i5
5,5h5z5
5.5F5^5v5
5:6V6\6
5;5H5h5z5
5?5b5
5[6y6W7^7
5`6{6
5+5K5w5
5=5D5R5
5>5^5
5>5j5
505T5\5d5p5x5
5064686<6@6
5064686<6@6D6H6L6[7b7
5064686<6@6D6H6L6P6T6X6\6`6d6h6l6
5-5|5
5'515:5?5E5O5Y5b5g5m5w5
555W5o5
5'6B6j6
575C5Q5
576Q6
5A5d5
5B6U6
5F6s6
5F6X6
5G5x5
5G6f6
5h6u6
5J5~5}6
5j5q5
5K5V5h5
5L5c5
5L6Q6
5O5W5
5P5X5`5l5t5
5P6T6X6\6
5S6}6
5T5g5
5x5|5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
6 6%6c6p6
6 6L9
6!6*6/656?6I6R6W6]6g6q6z6
6!7@7_7
6$60686l6t6|6
6$6D6P6X6
6$6q6
6%7.7E7
6&6B6o6
6&7H7Z7
6(6_6
6(7:7n7
6)616S6X6c6
6)7a7
6,7:7A7H7O7V7]7d7k7r7y7
6,7;7
6,7<7U7i7v7
6,7074787)8N8
6.6F6^6v6
6.6K6s6
6/6G6_6w6
6/6h6
6?6x6
6\7`7d7h7l7p7t7x7
6]6}6
6]7{7
6+6:6?6G6L6d6t6
6+6J6]6h6
6=7U7
606E6R6[6w6
617Q7
626e6y6
627o7
636=6G6Q6[6e6
636H6:7?9~9
656G6
657Z7
6'696
676i6
6-797E7Q7]7i7u7
6'7a7
686@6H6T6\6t6
686<6@6D6Y6
686G6a6|6
687J7
69W(t1
6C7\7
6D6a6
6E7\7d7
6h7~7
6I6l6
6M6\6
6M7a7
6p7t7x7|7
6R6q6
6Rich6k
6U6r6
6U7u7
6W8e8
6Y6v6
7 7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
7 8<8
7"7X7j7
7"8=8_8
7#8=8
7$7,787@7t7|7
7$7L7V7a7g7~8
7%7/797B7G7M7W7a7j7o7u7
7(7<7
7(8:8k8
7(8:8n8
7)8}8
7*7h7
7,7P7X7`7l7t7
7,8o8v8
7/8\8c8
7:8~8
7?7|7
7@7f7
7_8,:
7`8r8
7+7y7
7<7D7L7X7`7
707d7k7
707j7
708=8G8S8Y8I9W9c9y9
717k7
718A8
718L8w8
738g8
74798~8
767z7*8
768=8c8|8
7'7=7S7d7i7o7u7}7
777@7O7c7v7/8d8
777O7g7
7-797I7V7m7
7-7i7x7
787D7
788J8
798B8Q8
7A7N7\7h7n7
7D7t7
7E8f8
7f7m7
7f8y8
7j8}8
7Q8y8
7r8~8
7S7~7
7s8z8
7v9}9
7x8m9
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
8 8$8(8,8k8s8
8 8X8
8!9W9d9
8#8Y8
8$8,8D8h8p8x8
8$8X8`8h8t8|8
8%9E9e9
8(8:8j8
8(868M8B9m9
8(9B9
8)82878=8F8K8P8U8Z8_8d8o8y8
8)9c9
8)9i9
8)9n9
8*8^8
8*8H8q8
8*9G9
8*9O9j9
8.;A;
8.8|8
8.8Q8
8?8O8`8f9
8?9b9
8@9y:
8]9e9
8_Lv\
8_LvZ
8+9h9z9
8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
819a9
819V:
829s9
838K8c8
838X8g8
848d8
848L8x8
848t8
8'8?8W8o8
888q8
8'9-939
899J9{9
8A8d8
8B9p9
8D8L8T8`8h8
8G8X8
8I9*:
8L9P9T9X9\9
8O9\9
8R;t;
8r97:
8V9_9h9{9
8W8`8
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
9 9$9X9d9y9
9 9(949<9T9x9
9!9p9x9
9#9-979A9K9U9_9i9s9}9
9#9i9
9$;V;
9&:H:W:
9&>->~>
9&9D9~9
9)9j:
9)9t9
9*959l:
9.:>:~;
9.:>:H:v:
9/:::G:X:
9/:::L:e:u:
9-:?:
9?:U:
9?9`9
9@:e<
9@:T:\:d:l:t:
9@:Z:q:
9];q;
9_ vi
9_9r9
9+:5:M:T:
9>9x9
9>9y9
939B9W9`9o9t9
94:Q;B<g<
94:x:
94989D9d9p9
969?9
969n9
98:T:
9-9:9W9`9f9
999i9
9-9D9c9
9-9E9]9u9
9c:}:
9c9':9:P:Y:d:B;M;d;m;x;
9D$(us
9D$0u
9G u5
9H9u9
9H9Z9
9I:u;
9K9c9l9
9L9T9\9h9p9
9L9T9\9x9
9P9c9
9T$ u
9T$@u
9T$0t
9V:m:
9w vC
9w vG
9W:}:
9w<u#
9wptA9wtu<
9X:j:
9Y,vs
A$;GHwXf
A;N$r
Absolute and relative addressing of constant registers cannot be combined in one instruction.
Adapter %d FPS = %ld.%01ld
AddAccessAllowedAce
AddMandatoryAce
Address mode must be absolute (%s source param).
Address register not available for vertex shader version %d.%d.  Version 1.1 required.
advapi32.dll
ADVAPI32.dll
After texdepth instruction, r5 is no longer available in shader.
ALSVW
api-ms-win-core-versionansi-l1-1-0.dll
api-ms-win-gdi-dpiinfo-l1-1-0.dll
B$_^[
B(;A(t
B;V$r
B@;Bxu
B<;Btu
B0;CH
B8;A8
B8;A8t
BD;B|u
bem cannot be co-issued.
bem may only be used before the phase marker.
bem may only be used once in a shader.
BitBlt
Blend indices
Blend weight
C,_^[
C;Y,r
C4;C0t
CalibrateGammaRamp
CallWindowProcA
Cannot apply a negation source modifier on data that was last written with the saturate destination modifier. Affected components(*) of %s source param: %s
Cannot negate second source parameter to vector*matrix instructions.
Cannot set co-issue ('+') on a tex* instruction.  Co-issue only applies to arithmetic instructions.
Cannot set co-issue ('+') on a texture instruction.  Co-issue only applies to arithmetic instructions.
Cannot set co-issue ('+') on consecutive instructions.
Cannot swizzle second source parameter to vector*matrix instructions.
Cannot use tex* instruction after non-tex* instruction.
CD_^[
ChangeDisplaySettingsExA
ClientToScreen
CloseClipboard
CloseDesktop
CloseHandle
Co-issued instruction cannot write all components - must write either alpha or color.
Co-issued instructions cannot both be dot-product, since each require use of the color/vector pipeline to execute.
Co-issued instructions cannot both be dp3, since each require use of the color pipe to execute.
Co-issued instructions cannot both write to alpha component.
Co-issued instructions cannot both write to color components.
Co-issued instructions cannot both write to the same component(s).  One instruction must write to alpha and the other may write to any combination of red/green/blue.  Destination registers may differ.
Co-issued instructions cannot both write to the same components of a register.  Affected components: %s
Co-issued instructions must both write to the same register number for pixelshader version <= 1.0.
Co-issued instructions must both write to the same register type for pixelshader version <= 1.0.
CompanyName
ConnectNamedPipe
Const declaration (def) must appear before other instructions.
ConvertStringSidToSidA
CPPWj
CreateCompatibleBitmap
CreateCompatibleDC
CreateDCA
CreateDIBitmap
CreateFileA
CreateIconIndirect
CreateMutexA
CreateRectRgn
CreateSemaphoreA
CryptCATAdminAcquireContext
CryptCATAdminCalcHashFromFileHandle
CryptCATAdminEnumCatalogFromHash
CryptCATAdminReleaseCatalogContext
CryptCATAdminReleaseContext
CryptCATCatalogInfoFromContext
CryptCATClose
CryptCATEnumerateCatAttr
CryptCATGetCatAttrInfo
CryptCATOpen
D$ )D$
D$ +FX+^TPS
D$ Ph
D$ PP
D$$+D$
D$$tO
D$$u4
D$$Vj@
D$$VW
D$(+D$ j
D$(9D$8
D$(Pj
D$(SV
D$@;L$$
D$@v-
D$\VW
D$`SVW
D$|Pj
D$|PR
D$<+D$,
D$0Pj
D$0tv
D$4Pj
D$8Pj
D$8tM
D$D9W
D$dPj
D$dPS
D$h;O4u`
D$h;O8u;
D$HPQ
D$HSVW
D$LGP
D$LPS
D$LPt
D$Lt(
D$PPj
D$TPQ
D$xSj
D3D PixelShader Validator: Out of memory.
d3d8.dll
D3D8.dll
d3d8.pdb
D3D8_IdHot_Ctrl_SnapDesktop
d3d8d.dll
D3D8GetSWInfo
d3d8thk.dll
D3D9on12.dll
D3DKMTCloseAdapter
D3DKMTCreateAllocation
D3DKMTCreateAllocation2
D3DKMTCreateContext
D3DKMTCreateContextVirtual
D3DKMTCreateDCFromMemory
D3DKMTCreateDevice
D3DKMTCreateHwQueue
D3DKMTCreatePagingQueue
D3DKMTCreateSynchronizationObject
D3DKMTCreateSynchronizationObject2
D3DKMTDestroyAllocation
D3DKMTDestroyAllocation2
D3DKMTDestroyContext
D3DKMTDestroyDCFromMemory
D3DKMTDestroyDevice
D3DKMTDestroyHwQueue
D3DKMTDestroyPagingQueue
D3DKMTDestroySynchronizationObject
D3DKMTEscape
D3DKMTEvict
D3DKMTFreeGpuVirtualAddress
D3DKMTGetDeviceState
D3DKMTGetDisplayModeList
D3DKMTGetMultisampleMethodList
D3DKMTGetResourcePresentPrivateDriverData
D3DKMTGetScanLine
D3DKMTGetSharedPrimaryHandle
D3DKMTInvalidateCache
D3DKMTLock
D3DKMTLock2
D3DKMTMakeResident
D3DKMTMapGpuVirtualAddress
D3DKMTMarkDeviceAsError
D3DKMTOfferAllocations
D3DKMTOpenAdapterFromHdc
D3DKMTOpenResource
D3DKMTOpenResource2
D3DKMTPresent
D3DKMTQueryAdapterInfo
D3DKMTQueryAllocationResidency
D3DKMTQueryResourceInfo
D3DKMTReclaimAllocations
D3DKMTReclaimAllocations2
D3DKMTRegisterTrimNotification
D3DKMTRender
D3DKMTReserveGpuVirtualAddress
D3DKMTSetAllocationPriority
D3DKMTSetDisplayMode
D3DKMTSetDisplayPrivateDriverFormat
D3DKMTSetGammaRamp
D3DKMTSetVidPnSourceOwner
D3DKMTSharedPrimaryLockNotification
D3DKMTSharedPrimaryUnLockNotification
D3DKMTSignalSynchronizationObject
D3DKMTSignalSynchronizationObject2
D3DKMTSignalSynchronizationObjectFromCpu
D3DKMTSignalSynchronizationObjectFromGpu
D3DKMTSignalSynchronizationObjectFromGpu2
D3DKMTSubmitCommand
D3DKMTSubmitCommandToHwQueue
D3DKMTSubmitPresentToHwQueue
D3DKMTSubmitSignalSyncObjectsToHwQueue
D3DKMTSubmitWaitForSyncObjectsToHwQueue
D3DKMTUnlock
D3DKMTUnlock2
D3DKMTUnregisterTrimNotification
D3DKMTUpdateAllocationProperty
D3DKMTUpdateGpuVirtualAddress
D3DKMTWaitForSynchronizationObject
D3DKMTWaitForSynchronizationObject2
D3DKMTWaitForSynchronizationObjectFromCpu
D3DKMTWaitForSynchronizationObjectFromGpu
D3DREF8.DLL
DebugBreak
DebugSetMute
Declaration Token #%d: Cannot set stream input without first setting stream #.  Aborting shader decl. validation.
Declaration Token #%d: Cannot set tesselator stream input without first setting tesselator stream #.  Aborting shader decl. validation.
Declaration Token #%d: Duplicate declaration of input register %d as destination for normal generation.
Declaration Token #%d: Input reg %d specified as destination for normal generation is already declared elsewhere.
Declaration Token #%d: Input register %d already declared.
Declaration Token #%d: Input register number must not be specified (does not apply) for UV tesselation.
Declaration Token #%d: Invalid input reg num: %d. Max allowed is %d.
Declaration Token #%d: Invalid reg num: %d. Max allowed is %d.
Declaration Token #%d: SKIP not permitted in fixed-function declarations.
Declaration Token #%d: Stream number %d has already been declared.  Aborting shader decl. validation.
Declaration Token #%d: Stream number %d is out of range. Max allowed is %d.  Aborting shader decl. validation.
Declaration Token #%d: Stream number %d is out of range. There are no streams available.  Aborting shader decl. validation.
Declaration Token #%d: Stream number must not be specified for tesselator stream.
Declaration Token #%d: Stream selector token must be followed by at least one stream data definition token.
Declaration Token #%d: Tess datatype must be FLOAT2 for UV generation.
Declaration Token #%d: Tesselation stream has already been declared.  Aborting shader decl. validation.
Declaration Token #%d: Unrecognized stream data type.
Declaration Token #%d: Unrecognized stream declaration token.  Aborting shader decl. validation.
Declaration Token #%d: Write to const register %d is not valid.  There are no constant registers available.
Declaration Token #%d: Write to const register %d is out of range.  Max offset is %d.
Declaration Token %d: Source input register %d for normal generation has not been declared.
def cannot be co-issued.
DefWindowProcA
DeleteCriticalSection
DeleteDC
DeleteObject
Description
Dest shift not allowed for tex* instructions.
Dest shifts not allowed for vertex shaders.
Dest write mask cannot be empty.
Dest write mask must be .rgb, .a, or .rgba (all).
Dest write mask must be .rgb, or .rgba (all) for dp3.
Destination for def instruction must be of the form c# (# = reg number, no modifiers).
Destination for texdepth must be r5.
Destination of texm3x2depth instruction (t%d) is not available elsewhere in shader.
Destination shift not allowed for tex* instructions.
DestroyIcon
Different relative addressing of constant registers cannot be combined in one instruction.
Diffuse
Direct3D Shader Validator: Out of memory.
Direct3D8EnableMaximizedWindowedModeShim
Direct3DCreate8
DisableDM
DisableGB
DisableMMX
DisableNVPS
DisableProcessWindowsGhosting
DisablePSGP
DisableST
DisableThreadLibraryCalls
DisableVBFailovers
DisableVidMemVBs
DisconnectNamedPipe
display
DisplayConfigGetDeviceInfo
Dot-product needs color/vector pipeline to execute, so instruction co-issued with it cannot write to color components.
Dot-product which writes alpha cannot co-issue, because both alpha and color/vector pipelines used by the dot product.
Dot-product which writes alpha cannot co-issue, because both alpha and color/vector pipelines used.
dp3 needs color pipe to execute, so instruction co-issued with it cannot write to color components.
dp3 which writes alpha cannot co-issue since it uses up both the alpha and color pipes.
dp4 cannot be co-issued.
dp4 instruction cannot be co-issued.
Driver failed to create the requested pixel shader. Please contact your friendly video card manufacturer to inquire why this problem was encountered.
DriverName
DriverStyle
Dst modifiers not allowed for vertex shaders.
DWM_DX_FULLSCREEN_TRANSITION_EVENT
dwmapi.dll
DwmIsCompositionEnabled
DXT1H
DXT1J
DXT1t
DXT1t 
DXT1t#
DXT1w0t(
DXT2t
DXT2t1
DXT3K
DXT3M
DXT3t
DXT3t!3
DXT4t
DXT4w#t9
DXT5N
DXT5P
DXT5t
DXT5u
DXT5u>
E SVW
EmptyClipboard
EmulatePointSprites
EnterCriticalSection
EnumDisplayDevicesA
EnumDisplayMonitors
EnumDisplaySettingsA
EtwEventWriteNoRegistration
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
ext-ms-win-rtcore-ntuser-dpi-l1-1-0.dll
F [_^
F _[^
F _^[
F 9N$v
f#F\f
f#V\f
f;\$$
f;L$$
F\=DXT3
F<t]3
F4;F0t
FileDescription
FileVersion
first
First arithmetic instruction cannot have co-issue ('+') set; there is no previous arithmetic instruction to pair with.
First source for cnd instruction must be 'r0.a'.
First source parameter for bem must be temp (r#) or constant (c#) register.
FlipNoVsync
floor
FlushFileBuffers
ForceDriverFlagsOff
ForceRefreshRate
Format for address register must be a0.x.
FormatMessageW
FreeLibrary
FSoftware\Microsoft\Direct3D
FtWPQ
FXj@t=
G$_^[
G(@t-
G(@tI
G(QPj
G,_^[
G,Hu$
G@+GD;
G4_^[
GD_^[
GD3BD
GDI32.dll
GdiEntry1
GdiEntry13
GetClientRect
GetCurrentDpiInfo
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetCursor
GetCursorPos
GetDC
GetDesktopWindow
GetDeviceCaps
GetDeviceGammaRamp
GetDIBits
GetFileVersionInfoExA
GetFileVersionInfoSizeExA
GetForegroundWindow
GetIconInfo
GetKeyState
GetLastError
GetLengthSid
GetModuleFileNameA
GetModuleHandleA
GetModuleHandleW
GetMonitorInfoA
GetNativeSystemInfo
GetNearestColor
GetObjectA
GetPrivateDDITable
GetProcAddress
GetProcessDpiAwarenessInternal
GetProcessHeap
GetRandomRgn
GetRegionData
GetSidLengthRequired
GetSidSubAuthority
GetSystemDirectoryA
GetSystemMetrics
GetSystemPaletteEntries
GetSystemTimeAsFileTime
GetThreadDesktop
GetTickCount
GetUserObjectInformationA
GetVersionExA
GetWindowDC
GetWindowInfo
GetWindowLongA
GetWindowRect
GetWindowThreadProcessId
GL _[]
GL$_^[
GL(_^[
GL;GHv
GlobalAddAtomA
GLV;GHv
GRGBu
Gt_^[
Gxt#j
H;GHv
H0g1t1|1
H0U0o0
Hardware\DirectDrawDrivers
HeapAlloc
HeapFree
HIGHDPIAWARE
HPQh`z
HPQhde
I(+H 
Incomplete texm* sequence.
Individual instruction in co-issue pair cannot write both alpha and color component(s).
InitializeAcl
InitializeCriticalSection
InitializeSecurityDescriptor
InitializeSid
InstalledDisplayDrivers
Instruction cannot have co-issue ('+') set without a previous arithmetic instruction to pair with.
Instruction modifiers are not allowed for tex* instructions.
Instruction modifiers not allowed for tex* instructions.
Instruction not supported by version %d.%d pixel shader.
Instruction not supported by version %d.%d vertex shader.
INTERNAL ERROR:View matrix in D3DFE_PROCESSVERTICES structure must be aligned to 16 bytes
InternalName
IntersectRect
Invalid const register num: %d. Max allowed is %d.
Invalid dest reg num: %d. Max allowed for this reg type is %d.
Invalid destination register number: %d. Max allowed for this register type is %d.
Invalid destination shift.
Invalid dst modifier.
Invalid dst shift.
Invalid instruction modifier.
Invalid parameter count.
Invalid reg num %d (%s source param).  Max allowed for this type is %d.
Invalid reg num: %d for %s source param. Max allowed for this type is %d.
Invalid reg type (%s source param).
Invalid reg type for %s source param.
Invalid reg type for dest param.
Invalid register type for destination param.
Invalid src mod for %s source param.
Invalid src mod for tex* instruction (%s source param).
Invalid src swizzle for %s source param.
Invalid texm* register.
Invalid texm* sequence.
IsDebuggerPresent
IsIconic
IsProcessorFeaturePresent
IsValidSid
IsWindow
IsWindowVisible
IsWow64Process
IsZoomed
IuE;xDu,
j,h`y
jjjjj
jLowVidMemCap
K$Pt5
K09_4tE
kD$,,
KERNEL32
KERNEL32.dll
KH_^[
KV_DISPLAY
L$ J;
L$ PV
L$ QP
L$$_^[3
L$(;L$
L$(9L$
L$(VW
L$,_^3
L$,QP
L$\_^[3
L$|_^[3
L$|_^3
L$<_^
L$<_^[3
L$<_^3
L$0QPQ
L$4_^
L$4_^[3
L$d_^[3
L$d_^3
L$hPV
L$l^3
L$l_^[3
L$LQS
L$p^[3
L$t_^[3
L$T_^[3
LeaveCriticalSection
LegalCopyright
LoadDebugRuntime
LoadLibraryA
LoadLibraryExW
LoadLibraryW
Local\__DDrawCheckExclMode__
Local\__DDrawExclMode__
Local\D3D8CheckFullscreenSemaphore
LocalAlloc
LocalFree
lstrcmpA
malloc
Maximum of 3 cmp instructions allowed.
Maximum of 4 dp4 instructions allowed.
MaxPixelShaderValue
memcpy
memset
Microsoft
Microsoft Corporation
Microsoft Direct3D
Microsoft.Windows.Graphics.D3D8
MinimumLocalVidMem
mscat32.dll
msvcrt.dll
MultiByteToWideChar
Multiple constant registers cannot be read by a matrix op.
Multiple dependent texture reads are disallowed (%s source param).  Texture read results can be used as an address for subsequent read, but the results from that read cannot be used as an address in yet another subsequent read.
Multiple input registers cannot be read by a matrix op.
Multiple phase markers not permitted.  Aborting shader validation.
Must use texture register a dest param for tex* instructions.
N(G;y
NH^[]
nop cannot be co-issued.
nop instruction cannot be co-issued.
Normal
Normal2
ntdll.dll
Number of instruction slots used too high: %d. Max. allowed is %d.
O4_^[
OffsetRect
OH_^[
One of the instructions in a co-issue pair must write to alpha only (.a writemask).
Only one use of texdepth is permitted.
Only the mov instruction is allowed to write to the address register.
OP_^[
OpenAdapter
OpenClipboard
OpenEventW
OpenInputDesktop
OpenMutexA
OriginalFilename
OsThunkD3dContextCreate
OsThunkD3dContextDestroy
OsThunkD3dContextDestroyAll
OsThunkD3dDrawPrimitives2
OsThunkD3dValidateTextureStageState
OsThunkDdAttachSurface
OsThunkDdBlt
OsThunkDdCanCreateD3DBuffer
OsThunkDdCanCreateSurface
OsThunkDdCreateD3DBuffer
OsThunkDdCreateSurface
OsThunkDdCreateSurfaceEx
OsThunkDdCreateSurfaceObject
OsThunkDdDeleteDirectDrawObject
OsThunkDdDeleteSurfaceObject
OsThunkDdDestroyD3DBuffer
OsThunkDdDestroySurface
OsThunkDdFlip
OsThunkDdFlipToGDISurface
OsThunkDdGetAvailDriverMemory
OsThunkDdGetBltStatus
OsThunkDdGetDC
OsThunkDdGetDriverInfo
OsThunkDdGetDriverState
OsThunkDdGetFlipStatus
OsThunkDdGetScanLine
OsThunkDdLock
OsThunkDdLockD3D
OsThunkDdQueryDirectDrawObject
OsThunkDdReenableDirectDrawObject
OsThunkDdReleaseDC
OsThunkDdResetVisrgn
OsThunkDdSetExclusiveMode
OsThunkDdSetGammaRamp
OsThunkDdUnlock
OsThunkDdUnlockD3D
OsThunkDdWaitForVerticalBlank
Out of memory
Out of memory.
Out of memory.  Aborting shader decl. validation.
OutputDebugStringA
OutputDebugStringW
p h<j
PeekNamedPipe
Phase marker cannot be co-issued.
phase marker cannot be co-issued.
PixelShaderVersion
Point size
Position
Position2
PostMessageA
PQh0g
PQh0j
PQSVW
PQVQW
PRh0g
Primary Display Driver
ProcessInfo
ProductName
ProductVersion
PSh h
PWh h
QCOMu
qH_^]
QLSVW
QQPWj
QueryPerformanceCounter
QueryPerformanceFrequency
QVPtA
r"HPSj
r/HPSh(
r/HPWhde
r0 must be written by shader. Uninitialized component%s(*): %s
r0 must be written by shader. Uninitialized component%s(*): %s. Note that an unfortunate effect of the phase marker in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including r0, are lost. So after a phase marker, the alpha component of r0 must be written.
r0 must be written by shader. Uninitialized component%s(*): %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. The blue component of r0 must to be written after the texcrd.
r0 must be written by shader. Uninitialized component%s(*): %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. The blue component of r0 must to be written after the texcrd. Also: Note that an unfortunate effect of the phase marker in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including r0, are lost. So after a phase marker, the alpha component of r0 must be written.
Read of uninitialized component%s(*) in %s%d: %s
Read of uninitialized component%s(*) in %s%d: %s. Note that an unfortunate effect of the phase marker earlier in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including the one noted here, are lost. In order to read alpha from an r# register after the phase marker, write to it first.
Read of uninitialized component%s(*) in %s%d: %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. In order to read blue again, write to it first.
Read of uninitialized component%s(*) in %s%d: %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. In order to read blue again, write to it first. Also: Note that an unfortunate effect of the phase marker earlier in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including the one noted here, are lost. In order to read alpha from an r# register after the phase marker, write to it first.
ReadFile
Reg num: %d for %s source param on matrix instruction causes attempt to access out of range register number %d. Max allowed for this type is %d.
RegCloseKey
RegCreateKeyA
RegCreateKeyExA
RegEnumKeyA
RegGetValueA
Register r%d (and thus texture stage %d) already used as a destination for a tex* instruction in this block of the shader. An r# register may be used as the destination for a tex* instruction at most once before the phase marker and once after. 
Register r%d (and thus texture stage %d) already used as a destination for a tex* instruction in this block of the shader. Second use of this register as a tex* destination is only available after the phase marker. 
Register r%d (and thus texture stage %d) already used as a destination for a tex* instruction in this block of the shader. To perform two tex* instructions with the same destination register, they must be separated by inserting a phase marker. 
RegisterHotKey
RegOpenKeyA
RegOpenKeyExA
RegQueryValueExA
RegSetValueExA
Relative addressing of constant register must reference a0.x only.
ReleaseDC
ReleaseMutex
ReleaseSemaphore
Reserved bit(s) set in destination parameter token!  Aborting validation.
Reserved bit(s) set in instruction parameter token!  Aborting validation.
Reserved bit(s) set in source %d parameter token!  Aborting validation.
ResetEvent
RGBGt
RtlDllShutdownInProgress
schemaVersion
second
Second source parameter for bem must be temp (r#) register.
Second source parameter for texm3x3spec must be c#.
SelectObject
SendMessageA
SetClipboardData
SetCursor
SetCursorPos
SetErrorMode
SetForegroundWindow
SetNamedPipeHandleState
SetProcessDpiAwarenessInternal
SetRect
SetRectEmpty
SetSecurityDescriptorDacl
SetSecurityInfo
SetStretchBltMode
SetUnhandledExceptionFilter
SetWindowLongA
SetWindowPos
ShowFrameRate
ShowWindow
Sleep
Software\Microsoft\Direct3D\Drivers
Software\Microsoft\Direct3D\MostRecentApplication
Software\Microsoft\Direct3D\ReferenceDevice
Software\Microsoft\DirectDraw
Software\Microsoft\DirectDraw\GammaCalibrator
Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers
SoftwareOnly
Source for texcrd requires component selector .xyw(==.rga), or .xyz(==.rgb). Note: Using no selector is treated same as .xyz here.
Source swizzle not allowed for tex* instruction (%s source param).
Specular
Src reg for tex* instruction must be t# register (%s source param).
Src selector .b (%s source param) is only valid for instructions that occur in the alpha pipe.
sscanf_s
strcpy_s
StretchBlt
StringFileInfo
strrchr
SUBSYS_
SVWj<
SVWj0
SystemParametersInfoA
t!Qj@
t"hxt
t# registers must appear in sequence (i.e. t0 before t2 OK, but t1 before t0 not valid).
t#h4U
t$ ;_
t$ PS
T$ u~
T$$Rj
t$(WV
T$,;T$L
T$,RQ
t$|WP
t$4Wj
t$8WV
T$Lf;
t)=DXT1t"=DXT2
t,h\A
t;GHv
t@9^tt;
t0j,j
t5PWS
t7SVW
t9jZW
t'9t$
t-9t$
TA;L$Pr
tcWSQ
tDj0j
TerminateProcess
Tex register t%d already declared.
tex* instructions cannot be after arithmetic instructions within one phase of the shader.  Each phase can have a block of tex* instructions followed by a block of arithmetic instructions. 
tex* instructions cannot be after arithmetic instructions. The exception is if a phase marker is present in the shader - this separates a shader into two phases.  Each phase may have a set of tex* instructions followed by a set of arithmetic instructions.  
tex* instructions must write all components.
texcrd must use .xyz(=.rgb) destination writemask.
texcrd with _dw(=_da) source modifier must use .xy(=.rg) destination writemask.
texld/texkill/texdepth instructions must write all components.
Texture
Texture coordinate register t%d read more than once in shader with different source selector (swizzle). Multiple reads of identical texture coordinate register throughout shader must all use identical source selector. Note this does not restrict mixing use and non-use of a source modifier (i.e. _dw/_da or _dz/_db, depending what the swizzle allows) on these coordinate register reads.
Texture register result of texbem or texbeml instruction must not be read by tex* instruction. Affected components(*) of %s source param: %s
Texture register result of texkill%s or texm*pad instructions must not be read. Affected components(*) of %s source param: %s
Texture register that has been read by a tex* instruction cannot be read by a non-tex* instruction. Affected components(*) of %s source param: %s
tFWj@
The current tex* instruction reads from %c%d, which was written earlier by another tex* instruction in the same block of tex* instructions.  Dependent reads are not permitted within a single block of tex* instructions.  To perform a dependent read, separate texture coordinate derivation from the tex* instruction using the coordinates with a 'phase' marker.
The only valid modifiers for the first source parameter of lrp are: reg (no mod) or 1-reg (complement).
The only valid write masks for the FRC instruction are .xy and .y.
third
tkh`T
tn;7uc
To use bem, a phase marker must be present later in the shader.
Too many (%d) arithmetic instructions after phase marker. Max. allowed in a phase (counting any co-issued pairs as 1) is %d.
Too many (%d) arithmetic instructions before phase marker. Max. allowed in a phase (counting any co-issued pairs as 1) is %d.
Too many (%d) arithmetic instructions. Max. allowed (counting any co-issued pairs as 1) is %d. Note that adding a phase marker to the shader would double the number of instructions available.
Too many (%d) tex* instructions after phase marker. Max. allowed in a phase is %d.
Too many (%d) tex* instructions before phase marker. Max. allowed in a phase is %d.
Too many (%d) tex* instructions. Max. allowed is %d. Note that adding a phase marker to the shader would double the number of instructions available.
Too many arithmetic instruction slots used: %d. Max. allowed (counting any co-issued pairs as 1) is %d.
Too many texture addressing instruction slots used: %d. Max. allowed is %d. (Note that some texture addressing instructions may use up more than one instruction slot)
Total number of instruction slots used too high: %d. Max. allowed (counting any co-issued pairs as 1) is %d.
Translation
u WVP
u^h(U
UnhandledExceptionFilter
UnionRect
Unrecognized instruction. Aborting pixel shader validation.
Unrecognized instruction. Aborting vertex shader validation.
UnregisterHotKey
UsePSConverter
User/kernel-mode driver mismatch
USER32
user32.dll
USER32.dll
UseVSConverter
Using a temp register (r#) as source for texld requires component selector .xyz(==.rgb). Note: Using no selector is treated same as .xyz here.
Using a texture coordinate register (t#) as source for texld requires component selector .xyw(=.rga), or .xyz(=.rgb). Note: Using no selector is treated same as .xyz here.
UTCReplace_AppSessionGuid
u'VPS
UYVYt
UYVYtP
v"PRh
v"QRh@
v{PRh
ValidatePixelShader
ValidateVertexShader
VarFileInfo
VerifyVersionInfoA
VerQueryValueA
VerSetConditionMask
Version Token: %d.%d is not a supported pixel shader version. Aborting pixel shader validation.
Version Token: %d.%d is not a supported vertex shader version. Aborting vertex shader validation.
Version token: 0x%x indicates a pixel shader.  Vertex shader version token must be of the form 0xfffe****.
Version Token: 0x%x indicates a vertex shader.  Pixel shader version token must be of the form 0xffff****.
Version Token: 0x%x is invalid. Pixel shader version token must be of the form 0xffff****. Aborting pixel shader validation.
Version Token: 0x%x is invalid. Vertex shader version token must be of the form 0xfffe****. Aborting vertex shader validation.
Version Token: Code and declaration pointers passed into shader vertex shader validator cannot both be NULL.
Version Token: Pixel shader version %d.%d is too high for device.  Maximum supported version is %d.%d. Aborting shader validation.
Version Token: Vertex shader version %d.%d is too high for device. Maximum supported version is %d.%d. Aborting shader validation.
Vertex shader must minimally write first two (x,y) components of oPos output register.
Vertex shader must minimally write first two (x,y) components of oPos output register.  Affected component%s(*): %s
VHu7;
vJPQh
VS_VERSION_INFO
VWj<j
VWj0j@
w ^_[
w@SVW
w_t$-
w5t)=
WaitForSingleObject
wcscpy_s
wcsrchr
When a phase marker is present in a shader, texdepth is only permitted after the phase marker.
When a phase marker is present in a shader, texkill is only permitted after the phase marker.
WideCharToMultiByte
wintrust.dll
WinVerifyTrust
wIt"-
wlt^=
Wow64EnableWow64FsRedirection
WriteFile
Writemask for bem must be '.rg'
Y__^[
y{_^[
y>_^[
y4_^[
yD9qHr
YUY2t
YUY2tH
YUY2u
