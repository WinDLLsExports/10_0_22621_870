 Microsoft Corporation. All rights reserved.
 Operating System
 SVW3
 Windows
!( ( ((PSecHandle) (&info->sslCredentialHandle[(UINT)handleType]))->dwLower != ((ULONG_PTR) ((INT_PTR) -1 ))) && ( ((PSecHandle) (&info->sslCredentialHandle[(UINT)handleType]))->dwUpper != ((ULONG_PTR) ((INT_PTR) -1 ))) )
!accessToken.empty() && !_IsCurrentTimePastExpirationTime(expirationTime)
!SecIsValidHandle(&info->sslCredentialHandle[(UINT)handleType])
!This program cannot be run in DOS mode.
!token.empty() && ((nullptr == pCurrentToken) || (token != pCurrentToken))
#$#$#DataStoresLock#$#$#
#D$<PS
$Qjv3
$tG9T
$VWP3
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
%s %s
%s%s-%d/%u.%u.%u
%s%s%s-%d.txt
%s:%s
%s\%s
%s\%s-%d.txt
%s\Ping %s-%d.txt
%s\SKZ %s.txt
%s\WebAuth\%s
%x - %s
&client_secret=
&code=
&device_model=
&device_name=
&grant_type=authorization_code
&grant_type=refresh_token
&login_hint=
&PWSV
&redirect_uri=
&refresh_token=
&response_type=
&scope=
( ( 0x10a40000 | 31 ) ) == propertyValues[0].propid
( *pMutexHandle ) != 0
(!!parsed)
((&nameVar)->vt) == VT_BSTR
(((HRESULT)(_IsValidToken(currentToken, &valid))) >= 0) && (0 != valid)
(((HRESULT)(error)) < 0)
(((HRESULT)(hr)) >= 0)
(((HRESULT)(hr)) >= 0) && (info != 0)
(((HRESULT)(hr)) >= 0) && (info != nullptr)
(((HRESULT)(hr)) >= 0) || (((HRESULT)0x85050002) == hr)
(((NTSTATUS)(_ntStatus)) >= 0)
((*pPropNotEmptyFilterIndices)[i] >= 0) && ((*pPropNotEmptyFilterIndices)[i] < c_numGalContactPimProps)
((HRESULT)(50L) <= 0 ? ((HRESULT)(50L)) : ((HRESULT) (((50L) & 0x0000FFFF) | (7 << 16) | 0x80000000))) == hr
((HRESULT)0x80070057L)
((HRESULT)0x80070057L) != hr
(_itow_s((int)expirationTime, conversionBuffer, 10) == 0)
(0 != nSize)
(0 != ret)
(200 == httpStatus)
(accessorType == __uuidof(PopImapAccountAccessor)) || (accessorType == __uuidof(ExternalAccountAccessor)) || (accessorType == __uuidof(ActiveSyncAccountAccessor))
(caller: %p) 
(dwType == ( 4ul ))
(expirationTime == (double)((int)expirationTime))
(nullptr != pAuthTarget) && (L'\0' != *pAuthTarget)
(size > 0)
(StringFromGUID2(accountId, pEnd, (INT)[](size_t num) { INT out = 2147483647; do { HRESULT _hrTemp = Typecheck::CheckChrType(UIntPtrToInt(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\credutil.cpp", 580  ); } } while(0,0); return out; }(countCharsRemaining)) > 0)
(utl::wstring::npos != beginIndex)
*~*~*~*~*~*~*~*~*~*
*pEndToken == 0
*pEndToken == NULL
*ppszMultiByteStr == 0
*ppszMultiByteStr == NULL
*ppwszWideCharStr == 0
*ppwszWideCharStr == NULL
,SVWPj
.00cfg
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.data
.data$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gfids
.giats
.hotmail.com
.idata
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.outlook.com
.rdata
.rdata$brc
.rdata$sxdata
.rdata$T$brc
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.tls$
.tls$ZZZ
.xdata$x
: :A:n:y:
:#:+:h:|:
:#:M:e:v:
:$:k:
:$;_;
:(:.:F:o:
:(;e;
:,:4:x:
:,:Y:
:,;<;
:-:::W:`:f:
:':8:Y:
::StringCchCatW(deviceTypeDefault, sizeof(*__countof_helper(deviceTypeDefault)), deviceTypeFamily)
::StringCchCopyW(pwszUserAgent, userAgentLength, userAgent.c_str())
:';,;];
:';7;<;i;
:-;A;I;
:?;O;
:[:k:{:
:]:q:y:
:+:1:I:z:
:+:8:b:o:
:<;S;
:0P0`0k0
:1:<:B:H:S:Y:r:x:
:1:D:L:Y:a:
:6;I;b;
:8:P:X:\:`:d:t:x:|:
:8;B;a<
:B:b:x:
:H:#;/;;;G;S;w;
:I:]:e:
:J:b:
:Q;h;
:R:g:s:%;/;5;H;P;Y;y;
:V:i:
; ;>;j;
;!;<;V;g;
;!;5;
;!<(<7<
;!<><P<^<g<q<y<
;";&;*;.;2;6;:;
;";9;i;
;";a;u;};
;";s;z;
;$;*;H;m;
;%;b;
;%<9<A<~<
;*<A<}<
;,<6<J<P<T<Y<_<c<
;,<Y<|<
;.;4;H;
;.;6;s;
;.;9;c;t;
;/;J;
;/<[<
;;<U<
;-;5;{;
;];u;};
;+<G<
;=;K;`;
;>;x;
;0<Y<
;1;H;
;3;8;D;U;];p;|;
;3<9<@<T<`<g<
;7;?;Y;h;x;
;9;F;[;r;
;A<^=3>
;B<|<
;C;W;_;
;C<M<[<
;D$<u
;J<V<
;K;_;g;
;L;^;
;S<X<s<
;v<}<
;Y;m;
?!?G?}?
?$?,?i?}?
?$?K?d?
?(?3?:?U?[?a?g?m?s?z?
?(?f?o?
?;?`?
?;?E?O?
???M?
?\?f?
?0?8?
?1?v?
?5?n?
?9?G?V?y?
?9?U?_?
?access_token=
?B?g?q?
?C?I?V?
?client_id=
?h?|?
?I?l?
?P?d?k?
?U?i?q?
?V?a?
?Z?{?
@.didat
@.reloc
@f94Bu
@v4j@V
[%02d/%02d/%04d %02d:%02d:%02d.%03d] 
[%hs(%hs)]
[%hs]
[f9\$0t
[Rich
\$ PR
\$$Pj@hpD
\MailContactsCalendarSync\LiveDomainList.txt
^SSSSh
_^[Y]
__CxxFrameHandler3
__dllonexit
_amsg_exit
_callnewh
_errno
_except_handler4_common
_ftol2_sse
_GetAADToken
_GetBackendType() == c_pExchangeServiceType
_i64tow_s
_initterm
_IsValidToken(accessToken.GetRawBuffer(nullptr))
_IsValidToken(refreshToken)
_itow_s
_lock
_onexit
_purecall
_statusTemp == 0L
_strnicmp
_TranslateNotFoundErrors(AwaitOperationResult( findAccountOperation.p, &webAccount))
_TranslateNotFoundErrors(AwaitOperationResult( findAccountProviderOperation.p, &webAccountProvider))
_TranslateNotFoundErrors(AwaitOperationResult( getDefaultSignInAccountResultOperation.p, &result))
_unlock
_vscwprintf
_vsnprintf
_vsnwprintf
_vsnwprintf_s
_wcsicmp
_wcstoui64
_wtoi
_XcptFilter
`.data
{5B04B775-356B-4AA0-AAF8-6491FFEA5614}
|$ h@
|$ PQ
|$$PQQ
|$$PVV
~$9~(t
~(9~<t
~,_^]
~<9~8t
~89~,t
+|$(PSW
+9>u6
<!<.<9<k<t<
<$<-<I<b<t<
<$=<=D=
<%=8=@=M=U=
<)</<C<
<*=9=>=k=
<.<U<k<
<:<H<u<
<:=N=V=
<;<K<
<==C=c=n=u=
<><n<
<0<e<k<x<
<1<9<v<
<1<a<
<1<E<O<r<
<1<H<]<
<1<H<a<q<
<1=Q=r=v=|=
<3<C<H<u<
<6=`=
<9<F<f<
<A=g=
<C<o<~<
<D=\=d=
<E=Q=\=|=
<g=n=
<I=\=d=p=
<J=O=
<N=o=O>o>|>
<O=\=g=
<S<}<
<U<\<
<X<p<x<
<Y<m<u<
= =,=4=L=T=l=
= =]=q=y=
= =G=
--= Protocol logs for PARTNER='%S', CTRLLOG ID=0x%08X =--
=!=L=
=(=1===E=W=
=)=3=J=i=s=
=,>s>
=.>z>
=/=@=g=~=
=:>Q>h>
=?>o>u>
=\>c>
=+?u?
=-= Build %d =-=
=-=-=-= Client Request =-=-=-  Timestamp: 
=-=-=-= Server Response =-=-=- Timestamp: 
=3=R=
=4><>~>
=4>C>d>j>~>
=6=<=P=
=6>@>
=8=E=
=c=w=
=E>T>_>
=I>^>
=J=n=
=r=y=
> >$>,>0>P>l>p>
>"?B?
>#?(?
>#?j?
>#?M?X?
>#?Y?
>#>)>->A>P>Y>b>
>#>.>7>
>#>+>h>|>
>$?3?>?a?
>&?`?
>&>Y>`>
>(>6>C>v>
>(>H>h>
>)>3>G>
>)>G>l>q>
>)>K>^>f>s>{>
>*?/?R?s?
>.>D>K>
>-?]?
>-?4?@?p?z?
>[>p>
>->^>d>
>2><>
>4?H?P?r?
>B>L>
>E>Y>a>
>k>w>
>P>c>k>x>
>V>n>v>
0 != *pCustomerId
0 != hashValueSize
0 != m_activityRefCount
0 != ppResumeState
0 != pScopeMetadata
0 != pServerName
0 != pSyncPartner
0 != sessionScope
0 != wideCount
0 == (clientSecretSize % sizeof(WCHAR))
0 == sessionScope
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0 0$0(0004080<0@0D0H0L0P0T0X0`0d0h0l0p0t0|0
0 0(0,0004080D0H0L0P0X0`0h0t0
0 0P0[1
0 1V1m1
0!0'030C0L0c0i0o0u0{0
0"1>1
0$1L1p1t1x1
0&191f1u1
0)1^1
0.w/X#
0/0q0|0
0?1F1
0?1F1_1v1
0@1Z1t1S2g2o2
0[0g0
00000000-0000-0000-0000-000000000000
000000004011621F
011E1
031@1V1
040>0~0
040904B0
040Q0r0
041L1T1
070e0
071K1S1
0a1i1o1
0C0s0
0F0^0f0
0H1c1
0L == lResult
0R0m0
0T0l0t0
0T0p0
0W0k0
0Y0`0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1 1.1?1G1]1e1
1 1+1Q1~1
1 121
1 1P1x1
1"2(2F2m2w2
1"2E2}2
1%1+181Z1a1
1%282@2M2U2
1&1X1
1)181C1b2<3Y3
1)2V2}2
1*121x1
1*2a2
1*2D2
1,1R1w1
1.1?1G1b1j1{1
1.3.6.1.4.1.311.71.1.1
1.3.6.1.4.1.311.71.1.2
1.3.6.1.5.5.7.3.2
1:1E1U1a1
1?1c1
1+1T1
1<1~1
1=1o1
10.0.22621.1
10.0.22621.1 (WinBuild.160101.0800)
101>1T1q1
10Z0t0
111\1x1
111J1i1x1
1-1R1
1-2c2
163.com
171Z1b1l1
181^1g1
-1D1M2
1f;2u
1K1g1
1O2_2d2
1P2d2l2
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2 2$2(2,2024282<2@2D2H2P2T2X2\2`2d2h2l2p2t2x2|2
2!2.262[2
2!272
2!2v2
2"2.2
2"2:2
2"2A2
2$3z3
2&2:2@2D2I2O2S2
2&2H2
2(212:2@2Z2
2(292N2l2
2,2E2s2
2/2:2i2
2;2]2o2
2[2w2
2<2a2
2>2G2S2`2v2
20282m2s2
232?2c2
2'3A3V3`3t3
253I3Q3
282f2
283e3
292k2
2A2O2Y2
2C2|2
2E2Y2a2
2f2q2
2H2k2
2N3X3
2Q3Q4
2R2n2
2UuwarE
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3 3$3(3,3034383<3@3X3d3h3l3
3 3P3O4q4
3 444<4
3 4u4
3!3^3r3z3
3"3*3
3"3*3g3{3
3"3c3
3$6;6M6
3&3.3k3
3)313n3
3*3\3
3*323?3
3,3{3
3/3H3\3~3
3:4?4I4
3?3u3
3?3V3m3
3[4`4
3<3~3
3<4d4
3=4]4q4
30:0S0Z0
30383\3k3v3
343O3v3
344T4
363H3`3
373F3V3
3A3g3
3a3u3}3
3B3V3^3
3B5L5L6
3E4g4z4
3F3`3
3I4]4}4
3N4m4
3P3d3l3
3R3X3v3
3S3o3
3V3[3|3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
4 444:5
4!4m4}4
4"4*494E4b4
4#4+4
4#404
4#5V5i5
4$434Q4m4
4$575G6[6c6
4%434
4%444
4%595A5
4&4O4|4
4)414w4
4*5/595y5)646E6R6
4*5>5F5
4,4<4x4~4
4\5p5x5
4+4H4W4`4f4
4+4N4a4i4v4~4
4+5C5T5[5s5
4'4.494@4
4-454
4'505
455=5G5
4C4[4
4C5[5c5
4F5W5h5y5
4G4V4a4
4M4a4i4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
5 5L5X5{5
5#575G5W5g5w5
5#676?6|6
5%5-53595>5C5I5O5x5
5%6]6
5*525s5
5,5=5D5V5]5v5
5.6~6
5.656O6|6
5:6z6
5+5=5E5g5
5+535N5V5g5o5
5+6B6[6|6
5<6\6
5=5j5p5
5=6r6
5=6U6_6}6
505d5
545T5
555C5I5P5V5^5d5j5q5}5
555Z5x5
556I6Q6
5A6K6f6
5b5{5
5b5v5~5
5H5Q5[5
5J6k6
5K5`5o5
5X5l5t5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
6 7%7
6 7e7y7
6#606D6
6#6Q6^6g6s6 7<7Y7w7
6$6I6a6
6$7@7]7z7
6$7=7\7h7
6$7N7
6&6c6w6
6(606m6
6(686H6U6i6v6
6(7R7i7
6,7J7
6.7B7J7
6/6I6W6|6
6?6R6Z6g6o6
6@6\6
6\6p6x6
6+676<6`6
6+6J6P6]6o6w6
6+6L6
6<7S7
60=0T0
636i6
637G7O7
6'6/6
6-6<6L6i6n6>7D7Q7f7
6-6g6{6
676v6
6a6u6}6
6B6n6.7W7d7
6B7\7n7
6E7Q7d7
6O7w7
6U7h7r7
7 7,7D7H7L7P7X7`7l7p7t7
7!7%7*70747b7
7!7C7O7V7
7"7*7g7{7
7"7c7
7"8Z8
7#7+7`7t7
7$757X7|7
7$787
7$8*8
7)717n7
7)8p839[9w9
7*777p7
7,8A8o8
7.7>7N7^7n7~7
7.7E7T7[7`7
7/8=8D8`8
7:8N8V8
7@7T7\7
7+8?8G8
7<8P8X8
718O8
727:7y7
727h7u7
737;7
737;7]7p7x7
738:8A8Z8
798M8U8
798R8
7A7]7i7
7a9Q;
7C7}7
7F7z7
7J7Y7
7M8d8{8
7U8x8
7w8A9
8 808@8P8`8m8
8 8A8
8!838=8Y8
8!8g8
8$8\8
8%8*8W8
8&8M8W8k8q8u8z8
8(8L8
8(939N9X97:u:
8)8@8p8
8)8H8i8r8
8,80848L8P8T8\8l8p8t8|8
8,9P9
8.8h8
8/8^8r8
8/8P8
8/9?9Q9k9
8:9?9z9
8?9W9_9
8]8j8
8+818E8
8+9i9
8>8R8Z8
819Y9_9s9
838I8W8
839K9S9#:\:
859~9
862726500644-mba83qqf9kq69c5mk9u5h2dn4iocdspq.apps.googleusercontent.com
8'9;9C9e9x9
8-9^9o9|9
899M9U9
8G9a9
8H9m9
8L9_9g9t9|9
8M8a8i8
8M8e8m8
9!:W:t:
9"9/979
9$:1:l:y:
9$:L:j:
9$9*9>9
9$9A9\9b9o9
9%:N:r:
9%:U:a:y:
9%9?9q9
9&9<9I9m9
9/9?9
9/9a9
9?:y:
9@9q9
9_9w9
9|$$|7Q
9+:\:
9+;l<
9>9O9^9e9
90:M:Z:
90t6jb_W
90u:hpc
90u0jz_
91989>9H9W9_9k9p9v9
93uHWV
94:G:O:\:d:
949k9
949L9d9|9
949p9
959j9
96:J:R:
969y9
9A9J9P9v9
9C9W9
9D$ u?
9D$(t
9D9X9`9}9
9M:`:h:u:}:
9t$ u<
9V:^:
9Z:_:z:
A0+A4
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
access_token
access_type=offline
accessor.CoCreateInstance(__uuidof(ActiveSyncAccountAccessor))
accessor.CoCreateInstance(__uuidof(PopImapAccountAccessor))
accessor.CoCreateInstance(m_accessorType)
account
account->get_WebAccountProvider(&provider)
accountAbsent
accountConfig.CoCreateInstance(__uuidof(ActiveSyncApp))
accountId.reserve(accountIdBufferLength)
accountInternal->get_Id(accountId.GetAddressOf())
accountInternal->get_Properties(&accountProperties)
accountInternal->get_Properties(&properties)
accountProperties->HasKey( HStringReference(AccountAutorityPropertyName).Get(), &hasAuthrority)
accountProperties->Lookup( HStringReference(AccountAutorityPropertyName).Get(), authority.GetAddressOf())
AcquireDataStoreLock
AcquireDataStoreLockEx
AcquireSRWLockExclusive
ActivateInstance( HStringReference(RuntimeClass_Microsoft_PPI_CredentialManagement_PPIDeviceCredentialReader).Get(), &reader)
ActivateInstance( HStringReference(RuntimeClass_Windows_Internal_Security_Authentication_Web_TokenBrokerInternal).Get(), &listener)
ACTIVESYNC_DATASOURCE_EXCHANGE == accountType
ActiveSyncCredential
ActiveSyncCredentialDefaultUser
ActiveSyncCredentialSchema
ActiveSyncUnistoreLockTemplate
added.first != nullptr
AggregateAccountSyncStats
AggregateSessionSyncStats
AirSync:FolderSyncFlags
AirSync:IsSearchResult
AirSync:LongID
AirSync:ParentID
AirSync:ParentServerID
AirSync:PermanentDelete
AirSync:PermanentID
AirSync:SyncOptionsHash
AllowSMIMEEncryptionAlgorithmNegotiation
AllowSMIMESoftCerts
apidata.googleusercontent.com
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-libraryloader-l1-2-1.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-registry-l2-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-string-obsolete-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-sysinfo-l1-2-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-url-l1-1-0.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-downlevel-shlwapi-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-security-accesshlpr-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-shcore-stream-l1-1-0.dll
api-ms-win-shell-shdirectory-l1-1-0.dll
APPID
aSPh6&
Assert
ASync3dF[^
ATL$__a
ATL$__m
ATL$__z
Authority
authority
AuthUri
AwaitOperationResult( webTokenRequestResultOperation.p, &result)
backendType == c_pMSAServiceType
Basic
Basic %hs
BytesToDigits
bytesWritten == bytesToCommit
C ;L$
C(QPh
C@QPh
C<QPh
C0+C,
C8QPh
caldav.calendar.yahoo.com
CalendarAgeFilter
callContext
CallContext:[%hs] 
carddav.address.yahoo.com
cbWrite == chunkSize
CEMAPI.dll
CertCompareCertificateName
CertFreeCertificateChain
CertFreeCertificateChainEngine
CertGetCertificateChain
CertGetCertificateContextProperty
CertGetEnhancedKeyUsage
CertGetNameStringW
charsConverted != 0
CHttpTransport_CreateInstance
client_id=
client_id=%s&client_secret=%s&grant_type=refresh_token&refresh_token=%s&scope=%s
client_secret
clientSecret.reserve(clientSecretSize / sizeof(WCHAR))
ClientUnreadToReadCount
CloseDataStoreLock
CloseHandle
CloseHandle ( lockHandle )
CloseThreadpoolTimer
CLSID_MailSyncEngine == sds.engineID
CLSIDFromString
cNames
CoCreateInstance
CoCreateInstanceElevated
code=
CoGetObject
CoGetObject( monikerName.c_str(), &bindOptions, interfaceId, ppInstance)
CoInitializeEx
CommsService
CompanyName
CompareFileTime
componentId
componentName
CompressWhitespaceNW
consumers
Content-Type: application/x-www-form-urlencoded
convertedBufferSize != 0
ConvertVariantTimeToFileTime
ConvertVariantTimeToFileTime(0, &(lastSyncTimeAsDate.date), &lastSyncTime)
CoTaskMemAlloc
CoTaskMemFree
CoUninitialize
CoWaitForMultipleObjects
CreateAuthHandler
CreateDataStoreLock
CreateEventExW
CreateEventW
CreateFileW
CreateMutexExW
CreateMutexW
CreateSemaphoreExW
CreateSyncBufferedStream
CreateThreadpoolTimer
CreateWrapFileStm
credential.assign(password)
credential->get_Password(&securePassword)
credentialUtilities->GetAccessToken( HStringReference(c_scope).Get(), HStringReference(c_defaultResource).Get(), tokenResult.GetAddressOf())
credentialUtilities->GetAccessToken( HStringReference(c_scope).Get(), HStringReference(resource.get()).Get(), tokenResult.GetAddressOf())
CredUtil_UpdatePasswordForAccount
CredVaultDelete
CredVaultRead
CredVaultWrite
CRYPT32.dll
CryptAcquireContextW
CryptAcquireContextW( tlx::replace(provider), 0, 0, 1, 0xF0000000)
CryptBinaryToStringA
CryptBinaryToStringA( pInputBuffer, inputBufferLength, 0x00000001 | 0x40000000, pOutputString, outputStringLength)
CryptBinaryToStringW
CryptBinaryToStringW( pInputBuffer, inputBufferLength, 0x00000001 | 0x40000000, pOutputString, outputStringLength)
CryptCreateHash
CryptCreateHash( provider, ((4 << 13) | (0) | 4), 0, 0, tlx::replace(hash))
CryptDestroyHash
CryptGetHashParam
CryptGetHashParam( hash, 0x0002, hashValue, &hashValueSize, 0)
CryptGetHashParam( hash, 0x0004, (LPBYTE)&hashValueSize, &dwordSize, 0)
CryptHashData
CryptHashData(hash, (LPBYTE)pUserId, (DWORD)[](size_t num) { DWORD out = 0xffffffffUL; do { HRESULT _hrTemp = Typecheck::CheckChrType(UIntPtrToULong(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\asutil.cpp", 524 ); } } while(0,0); return out; }(userIdSize), 0)
CryptReleaseContext
CRYPTSP.dll
CryptStringToBinaryA
CryptStringToBinaryA( pInputString, inputStringLength, 0x00000001, pOutputBuffer, pOutputBufferLength, 0, 0)
CryptStringToBinaryW
CryptStringToBinaryW( pInputString, inputStringLength, 0x00000001, pOutputBuffer, pOutputBufferLength, 0, 0)
currentContextId
currentContextMessage
currentContextName
currRefreshTokenValid
customAuthParams.append(escapedUsername.c_str())
customAuthParams.append(idParams)
customAuthParams.append(L"&")
customAuthParams.append(L"access_type=offline")
customAuthParams.append(L"username=")
D$ 9D$
D$ j@3
D$ Ph
D$ Pj
D$ PQ
D$ QQ
D$ SV
D$ SVW
D$ YY
D$$9D$
D$$Ph,F
D$$PV
D$$PW
D$$SP
D$(;D$,
D$(9D$ t
D$(Ph
D$(Pj
D$(SP
D$(SVW
D$(VP
D$(xr
D$,Ph
D$@9D$8t
D$@hP
D$\9D$T
D$\9D$Tt
D$`Pj Z
D$`PS
D$`SVW
D$|j@SP
D$<L(
D$<Q+
D$09D$(
D$09D$(t
D$09D$(t3S
D$0Pj
D$0Pj<h l
D$0PVV
D$0SVW
D$0xr
D$49D$,t
D$4CV3
D$4H(
D$4Pj
D$4PW
D$89D$0t
D$8QP
D$d9D$\t
D$D9D$<t
D$DPh
D$DPj
D$DS3
D$dSP
D$FPh
D$H9D$@t
D$Hj'PV
D$HPWh
D$Hxr
D$L9D$Dt
D$LPj
D$P9D$Ht
D$T9D$Lt
D$TPh
D$TPj
D$XPj
data.reserve((1024 * 60)+1)
DebugBreak
DefaultLogging
DefaultStoreDirty
DefaultWindowsLiveCid
DelayLoadFailureHook
DeleteAuthCertHash
DeleteCriticalSection
DeleteDataSource
DeletedMailCount
DeleteFileW
DeleteHttpTransport
DeleteInProgress
DeleteOAuthRefreshTokenForPartnership
DeletePwd
Device
device_id=
deviceFamily < 100
DeviceID
deviceID.valid()
deviceModel.assign(values)
deviceName.assign(values)
DeviceNeedsProvisioning
DeviceType
DisablePIIStripping
dj0yJmk9QzFFaHJsUnphMjlnJmQ9WVdrOVZUVk9iMWhCTXpZbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmeD1lYw--
DllCanUnloadNow
DllGetClassObject
DMCfgUtils.dll
DoesServerSupportAutoMoveSentItem
Domain
DuplicateHandle
dwRC == 0L
dwSize == sizeof(DWORD)
E_INVALIDARG != hr
EASAccountId
Elevation:Highest!new:%s
email
Email
EmailAgeFilter
emails
Enabled
EnabledDavFeatures
EnableInProcTracingForProvider
encodedCredentials.reserve(encodedSize)
Engine
EnterCriticalSection
en-US
Error
error
errorCode
EscapeURL
EventData
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
Exception
Exchange
expirationTime
expires_in
expression
ext-ms-win-ole32-bindctx-l1-1-0.dll
ext-ms-win-shell32-shellfolders-l1-1-0.dll
F$u3Q
f&8).
F@+F<
f9;t-
f9\$ u
factory->ActivateInstance(&inspectable)
FAILED(error)
FailFast
failureCount
failureId
FailureTrigger
failureType
FallbackError
FALSE
FileDescription
fileHandle != ((HANDLE)(LONG_PTR)-1)
fileName
filePos
FileTimeToSystemTime
FileVersion
FindErrorCode
FlushInProcTraceSession
Fonecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\sourceinfo.cpp
FormatMessageW
FreeCredentialsHandle
FreeLibrary
FreeProws
FreeTransientObjectSecurityDescriptor
function
functionName
G Ph$
g_hServerReady != 0
GetAADToken
GetAccountSyncStats
GetAccountUsernameFromToken
GetActivationFactory( HStringReference(RuntimeClass_Microsoft_PPI_CredentialManagement_DeviceCredentialUtility).Get(), &credentialUtilities)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Foundation_Uri).Get(), &uriFactory)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Internal_Security_Authentication_Web_TokenBrokerInternal).Get(), &tokenBroker)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_Core_WebAuthenticationCoreManager).Get(), &webAuthCore)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_Core_WebTokenRequest).Get(), &requestFactory)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_WebAuthenticationBroker).Get(), &wabBrokerStatics)
GetAuthCertHash
GetAuthCertTargetAndUser
GetAuthority
GetBatterySaverWnfName
GetCurrentProcess
GetCurrentProcessId
GetCurrentSyncStats
GetCurrentSyncStatsForMessage
GetCurrentSyncStatsForStore
GetCurrentThread
GetCurrentThreadId
GetDefaultDeviceType
GetDefaultMsaWebAccountId
GetDefaultStoreDirty
GetDomainFromEmail
GetFileAttributesExW
GetFileSize
GetGalSearchResultsFolderAndPartnerGuidEx
GetGoldenPartnershipId
GetLastError
GetLocalTime
GetMeetingNotificationFromMessage
GetModuleFileNameA
GetModuleFileNameW
GetModuleHandleExW
GetModuleHandleW
GetMonitorDisplayState
GetMsaCustomerId
GetMsgStoreFromMessage
GetOAuthAccessTokenForPartnership
GetOAuthHelperForAccount
GetOAuthHelperForProvider
GetOrCreateNullPowerDependencyCoordinatorManager
GetOutgoingMessageSizeLimit
GetPartnerGUID
GetProcAddress
GetProcessHeap
GetProductInfo
GetProviderUri
GetSessionSyncStats
GetSHA1HashOfString
GetSyncTargetName
GetSyncWorkOnBehalfTicket
GetSystemPowerStatus
GetSystemTime
GetSystemTimeAsFileTime
GetTickCount
GetTickCount64
GetTokenInformation
GetVersionExW
GetWebAccountId
GetWebAccountProvider
GetWebAccountProviderFromProviderId
GetWebTokenSilentlyEx
GetWebTokenTimedOut
gj<_W3
Gmail
gmail.com
GO:#cR
GoldenPartnershipId
GoogleDefaultPadding
GoogleOAuthRedirectURI
GoogleOAuthTokenURI
GoogleOAuthURI
GoogleUserInfoURI
gvType == GUID_VALIDATION_GUID || gvType == GUID_VALIDATION_DATASOURCE
H!ZIg\
HasNeverSyncedSuccessfully
HeapAlloc
HeapFree
hr == ((HRESULT)0L)
hr == ((HRESULT)0L) || 0 != rghObjects[1]
hr == ((HRESULT)0L) || hMutex != 0
hr == ((HRESULT)0x85050013)
hr == E_ACCOUNT_NOTFOUND
hr == S_OK
hr == S_OK || hMutex != 0
hr == S_OK || NULL != rghObjects[1]
hrDelete
hresult
HRESULT
HrGetOneProp
hrRewrite
HrSetOneProp
HTMLTruncation
http://
https%3A%2F%2Fmail.google.com
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcalendar
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcarddav
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email
https://
https://login.microsoft.com
https://outlook.office.com
icloud.com
IeRtUtil.dll
If90u
ij<^V
info != nullptr
InitializeCredVault
InitializeCriticalSection
InitializeCriticalSectionEx
InitializeMeContact
InitializeMsaStore
InitializeServerReadyEvents
InitializeSRWLock
InitializeSyncStatus
InitOnceBeginInitialize
InitOnceComplete
initWithWindow->Initialize(callerWindow)
InProcLogger.DLL
InprocLogger.dll
inspectable.As(&initWithWindow)
InternalName
InvalidateOAuthAccessTokenForPartnership
IPM.Schedule.Meeting.Canceled
IPM.Schedule.Meeting.Notification.Forward
IPM.Schedule.Meeting.Request
IPM.Schedule.Meeting.Resp.Neg
IPM.Schedule.Meeting.Resp.Pos
IPM.Schedule.Meeting.Resp.Tent
IsACOn
isalnum
IsDebuggerPresent
IsFirstSyncEver
IsMatchingClientCertificateEx
IsNotSupposedToSync
IsPwdSaved
IsScreenOn
IsValidAADAuthUri
it != m_objectMap.npos()
it == 0
j)[SP
j=Zf;T^
jI_PQ
jPRPj
jPSPQRV
jsonObject->GetNamedString( HStringReference(L"access_token").Get(), accessToken.GetAddressOf())
kD$(<
kD$8<
kD$H<
kD$X<
kernelbase.dll
konecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoaccountscallbackregistration.cpp
L$ +C\
L$ +C<
L$ HP
L$ Qh}
L$ Qj
L$ QP
L$ QW
L$$QP
L$(Qhb
L$(Qj
L$(Qj,P
L$(QP
L$,_^[3
L$,QP
L$,SP
L$@Qh{
L$@Qj
L$\_^[3
L$`Qj
L$`QVP
L$<_^[3
L$<Pj
L$0+D$ 
L$0j(QP
L$0Qh|
L$0Qj
L$4QP
L$8+D$(
L$8hxV
L$8Qhh
L$8Qj7P
L$d_^[3
L$DGW
L$HQVP
L$L^[3
L$l_^[3
L$PQhz
L$pQj
L$PQj
L$PQVP
L$t_^[3
LASTATTEMPTTIME
LastSuccessfulHeartbeat
LASTSUCCESSTIME
LastSyncAttempt
LastSyncSuccess
LCMapStringW
LeaveCriticalSection
LegalCopyright
lineNumber
listener->add_AccountAdded(addedHandler.Get(), &addedToken)
listener->add_AccountChanged(changedHandler.Get(), &changedToken)
listener->add_AccountDeleted(deletedHandler.Get(), &deletedToken)
LMNOPQYZ[_`abdemq
LoadHeartbeatValues
LoadLibraryExW
LoadLibraryW
LoadStringW
Local\SM0:%lu:%lu:%hs
LocalAlloc
LocalFree
LogHr
LogNt
LogRollOverSize
LogSyncBiweeklySQM
lstrcmpiW
lstrcmpW
M QRSP
m.google.com
m_accountName.assign(L"ServerLog")
m_accountName.assign(pSettings->pAccountName)
m_activityRefCount == 0
m_clientId.assign(pClientId)
m_clientSecret.assign(pClientSecret)
m_completedEvent != 0
m_customAuthParams.assign(pCustomAuthParams)
m_datatypeList.push_back(guidType)
m_datatypeList.reserve(4)
m_endURL.assign(pEndURL)
m_EngineGuid != GUID_INVALID
m_ge.IsInitialized()
m_Name != 0
m_pPdcReference
m_redirectURL.assign(pRedirectURL)
m_refreshURL.assign(pRefreshURL)
m_scopes.assign(pScopes)
m_sources.push_back(mailSourcesList[i])
m_sources.push_back(serverSourcesList[i])
m_startURL.assign(pStartURL)
m_userNameHint.assign(pUsernameHint)
m_watchdogDisabled
mac.com
MailBodyTruncation
MailFileAttachments
MailIncoming
MailOutgoing
MailReceivedCount10kTo20k
MailReceivedCount20kTo40k
MailReceivedCount5kTo10k
MailReceivedCountOver40k
MailReceivedCountUnder5k
MailReceivedKB
mailSourcesList.push_back(guidSource)
mail-x
malloc
MAPIAllocateBuffer
MAPIFreeBuffer
MAPIInitialize
MAPILogonEx
MAPIUninitialize
MarkServerReady
MarkServerShutdown
MarkUserDataAccountAsHidden
MaxAttachmentSize
MaxCalendarAgeFilter
MaxEmailAgeFilter
MaxEmailBodyTruncationSize
MaxEmailHTMLBodyTruncationSize
MCCS\
MCCSPal.dll
me.com
Meeting:AllDay
Meeting:DisallowNewTimeProposal
Meeting:Occurences
Meeting:Reminder
Meeting:Timezone
memcmp
memcpy
memcpy_s
memmove
memset
message
Microsoft
Microsoft Corporation
Microsoft Smart Card Key Storage Provider
Microsoft.PPI.CredentialManagement.DeviceCredentialUtility
Microsoft.PPI.CredentialManagement.PPIDeviceCredentialReader
Microsoft.Windows.OneSync.DiagCritical
Microsoft.Windows.OneSync.DiagError
Microsoft.Windows.OneSync.DiagTrace
Microsoft.Windows.OneSync.DiagWarning
Microsoft.Windows.OneSync.SyncUtil
Microsoft.Windows.Unistack.FailureTrigger
MicrosoftDefaultPadding
MicrosoftOAuthRedirectURI
MicrosoftOAuthTokenURI
MicrosoftOAuthURI
MicrosoftUserInfoURI
Microsoft-Windows-MCCS-SyncUtil
MinutesBetweenFT
mode != Access_Create
module
MSFT-
Msg:[%ws] 
msvcrt.dll
MultiByteToWideChar
name.assign(pName)
ndrPropValues[0].ulPropTag == ((((ULONG)(0x0037))<<16)|((ULONG)(((ULONG) 31))))
ndrPropValues[1].ulPropTag == ((((ULONG)(0x0C1F))<<16)|((ULONG)(((ULONG) 31))))
NetworkHelper.dll
newAccessTokenValid
NextLogNumber
Nf9>u?h
notificationData && (0 != byteCountNotificationData)
ntdll.dll
NULL != ppResumeState
NULL != pScopeMetadata
NULL != pServerName
NULL != pSyncPartner
NULL != sessionScope
NULL == sessionScope
nullptr != m_activationHandle
nullptr != m_pTpTimer
nullptr != pDisplayName
nullptr == buffer.insert( buffer.end(), readBuffer, readBuffer + readCount)
nullptr == m_activationHandle
NumberOfLogs
OAuth
OAuthHelper_CreateInstance
OAuthRefreshToken
OLEAUT32.dll
OMTP11
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecoreuap\base\appmodel\UserDataAccess\
onecoreuap\base\MailContactsCalendarSync\
onecoreuap\base\MailContactsCalendarSync\Porting\Inc\AutoVariant.h
onecoreuap\base\MailContactsCalendarSync\Porting\Inc\EntryIdEx.h
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Idl\objfre\i386\AccountAccessorTypes.h
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Inc\EnumMAPITable.h
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Inc\SyncDeadlockWatchDog.h
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Inc\SyncDeadlockWatchdog.h
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Inc\SyncPdcReference.h
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Inc\SyncResettableTimer.h
onecoreuap\base\mailcontactscalendarsync\utils\syncsqm\lib\sqmpartnertype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\accessorutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\accountpropertyutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\activesyncsourceinfo.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\asutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\authhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\authtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\base64.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\basicauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\comelevation.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\contactsyncutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\credutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\DelayedDBPropertiesStream.h
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\domutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easaadauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easauthtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easheartbeatcontroller.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumdatatypereg.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsource.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsourcereg.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsourceregsimple.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\fileutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\guidenumerator.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\heartbeatalgorithmbase.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\jsonhelpers.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\liveendpoints.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\mapiutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\msautils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthaccountutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthhelper.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthtokenutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\password.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\plaintextauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\pluginerror.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\policyutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\popimapsourceinfo.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ppiauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\radiomanager.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\registryutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\serverreadyindictor.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\smtpauthtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\sourcelock.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncbufferedstream.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synccalendaringutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncds.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synchttputils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synclogger.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncpersistentobjectmanager.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\SyncPersistentObjectManager.h
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncsessionhelpers.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncstatshelpers.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncstatusnotification.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\tokenbrokerutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\updaterestoreutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\webauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\webauthsettings.cpp
onecoreuap\internal\base\inc\WRLWinRTHelpers.h
onecoreuap\private\base\inc\CommsPoomHelpers.h
onecoreuap\private\base\inc\HashKeyHelper.h
onecoreuap\private\base\inc\SafeMapiProps.h
onecoreuap\private\base\inc\unistorehelper.h
OneStopFactory
OneSyncError
OPCOT
OpenMimeBufferedStream
OpenMutexW
OpenProcessToken
OpenProviderKey
OpenSemaphoreW
OpenThreadToken
organizations
OriginalFilename
originatingContextId
originatingContextMessage
originatingContextName
originTag.append(timeStamp)
originTag.assign(pOriginTag)
outcome
outlook.at
outlook.be
outlook.ca
outlook.ch
outlook.cl
outlook.cn
outlook.co.id
outlook.co.il
outlook.co.in
outlook.co.jp
outlook.co.kr
outlook.co.nz
outlook.co.th
outlook.co.uk
outlook.co.za
outlook.com
outlook.com.ar
outlook.com.au
outlook.com.br
outlook.com.hk
outlook.com.mx
outlook.com.my
outlook.com.pt
outlook.com.sg
outlook.com.tr
outlook.com.tw
outlook.com.vn
outlook.cz
outlook.de
outlook.dk
outlook.es
outlook.fi
outlook.fr
outlook.gr
outlook.hk
outlook.hu
outlook.ie
outlook.in
outlook.it
outlook.jp
outlook.lt
outlook.lv
outlook.my
outlook.nl
outlook.no
outlook.ph
outlook.rs
outlook.ru
outlook.se
outlook.sg
outlook.sk
outlookApp.CoCreateInstance(__uuidof(Application))
OutputDebugStringW
P1_HexInt32
P1_HResult
P1_Int32
P1_UnicodeString
P2_String
P3_UInt32
pAccessToken->assign(accessToken.GetRawBuffer(nullptr))
pAccount->get_UserName(userName.GetAddressOf())
pAccount->get_WebAccountProvider(&provider)
pAccountId->assign( WindowsGetStringRawBuffer(accountId.Get(), nullptr))
pAcessToken->assign(accessToken.GetRawBuffer(nullptr))
packageName.append(L"!")
packageName.append(storeIdAsString)
packageName.assign(c_emailProductId)
packages\ActiveSync\LocalState\DiagOutputDir
Padding
ParseDelimitedString
PartA_PrivTags
partnerId
PathCchAddBackslash
PathCchAddBackslash(pPath, pathLength)
PathCchCombine
PathCchCombine(pPath, pathLength, localDataPath, pRelativePath)
pBackendServiceType->assign(pServiceType)
pCidTemp.valid()
pCredential->assign(pPassword, passwordLength)
pCredential->get_Domain(&domain)
pCredential->get_Username(&userName)
pCredential->get_UserPrincipalName(&userPrincipalName)
pDeviceId->assign(deviceID)
pDeviceType->assign(deviceTypeDefault)
pdhrResult != 0
pDisplayState != nullptr
pDomain->assign(pszDomainName)
pEndPoint->assign(pStringValue.get())
pEndToken == pToken
pEntryId->assign(tempEntryId)
Performance
pEventData
pGuid != 0
pIdParams->append(L"&device_model=")
pIdParams->append(L"&device_name=")
pIdParams->append(L"device_id=")
PIMPR_DISPLAY_NAME == propertyValues[0].propid
PIMSTORE.dll
pIsTimeoutError
Pj@hpD
Pj8h@F
pKey != 0
pKey != NULL
pMsgStore
pName
policyKey.append(L"\\")
policyKey.append(partnerString)
policyKey.append(pPolicyInfo->pwszPolicyKey)
policyKey.append(pPolicyInfo->pwszPolicyName)
position != nullptr
postLocation.assign(m_refreshUri)
POutlookAppManager_CreateInstance
pPeriod != nullptr
PPPPQ
PPPPVRP
pProperty->assign( WindowsGetStringRawBuffer(propertyValue.Get(), nullptr))
pProvider->get_Id(providerId.GetAddressOf())
PPSWPh
ppTagArray
ppwszPassword
PQQQQ
PQQSVW
PreferredBodyType
pRefreshToken->assign(refreshToken.GetRawBuffer(nullptr))
pReportError
pRequest->get_Properties(&requestProperties)
pResult->get_ResponseData(&responseData)
pResult->get_ResponseStatus(&requestStatus)
ProductName
ProductVersion
Prop_AnsiString
Prop_Dword
Prop_FileTime1
Prop_HexInt32
Prop_String
Prop_String1
Prop_String2
Prop_String3
Prop_StringA_1
Prop_StringA_2
properties->HasKey( HStringReference(pPropertyName).Get(), &hasProperty)
properties->Insert( HStringReference(L"client_secret").Get(), HStringReference(pClientSecret).Get(), &replaced)
properties->Insert( HStringReference(parameter.first.c_str()).Get(), HStringReference(parameter.second.c_str()).Get(), &replaced)
properties->Lookup( HStringReference(pPropertyName).Get(), propertyValue.GetAddressOf())
props!=0
props!=NULL
props==0
props==NULL
protocolReturnData.assign(pAuthCodeResponse)
providerErrorText
providerWithAuthotity->get_Authority(authority.GetAddressOf())
PRVAT
pServerName->assign(L"m.google.com")
PSSh 
PSSh@
PSSh<%
pString->Get(&length, &pStringValue)
pSyncAttemptTime
pSyncSuccessTime
pszMultiByteStr
pszValue
pTags->cValues == (sizeof(*RtlpNumberOf(spta.aulPropTag)))
pTags->cValues == ARRAYSIZE(spta.aulPropTag)
pTargetType == AuthTargetType::GetAuthTargetType(AuthTargetKind::ExchangeActiveSync)
pToken->assign( WindowsGetStringRawBuffer(token.Get(), nullptr))
pTokenExpirationTime->assign(conversionBuffer)
pTokenType->assign(tokenType.GetRawBuffer(nullptr))
pUrlParam->append(escapedUrl.c_str())
pUser->assign(((&userVar)->bstrVal))
pUserName->assign( WindowsGetStringRawBuffer(userName.Get(), nullptr))
pUsername->assign(account.GetRawBuffer(nullptr))
pUsername->assign(hstrAccount.GetRawBuffer(nullptr))
pusOid != 0
pValue == tlx::iwstring_view_ascii(pStringValue, length)
pValue->append(uri, beginIndex, valueLength)
pValue->assign(GetVariantString(&propValue, L""))
PVQh?
PVSh?
PVVVVC
PWh$Y
PWSh?
PWSSh
pwszWideCharStr
Q 9Q(}
q(9>u
Q0X0j1
Qj6Q3
QjaW3
QjbQ3
QjcQ3
QjCQB
QjkW3
QjlQ3
QjNQ3
QjoW3
QjRh8m
QPh$J
QQhH(
QQhL(
QQQQQ
QQSVW
QQSVWh
QQVW3
QQVWh
QQVWQ
QRPh\?
QRPh\@
QRPh|?
QRPh|@
QRPh<?
QRPh<@
QSh$_
QSh|^
QSh0`
QSh8/
QShH^
QShH_
QShl_
QSVW3
QueryPerformanceCounter
QueryTransientObjectSecurityDescriptor
QWh@5
QWh0`
QWh8/
r=VWju_
R0m0y0
RadioManager::MarkInterfaceAsActive
RaiseException
RaiseFailFastException
reader->Read(&credential)
ReadFile
ReadOAuthRefreshTokenForPartnership
ReadPasswordForPartnership
reason
ReceivedMailCount
refresh_token
RefreshUri
RefreshWebTokenSilentlyEx
RegCloseKey
RegCreateKeyExW
RegDeleteKeyW
RegDeleteTreeW
RegDeleteValueW
RegEnumKeyExW
RegEnumValueW
RegGetValueW
RegisterSsoAccountsCallback
RegOpenKeyExW
RegOpenKeyW
RegQueryInfoKeyW
RegQueryValueExW
RegSetValueExW
ReleaseDataStoreLock
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
REPORT.IPM.Note.NDR
request.append( (OAuthGrantType::Implicit == grantType) ? L"token" : L"code")
request.append(accountInfoURI)
request.append(escapedRedirectUri.c_str())
request.append(escapedUsername.c_str())
request.append(L"&")
request.append(L"&client_secret=")
request.append(L"&code=")
request.append(L"&grant_type=authorization_code")
request.append(L"&grant_type=refresh_token")
request.append(L"&login_hint=")
request.append(L"&redirect_uri=")
request.append(L"&refresh_token=")
request.append(L"&response_type=")
request.append(L"&scope=")
request.append(L"?access_token=")
request.append(L"?client_id=")
request.append(L"client_id=")
request.append(m_clientId)
request.append(m_clientSecret)
request.append(m_customAuthParams)
request.append(m_scopes)
request.append(m_startURL)
request.append(pAccessToken)
request.append(pRefreshToken)
request.append(protocolReturnData, beginIndex, authCodeLength)
request->get_Properties(&properties)
requestFactory->Create( pProvider, HStringReference(pScope).Get(), HStringReference(pClientId).Get(), &request)
requestParameters.emplace(L"authority", pAuthUri).first != nullptr
requestParameters.emplace(L"resource", utl::move(resourceUri)).first != nullptr
requestProperties->Insert( HStringReference(RequestAutorityPropertyName).Get(), authority.Get(), &replaced)
RequiredEncryptionSMIMEAlgorithm
RequiredSignedSMIMEAlgorithm
RequireEncryptedSMIMEMessages
RequireManualSyncWhenRoaming
RequireSignedSMIMEMessages
res == 0L
ResetEvent
ResolveDelayLoadedAPI
resource
resourcesLib.valid()
resourceUri.assign(pResourceUri, uriLength)
ResourceUrl
response->get_Token(token.GetAddressOf())
responseBody.reserve(++wideCount)
responseData->GetAt(0, &response)
result->get_DefaultWebAccount(&account)
ReturnHr
ReturnNt
rgName
RoActivateInstance
RoGetActivationFactory
rpmsg.message
RPSToken
RQh`k
RSDS8k
RtlCaptureContext
RtlClearThreadWorkOnBehalfTicket
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlGetDeviceFamilyInfoEnum
RtlGetThreadWorkOnBehalfTicket
RtlIsCriticalSectionLockedByThread
RtlIsCriticalSectionLockedByThread(&(_pAtlModule->m_csStaticDataInitAndTypeInfo.m_sec))
RtlIsMultiSessionSku
RtlReportException
RtlSetThreadWorkOnBehalfTicket
rXQPW
s!Qh>
s_objectManager != 0
s_objectManager != NULL
SafeCustomerId
SafeCustomerId is: '%S', parsed value: %I64d, end index: %d
SafeLPWSTR
ScheduledSyncPeriod
Scheme
Scope
scopes->append(pProviderInfo->ScopeAccountInfo)
scopes->append(pProviderInfo->ScopeCalendar)
scopes->append(pProviderInfo->ScopeContacts)
scopes->append(pProviderInfo->ScopeMail)
scopes->append(pProviderInfo->ScopeSeperator)
sdct-w
sdpp-w
securePassword->Get(&passwordLength, &pPassword)
SelectionLanguage
SelectionNamespaces
SentMailCount
Server
ServerLog
serverSourcesList.push_back(guidSource)
ServerSync:AttOID
ServerSync:FileURI
ServerSync:FolderName
service::ssl.live.com::MBI_SSL
SetAuthCertHash
SetBatterySaverWnfName
SetConversationId
SetDefaultStoreDirty
SetEvent
SetLastError
SetMonitorDisplayState
SetOutgoingMessageSizeLimit
SetSyncWorkOnBehalfTicket
SetThreadpoolTimer
SetUnhandledExceptionFilter
SHCreateMemStream
SHGetKnownFolderPath
SHGetKnownFolderPath( knownFolderId, KF_FLAG_DONT_VERIFY, nullptr, replace(localDataPath))
ShouldReportAssertionFailure
sizeof(CEENTRYID) == storeEntryIdPropVal->Value.bin.cb
Sleep
SleepConditionVariableSRW
SMIMEAlwaysEncrypt
SMIMEAlwaysSign
SNProviderAccountName
Software\Microsoft\AccountSettings
Software\Microsoft\ActiveSync
Software\Microsoft\ActiveSync\Environment
Software\Microsoft\ActiveSync\Partners
Software\Microsoft\ActiveSync\Security\Provision
Software\Microsoft\PPI\Settings\DeviceAccount
source != GUID_INVALID
source != GUID_NULL
SPERF_TAG_LOAD_XMLDOM
srcText
SSj P
SsoId
SsoProviderMSA == providerType
SsoTokenTarget
SspiCli.dll
SSRPV
SSShh
StateTransition
Status
StoreId
storeIds[0] != storeIds[1]
StoreType
strcspn
StringCbLengthA(pData, 2147483647 * sizeof(CHAR), &stringSize)
StringCbLengthW( credentialValue, credentialValueMaxLength * sizeof(WCHAR), &pwdSizeInBytes)
StringCchCatW(filePath, (sizeof(*RtlpNumberOf(filePath))), pFileName)
StringCchCatW(pwszBuffer, cchBufferSize, s_ServerTypeTable[type])
StringCchCatW(pwszBuffer, cchBufferSize, wszDataSource)
StringCchCopyExW( target, targetLength, pPrefix, &pEnd, &countCharsRemaining, 0)
StringCchCopyW( m_logPostfix, (sizeof(*RtlpNumberOf(m_logPostfix))), pSettings->logFilePostfix)
StringCchCopyW( m_logPrefix, (sizeof(*RtlpNumberOf(m_logPrefix))), pSettings->logFilePrefix)
StringCchCopyW(lineBuffer + HEX_LINE_CHARS, destinationSize, L"\r\n\0")
StringCchCopyW(pBuffer, bufferLength, value.c_str())
StringCchCopyW(pDestinationFileName, 260, pDefaultName)
StringCchCopyW(pPassword, passwordLen, pTmp)
StringCchCopyW(pwszBuffer, cchBufferSize, wszCredentialName)
StringCchCopyW(pwszPassword, dwPasswordLen, szNoPassword)
StringCchCopyW(retVal, addressLength, pMatchedAddress)
StringCchCopyW(retVal, bufferLength, localUsername.c_str())
StringCchLengthW(pBody, c_maxNDRBodySize, &contentLength)
StringCchLengthW(pMatchedAddress, (2147483647 - 1), &addressLength)
StringCchLengthW(pSubjectFormat, c_maxSubjectSize, &subjectFormatSize)
StringCchLengthW(pwszBuffer, cchBufferSize, &cchTempTargetName)
StringCchLengthW(pwszServer, MAX_SERVER_NAME_LENGTH, &cchServerSize)
StringCchPrintfA( partnerHeader, (sizeof(*RtlpNumberOf(partnerHeader))), c_partnerMapping, partnerGuid, TraceGetPartnerId(m_partner))
StringCchPrintfA(timeStamp, (sizeof(*RtlpNumberOf(timeStamp))), "[%02d/%02d/%04d %02d:%02d:%02d.%03d] \r\n", SystemTime.wDay, SystemTime.wMonth, SystemTime.wYear, SystemTime.wHour, SystemTime.wMinute, SystemTime.wSecond, SystemTime.wMilliseconds)
StringCchPrintfExW( deviceTypeFamily, sizeof(*__countof_helper(deviceTypeFamily)), nullptr, nullptr, 0x00000800, L"%u", deviceFamily)
StringCchPrintfW( pFileName, 260, L"%s%s%s-%d.txt", m_logPrefix, sanitizedFileName, m_logPostfix, logNumber)
StringFileInfo
StringFromGUID2
StringFromGUID2 ( partnerGuid, wszDataStoresLockName, 40 )
StringFromGUID2(dataTypeID, wszType, (sizeof(*RtlpNumberOf(wszType))))
StringFromGUID2(partner, partnerString, (sizeof(*RtlpNumberOf(partnerString))))
StringFromGUID2(source, wszDataSource, (sizeof(*RtlpNumberOf(wszDataSource)))) != 0
strspn
StrStrIW
SUCCEEDED(_IsValidToken(currentToken, &valid)) && (FALSE != valid)
SUCCEEDED(hr)
SUCCEEDED(hr) && (info != NULL)
SUCCEEDED(hr) && (info != nullptr)
success
SVWj$
SVWj8
SVWPh$
SVWu4
SVWu4jS_W
SVWu6
Sync utilities for mail, contacts, calendar
SYNC_CERT
SyncGetDeviceUniqueID
SyncPassword
SyncPdcReference_WatchdogReport
SyncPdcReference_WatchdogsEnabled
syncPeriodInMinutes != invalidPeriod
SyncRes.dll
SyncServer
syncServices.CoCreateInstance(__uuidof(POSyncServices))
SyncSqmUpdateStats
SyncStatusEventType_None == pEventData->eventType || SyncStatusEventType_Reset == pEventData->eventType
SyncUseSSL
SyncUtil
SyncUtil.dll
SYNCUTIL.dll
SyncUtil.pdb
SyncUtil_OAuth_GetTokensFromAuthCode
SyncUtil_OAuth_RefreshTokens
SyncUtil_XMLParse_LoadFailFilePos
SyncUtil_XMLParse_LoadFailHresult
SyncUtil_XMLParse_LoadFailReason
SyncUtil_XMLParse_LoadFailSrcText
SyncUtil_XMLParse_LoadFailUrl
SyncWerReportComponentName
SyncWerReportGenerator
SyncWhenRoaming
SystemTimeToFileTime
t$ PQ
t$ Yt@+
t$(PQ
t$VSW
t&hDk
t&j<_
t:j7^V
t;jE^V
t\jN_W
t+ju_
t+Qho
t1j_^V
t6j@^
t8WjJ_W
TASKX
tcPRQ
tDjV^V
TempContact:DisplayName
TEMPH
TEMPP
TEMPT
tempUserId.append(L"\\")
tempUserId.append(pUserName)
tempUserId.assign(pDomain)
TerminateProcess
threadId
tk!\$
tlx::append_sprintf(tempString, L"%s=", paramName)
tlx::assign_sprintf( *pAuthorization, L"%s %s", m_authScheme.c_str(), pCredential)
tlx::assign_sprintf( *pAuthorization, L"Basic %hs", encodedCredentials.c_str())
tlx::assign_sprintf( keyPath, L"%s\\WebAuth\\%s", c_wszActiveSyncKey, pProviderId)
tlx::assign_sprintf( m_account, L"%s\\%s", domain.c_str(), userId.c_str())
tlx::assign_sprintf( monikerName, L"Elevation:Highest!new:%s", classIdString)
tlx::assign_sprintf( requestBody, L"client_id=%s&client_secret=%s&grant_type=refresh_token&refresh_token=%s&scope=%s", _GetClientId().c_str(), _GetClientSecret().c_str(), pRefreshToken, _GetScope().c_str())
tlx::assign_sprintf( subject, pSubjectFormat, c_maxSubjectSize - subjectFormatSize, pOriginalSubject)
tlx::assign_sprintf( wideCredentials, L"%s:%s", GetAccount(), pCredential)
tlx::assign_sprintf(userAgent, L"%s%s-%d/%u.%u.%u", c_wszHttpUserAgent, pwszDevice.get(), deviceFamily, OSVersionInfo.dwMajorVersion, OSVersionInfo.dwMinorVersion, OSVersionInfo.dwBuildNumber)
tlx::assign_wide( multiByteCredentials, wideCredentials, 0)
token
token_type
tokenBroker->GetDefaultSignInAccountAsync( &getDefaultSignInAccountResultOperation)
TokenBrokerError
tokenType
Tonecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\internetmailauthtargettype.cpp
Trace
Translation
true == m_watchdogDisabled
TryGetDefaultSignInAccountInfo
tSWSW
u!j!_
u!j/_
u!j:_
u!j\_
u!ja_
u!jl_
u!jP_
u$jf_
u$jg_
u$jV_
u$jY_
u$WSQ
u(jL_
u)j _
u)j"_
u)j@3
u)jQ_
u)jS_
u*j[_
u*jX_
u*QhY
u,j[_
u,jT_
u,jt_
u.j]_
u.QhY
u/j+^
u/jj^
u:j6_W
u<Sj=[S
u0j]^V
u1j:^V
u1jX[S
u2j@^
u2j8_W
u2jB_
u3WjK_W
u4j`^V
u4j0_
u5j*[S
u5j\_
u5j<^V
u5j>^V
u5jC^V
u5jm_
u5jo^V
u5jp^V
u6j1^V
u7j"[
u7jU_
u8Sjn[S
u8WjP_W
UIntPtrToInt(buffer.size(), &bufferSize)
u-jR^
uLj`_
ULongAdd((ULONG)[](size_t num) { ULONG out = 0xffffffffUL; do { HRESULT _hrTemp = Typecheck::CheckChrType(UIntPtrToULong(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\password.cpp", 139  ); } } while(0,0); return out; }(pwdSizeInBytes), sizeof(WCHAR), &blobSizeInBytes)
UnhandledExceptionFilter
UninitializeServerReadyEvents
UpdatedMailCount
UpdateYahooAccountType
uri.assign(pProtocolReturnData)
uriFactory->CreateUri(HStringReference(m_redirectURL.c_str()).Get(), &callbackUri)
uriFactory->CreateUri(HStringReference(request.c_str()).Get(), &startUri)
url.append(pAppend->c_str())
url.append(pAppend->c_str(), c_MaxParamSize)
UrlUnescapeW
UrlUnescapeW(pValue->data(), nullptr, nullptr, 0x00100000)
UseBuiltInTeamDeviceAccount
UserDataTimeUtil.dll
UserDataTypeHelperUtil.dll
username=
USOIDfromCEENTRYID
uVj;_
v,Shd'
V_VT(&nameVar) == VT_BSTR
value.assign(pValue)
VarFileInfo
VaultAddItem
VAULTCLI.dll
VaultCloseVault
VaultCreateItemType
VaultFree
VaultGetItem
VaultGetItemType
VaultOpenVault
VaultRemoveItem
VerifyDataStoreLockOwner
VPhl|
VPhPb
VS_VERSION_INFO
VSWRh
vThH'
VVh0Y
VVVVGW
VVVVj
VWhDY
VWPhl|
VWSh0}
w PQQQQS
wabBrokerStatics->AuthenticateWithCallbackUriAndContinue( startUri.Get(), callbackUri.Get())
WaitForMultipleObjects
WaitForServerReady
WaitForSignalOrShutdown
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
WakeAllConditionVariable
Warning
watchdogDurationMs
watchdogStartTime
wcscat_s
wcschr
wcscspn
wcsncmp
wcsnlen
wcsrchr
wcsstr
wcstok_s
webAuthCore->FindAccountAsync( pProvider, HStringReference(pAccountId).Get(), &findAccountOperation)
webAuthCore->FindAccountProviderAsync( HStringReference(pProviderUri).Get(), &findAccountProviderOperation)
webAuthCore->FindAccountProviderWithAuthorityAsync( HStringReference(pProviderUri).Get(), HStringReference(pAuthority).Get(), &findAccountProviderOperation)
webAuthCore->GetTokenSilentlyAsync( pRequest, &webTokenRequestResultOperation)
webAuthCore->GetTokenSilentlyWithWebAccountAsync( pRequest, pAccount, &webTokenRequestResultOperation)
WebTokenRequestStatus_Success != requestStatus
WEVT_TEMPLATE
WideCharToMultiByte
WilError_03
WilFailureNotifyWatchers
wilResult
win:Error
win:Informational
win:Start
win:Stop
win:Verbose
win:Warning
Windows.Data.Json.JsonObject
Windows.Foundation.Uri
Windows.Internal.Security.Authentication.Web.TokenBrokerInternal
Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager
Windows.Security.Authentication.Web.Core.WebTokenRequest
Windows.Security.Authentication.Web.WebAuthenticationBroker
WindowsCreateString
WindowsCreateStringReference
WindowsDeleteString
WindowsGetStringRawBuffer
WindowsLiveActiveSync
WindowsLiveServiceTarget
WindowsLiveStorage
WindowsMail
WINHTTP.dll
WinHttpCrackUrl
WinHttpCrackUrl(pResourceUri, 0, 0, &urlComponents)
WinHttpCrackUrl(providerUri.c_str(), 0, 0, &urlComponents)
WinSqmAddToStreamEx
WinSqmEndSession
WinSqmStartSession
WLAccountSyncEnabled
WriteOAuthRefreshTokenForPartnership
WritePasswordForPartnership
wszName != 0
WVh0Y
www.google.com
WWWRQ
WWWWWWhN
Xf9D$
Xf9D$ 
XPath
xZSVW
y Qjn3
y!j\_
y!jF_
y"j"_
y"ju_
y#Qjm3
y$j=_
y$jC^
y$jK_
y%Qjj
y&QjR3
y)jW^
y)Qh<
y*Qh8
y,jF^
y:Qhx
y]Qhg
Y__^[
y1jf[S
y1Qh_
y5jC_
Yahoo
yahoo
YahooDefaultPadding
YahooOAuthRedirectURI
YahooOAuthTokenURI
YahooOAuthURI
YahooUserInfoURI
yBQji
ycal-w
y'j5^
y'j6^
y'jt_
y'jw_
y'jz_
yMQjH3
y'Qj4
y'QjpQ3
YY_^[
YY_^]
YYQjv3
