     
                level="requireAdministrator"
                uiAccess="false"
            />
            <requestedExecutionLevel
        </requestedPrivileges>
        <requestedPrivileges>
     Architecture = %s
     Hardware Configuration: %s
     OS Version = %d.%d.%d
     ProductType = %d
     Service Pack = %d.%d
     Suite = 0x%04x
    </security>
    <security>
    name="Microsoft.Windows.PnpPolicy"
    processorArchitecture="amd64"
    type="win32"
    version="5.1.0.0"
   . 
 %02d:%02d:%02d.%03d
 %04d/%02d/%02d
 A^_^
 A_A^_
 A_A^A\
 A_A^A]A\_
 H3E H3E
 Microsoft Corporation. All rights reserved.
 Operating System
 os: Version = %d.%d.%d, Service Pack = %d.%d, Suite = 0x%04x, ProductType = %d, Architecture = %s
 u";\$xs
 Windows
!    
!!!  
!\$PA
!|$ H
!|$(H
!D$ H
!fE9~
!This program cannot be run in DOS mode.
%s.%04d%02d%02d_%02d%02d%02d.%s
%s.????????_??????.%s
(A^_^[
.00cfg
.CRT$XCA
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.data
.data$brc
.edata
.gehcont
.gfids
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$brc
.rdata$voltmd
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$mn
.text$mn$00
.text$x
.xdata
:9^0u
@.data
@.reloc
@.rsrc
@A^^[
@A^_^
@A_A^A\_^
@A_A^A]
@SUVWATAUAVAWH
@SVAVH
@UVWATAUAVAWH
[%s - %s]
[*] One or more matching policy restrictions that allow installation overrides the device restrictions:
[*] One or more matching policy restrictions that would allow the device have been ignored.
[-] Removable devices are restricted
[-] Restricted Hardware or Compatible ID: %ws
[-] Restricted Instance ID: %ws
[-] Restricted setup class of selected driver: %ws
[+] Hardware or Compatible ID: %ws
[+] Instance ID: %ws
[+] Setup class of selected driver: %ws
[+] Setup class of the selected driver: %ws
[BeginLog]
[Boot Session: %04d/%02d/%02d %02d:%02d:%02d.%03d]
[Device Install Log]
[Exit status: FAILURE(0x%08x)]
[Exit status: SUCCESS (%s)]
[Exit status: SUCCESS]
[Exit]
\$ E3
\$ UH
\$ UVWATAUAVAWH
\$ UVWH
\$(E3
\$Hu-
\$P9t$|
\REGISTRY\MACHINE
\REGISTRY\MACHINE\SOFTWARE\Classes
\REGISTRY\MACHINE\SYSTEM\CurrentControlSet\Hardware Profiles\Current
\REGISTRY\USER
__C_specific_handler
_amsg_exit
_callnewh
_initterm
_resetstkoflw
_vsnprintf
_vsnwprintf
_wcsdup
_wcsicmp
_XcptFilter
` AUAVAWH
`.rdata
{Device installation policy check [%ws] exit(0x%08x)}
{Device installation policy check [%ws]}
{Device Installation Restrictions Policy Check - exit(0x%08x)}
{Device Installation Restrictions Policy Check}
{Device Removal Initiated by Policy Change [%ws] exit(0x%08x)}
{Device Removal Initiated by Policy Change [%ws]}
|$ ATAUAVH
|$ UAVAWH
|$ UH
|$(E3
|$2:u
<!-- Copyright (c) Microsoft Corporation -->
</assembly>
</trustInfo>
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<<<  
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
<assemblyIdentity
<description>Device Installation Group Policy Change Handler</description>
<ins>
<insu
<trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
>>>  
040904B0
0A^A\_
0A_A^_
10.0.22621.1
10.0.22621.1 (WinBuild.160101.0800)
9\$$u
9\$Dt(H
9\$Dt-E;
9\$Ht%H
9\$ht=E
9\$Hu
9\$lt
9\$Lt
9\$Lt*H
9\$Pt'H
9\$Tt'H
9\$Xt<L
9t$@t6E
9t$`u*L
9t$Pt/L
A^A]A\
A_A^]
A_A^_^]
A_A^A\_]
A_A^A]
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^]
AdjustTokenPrivileges
AllowDenyLayered
AllowDeviceClasses
AllowDeviceIDs
AllowInstanceIDs
amd64
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-shutdown-l1-1-1.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-devices-config-l1-1-1.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
ATAVAWH
CloseHandle
CM_Get_Device_Interface_List_SizeW
CM_Get_Device_Interface_ListW
CM_Get_Device_Interface_PropertyW
CM_Get_DevNode_PropertyW
CM_Locate_DevNodeW
CM_MapCrToWin32Err
CM_Query_And_Remove_SubTreeW
CM_Set_DevNode_PropertyW
CM_Setup_DevNode
CompanyName
CompareStringOrdinal
CompareStringW
CreateDirectoryW
CreateEventW
CreateFileMappingW
CreateFileW
CreateHardLinkW
CreateMutexW
CreateThread
D$ E3
D$@E3
D$`E3
D$`fD
D$0H;
D$4E;
D$8E3
d$DE3
D$hE3
D$HE3
D$HH;
D9|$@t1H
D9|$dt
D9|$DvDE3
D9|$Xt
D9d$ht
D9s t
D9t$$u
DeleteFileW
DenyDeviceClasses
DenyDeviceClassesRetroactive
DenyDeviceIDs
DenyDeviceIDsRetroactive
DenyInstanceIDs
DenyInstanceIDsRetroactive
DenyRemovableDevices
Device installation policy allows installation of %ws
Device installation policy will be deferred until a driver is selected for %ws
Device Installation Restrictions Policy Check
Device required reboot: %ws
DeviceIoControl
DEVRTL.dll
DevRtlWriteTextLog
DI_DO_DEFAULT
DiInstallDevice
DisableThreadLibraryCalls
DllCanUnloadNow
DllGetClassObject
DrvInst.exe_mutex_{5B10AC83-4F13-4fde-8C0B-B85681BA8D73}
DuplicateTokenEx
E(=csm
E@HcM
E`HcM0H
E0!}@L
E8=csm
Eh=csm
EH=csm
en-US
EventWriteTransfer
Ex=csm
EX=csm
ExpandEnvironmentStringsW
f9<Fu
f94Au
f94Yu
fA9*t
Failed to copy device installation policies. Error = 0x%08X
Failed to create device configuration policies. Error = 0x%08X
Failed to delete device configuration policies. Error = 0x%08X
Failed to open device installation policies. Error = 0x%08X
fB9<hu
fB94pu
fD90t
fD94Yu
fD96u
fD97tj
fD9d$4
fD9'tw
fE9$@u
fE9$hu
fE9<Fu
FileDescription
FileTimeToLocalFileTime
FileTimeToSystemTime
FileVersion
FindClose
FindFirstFileW
FindNextFileW
FlushFileBuffers
ForceReboot
FreeLibrary
FreeLibraryAndExitThread
GetCommandLineA
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetFileAttributesW
GetFileInformationByHandle
GetFileSize
GetFullPathNameW
GetKernelObjectSecurity
GetLastError
GetLocalTime
GetModuleFileNameA
GetModuleHandleExW
GetModuleHandleW
GetProcAddress
GetProcessHeap
GetSystemInfo
GetSystemTimeAsFileTime
GetSystemWindowsDirectoryW
GetTickCount
GetTickCount64
h VWAVH
H!|$ H
H!x H
H;}Xu
H+C(H=
H9\$0t
H9\$8t
H9\$Xt
H9y(u
hA_A^A]A\_^][
HardwareConfigState
HcQ<H
HeapAlloc
HeapFree
HeapReAlloc
InitiateShutdownW
Installation restriction exists but is not applied to existing device: %ws
InternalName
KERNEL32.dll
L$ E3
L$ L+
L$ SVWAVH
L$ SVWH
L$$E;
L$0fD
L$0H;
L$PD)|$DJ
L$PE3
L$PH3
L$xE3
L$XH3
L9|$`t
L9|$ht
LastConfig
LcA<E3
LCMapStringW
LegalCopyright
LoadLibraryExW
LogLevel
LogMask
LogMaxFileSize
LogPath
malloc
MapViewOfFile
memcpy
memmove
memset
Microsoft
Microsoft Corporation
MoveFileExW
msvcrt.dll
newdev.dll
No drivers available for blocked device: %ws
no title
NtClose
NtCreateKey
NtDeleteValueKey
ntdll.dll
NtOpenKey
NtQueryInformationFile
NtQueryKey
NtQuerySystemInformation
NtQueryValueKey
NtSetInformationFile
NtSetValueKey
OpenProcessToken
OpenThreadToken
OriginalFilename
p AWH
p0R^G'
PA_A^A]_^[]
pnppolicy
pnppolicy Task
pnppolicy.dll
pnppolicy.pdb
PortableOperatingSystem
Previously allowed device is now blocked by policy [%ws]
Previously blocked device is now allowed by policy [%ws]
ProductName
ProductVersion
pSetupStringFromGuid
q:_0#
q0R^G'
QueryPerformanceCounter
Queuing device %ws for removal.
R9=9r
RaiseException
REBOOT_INITIATED
REBOOT_REQUIRED
RebootTime
RegCloseKey
RegCopyTreeW
RegDeleteTreeW
RegEnumValueW
RegOpenKeyExW
ReleaseMutex
RESTART_REQUIRED
Restrictions
ResumeThread
RtlCaptureContext
RtlFormatCurrentUserKeyPath
RtlFreeUnicodeString
RtlGetPersistedStateLocation
RtlGetVersion
RtlInitUnicodeString
RtlInitUnicodeStringEx
RtlLookupFunctionEntry
RtlNtStatusToDosError
RtlNtStatusToDosErrorNoTeb
RtlQueryUnbiasedInterruptTime
RtlUpcaseUnicodeString
RtlVirtualUnwind
Section end
Section start
SetEndOfFile
SetEvent
SetFileAttributesW
SetFilePointer
SetLastError
SetThreadToken
SetUnhandledExceptionFilter
setupapi.app.log
setupapi.dev.log
SETUPAPI.dll
setupapi.ev1
setupapi.ev2
setupapi.ev3
setupapi.offline.log
SetupDiBuildDriverInfoList
SetupDiCallClassInstaller
SetupDiCreateDeviceInfoList
SetupDiDestroyDeviceInfoList
SetupDiEnumDeviceInfo
SetupDiGetClassDevsW
SetupDiGetDeviceInstallParamsW
SetupDiGetDeviceInstanceIdW
SetupDiGetDevicePropertyW
SetupDiGetDriverInfoDetailW
SetupDiGetSelectedDriverW
SetupDiOpenDeviceInfoW
SetupDiRemoveDevice
SetupDiSetClassInstallParamsW
SetupDiSetDeviceInstallParamsW
SetupDiSetDevicePropertyW
SetupGetThreadLogToken
SetupOverride
SetupSetThreadLogToken
SetupVerifyInfFileW
SetupWriteTextLog
Sleep
SleepEx
Software\Microsoft\Windows\CurrentVersion\Setup
Software\Policies\Microsoft\Windows\DeviceInstall
STORAGE\VolumeSnapshot
StringFileInfo
System\CurrentControlSet\Control
System\DriverDatabase\Policies
System\HardwareConfig
SYSTEM\Setup\SetupapiLogRename
SYSTEM\Setup\SetupapiLogStatus
T$ A;
t$ WAVAWH
t$ WH
T$@E3
t$4fA;
t.L9I
t89\$Pu
t'9\$du
TerminateProcess
The device is explicitly allowed by the following policy settings:
The device is explicitly restricted by the following policy settings:
The system will restart in %d seconds in order to enforce device installation restriction policy.
toupper
Translation
u<fD9d$2u4A
UATAUAVAWH
Unable to add blocked device %ws to removal list. Error = 0x%08X
Unable to determine effective device class for blocked device: %ws
Unable to enumerate next device to uninstall. Error = 0x%08X
Unable to mark device for reinstall. Error = 0x%08X (0x%02X)
Unable to re-enumerate blocked device: %ws. Error = 0x%08X
Unable to reset device %ws state after NULL driver install. Error = 0x%08X
Unable to restart allowed device: %ws. Error = 0x%08X
Unable to restart blocked device: %ws. Error = 0x%08X
Unable to set remove params for blocked device: %ws. Error = 0x%08X
Unable to set up device %ws for NULL driver install. Error = 0x%08X
UnhandledExceptionFilter
UnmapViewOfFile
USVWAUAVAWH
UVWATAUAVAWH
UVWAVAWH
UWATAVAWH
VarFileInfo
VS_VERSION_INFO
VWATAVAWH
VWAVH
WaitForSingleObject
WaitForSingleObjectEx
WATAUAVAWH
WATAVH
WAVAWH
wcschr
wcsrchr
WideCharToMultiByte
WriteFile
x AVH
